{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\Cfvbscfa.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import axios from 'axios';\n\n// function Cfvbscfa({ selectedFacture }) {\n//   const [clName, setClName] = useState('');\n//   const [client_id, setClientCode] = useState('');\n//   const [date, setDate] = useState('');\n//   const [DT, setDT] = useState('1.000');\n//   const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//   const [references, setReferences] = useState([]);\n//   const [filteredClients, setFilteredClients] = useState([]);\n\n//   const remiseInputRef = useRef(null);\n\n//   useEffect(() => {\n//     axios.get('http://localhost:7777/articlesbsvcf')\n//       .then(res => {\n//         console.log('Fetched Articles:', res.data);\n//         const parsedArticles = res.data;\n//         setReferences(parsedArticles.map(article => article.refAr));\n//         setInputs(parsedArticles);\n//       })\n//       .catch(err => console.log('Error fetching articles:', err));\n//   }, []);\n\n//   useEffect(() => {\n//     if (selectedFacture) {\n//       console.log('Selected Facture in CreateFactureVente:', selectedFacture);\n//       setClName(selectedFacture.clName || '');\n//       setClientCode(selectedFacture.client_id || '');\n//       setDate(selectedFacture.date || '');\n//       setDT(selectedFacture.DT || '1.000');\n//       setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//     }\n//   }, [selectedFacture]);\n\n//   const fetchPriceByReference = (reference, index) => {\n//     axios.get(`http://localhost:7777/cfvbscf/${reference}`)\n//       .then(res => {\n//         const price = res.data.price;\n//         const newInputs = [...inputs];\n//         newInputs[index].price = price;\n//         setInputs(newInputs);\n//       })\n//       .catch(err => console.log('Error fetching price:', err));\n//   };\n\n//   const handleReferenceChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].refAr = value;\n//     setInputs(newInputs);\n//     fetchPriceByReference(value, index);\n//   };\n\n//   const handleRemiseChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].remise = value;\n//     setInputs(newInputs);\n//   };\n\n//   const handleQuantityChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].quantité = value;\n\n//     if (!isNaN(value) && value !== '') {\n//       axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//         .then(res => {\n//           const availableQuantity = res.data.quantity;\n//           const remainingQuantity = availableQuantity - parseInt(value);\n\n//           if (remainingQuantity < 0) {\n//             alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//             newInputs[index].quantité = availableQuantity; \n//           }\n\n//           setInputs(newInputs);\n//         })\n//         .catch(err => console.error('Error fetching quantity:', err));\n//     } else {\n//       alert('Veuillez entrer une quantité valide.');\n//     }\n//   };\n\n//   const handleAddInput = () => {\n//     const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n//     if (isEmpty) {\n//       alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n//       return;\n//     }\n//     setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\n//   };\n\n//   const calculateTotal = () => {\n//     if (!inputs) return 0;\n//     const total = inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité) * (1 - (curr.remise / 100)), 0) + parseFloat(DT);\n//     return total.toFixed(3);\n//   };\n\n// const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//     if (invalidReference) {\n//       alert(\"Sélectionner une référence valide\");\n//       return;\n//     }\n\n//     const refArArray = nonEmptyInputs.map(input => ({\n//       refAr: input.refAr,\n//       price: input.price,\n//       quantité: input.quantité,\n//       remise: input.remise\n//     }));\n\n//     const totalPrice = calculateTotal();\n//     try {\n//       console.log('Submitting data:', {\n//         clName,\n//         client_id,\n//         date,\n//         DT,\n//         refAr: refArArray,\n//         totalPrice\n//       });\n\n//       const res = await axios.post('http://localhost:7777/cfvbscf/', {\n//         clName,\n//         client_id,\n//         date,\n//         DT,\n//         refAr: refArArray,\n//         totalPrice\n//       });\n\n//       console.log('Response:', res.data);\n//       handleClear(); \n//       window.location.reload();\n//     } catch (err) {\n//       console.error('Error creating facture:', err.response ? err.response.data : err);\n//     }\n//   };\n\n//   const handleKeyPress = (event) => {\n//     if (event.key === 'Enter') {\n//       handleAddInput();\n//     }\n//   };\n\n//   const handleClientSelect = (name, code) => {\n//     setClName(name);\n//     setClientCode(code);\n//     setFilteredClients([]);\n//   };\n\n//   const handleClientChange = (e) => {\n//     const { value } = e.target;\n//     setClName(value);\n\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//       .then(res => {\n//         setFilteredClients(res.data);\n//       })\n//       .catch(err => console.log('Error fetching clients:', err));\n\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//       .then(res => {\n//         if (res.data.length > 0) {\n//           setClientCode(res.data[0].clID);\n//         } else {\n//           setClientCode('');\n//         }\n//       })\n//       .catch(err => console.log('Error fetching client code:', err));\n//   };\n\n//   const handleClientBlur = () => {\n//     setFilteredClients([]);\n//   };\n\n//   const handleClientCodeChange = (e) => {\n//     const { value } = e.target;\n//     setClientCode(value);\n\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\n//       .then(res => {\n//         if (res.data.length > 0) {\n//           setClName(res.data[0].clName);\n//         } else {\n//           setClName('');\n//         }\n//       })\n//       .catch(err => console.log('Error fetching client name:', err));\n//   };\n\n//   const handleUpdate = async (event) => {\n//     event.preventDefault();\n\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//     if (invalidReference) {\n//       alert(\"Sélectionner une référence valide\");\n//       return;\n//     }\n\n//     const refArArray = nonEmptyInputs.map(input => ({\n//       refAr: input.refAr,\n//       price: input.price,\n//       quantité: input.quantité,\n//       remise: input.remise\n//     }));\n\n//     const totalPrice = calculateTotal();\n//     try {\n//       const res = await axios.put(`http://localhost:7777/cfvbscf/update/${selectedFacture.id}`, {\n//         clName,\n//         client_id,\n//         date,\n//         DT,\n//         articles: refArArray,\n//         totalPrice\n//       });\n//       console.log(res.data);\n//       window.location.reload();\n//     } catch (err) {\n//       console.log('Error updating facture:', err);\n//     }\n//   };\n\n//   const handleClear = () => {\n//     setClName('');\n//     setClientCode('');\n//     setDate('');\n//     setDT('1.000');\n//     setInputs([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//   };\n\n//   return (\n//     <div style={{ margin: '20px', display: 'flex', flexDirection: 'column', alignItems: 'center', fontFamily: 'Arial, sans-serif', backgroundColor: '#f9f9f9', padding: '20px', borderRadius: '8px', boxShadow: '0 2px 4px rgba(0,0,0,0.1)' }}>\n//       <h2 style={{ marginBottom: '20px' }}>{selectedFacture ? 'Modifier Facture Vente' : 'Créer Facture Vente'}</h2>\n//       <form onSubmit={selectedFacture ? handleUpdate : handleSubmit} style={{ width: '100%', maxWidth: '600px' }}>\n//         <div style={{ marginBottom: '15px' }}>\n//           <label style={{ display: 'block', marginBottom: '5px' }}>Nom du client:</label>\n//           <input\n//             type=\"text\"\n//             value={clName}\n//             onChange={handleClientChange}\n//             onBlur={handleClientBlur}\n//             style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd', marginBottom: '5px' }}\n//           />\n//           {filteredClients.length > 0 && (\n//             <ul style={{ listStyleType: 'none', padding: '0', margin: '0', border: '1px solid #ddd', borderRadius: '4px', maxHeight: '100px', overflowY: 'auto' }}>\n//               {filteredClients.map(client => (\n//                 <li key={client.clID} onClick={() => handleClientSelect(client.clName, client.clID)} style={{ padding: '8px', cursor: 'pointer', backgroundColor: '#fff', borderBottom: '1px solid #ddd' }}>\n//                   {client.clName}\n//                 </li>\n//               ))}\n//             </ul>\n//           )}\n//         </div>\n//         <div style={{ marginBottom: '15px' }}>\n//           <label style={{ display: 'block', marginBottom: '5px' }}>Code client:</label>\n//           <input\n//             type=\"text\"\n//             value={client_id}\n//             onChange={handleClientCodeChange}\n//             style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\n//           />\n//         </div>\n//         <div style={{ marginBottom: '15px' }}>\n//           <label style={{ display: 'block', marginBottom: '5px' }}>Date:</label>\n//           <input\n//             type=\"date\"\n//             value={date}\n//             onChange={e => setDate(e.target.value)}\n//             style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\n//           />\n//         </div>\n//         <div style={{ marginBottom: '15px' }}>\n//           <label style={{ display: 'block', marginBottom: '5px' }}>DT:</label>\n//           <input\n//             type=\"text\"\n//             value={DT}\n//             onChange={e => setDT(e.target.value)}\n//             style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\n//           />\n//         </div>\n//         <table style={{ width: '100%', borderCollapse: 'collapse', marginBottom: '15px' }}>\n//           <thead>\n//             <tr>\n//               <th style={{ padding: '8px', border: '1px solid #ddd', backgroundColor: '#f1f1f1' }}>Référence Article</th>\n//               <th style={{ padding: '8px', border: '1px solid #ddd', backgroundColor: '#f1f1f1' }}>Quantité</th>\n//               <th style={{ padding: '8px', border: '1px solid #ddd', backgroundColor: '#f1f1f1' }}>Prix</th>\n//               <th style={{ padding: '8px', border: '1px solid #ddd', backgroundColor: '#f1f1f1' }}>Remise</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {inputs.map((input, index) => (\n//               <tr key={index}>\n//                 <td style={{ padding: '8px', border: '1px solid #ddd' }}>\n//                   <input\n//                     type=\"text\"\n//                     value={input.refAr}\n//                     onChange={e => handleReferenceChange(e, index)}\n//                     style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\n//                   />\n//                 </td>\n//                 <td style={{ padding: '8px', border: '1px solid #ddd' }}>\n//                   <input\n//                     type=\"text\"\n//                     value={input.quantité}\n//                     onChange={e => handleQuantityChange(e, index)}\n//                     style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\n//                   />\n//                 </td>\n//                 <td style={{ padding: '8px', border: '1px solid #ddd' }}>\n//                   <input\n//                     type=\"text\"\n//                     value={input.price}\n//                     readOnly\n//                     style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd', backgroundColor: '#f9f9f9' }}\n//                   />\n//                 </td>\n//                 <td style={{ padding: '8px', border: '1px solid #ddd' }}>\n//                   <input\n//                     type=\"text\"\n//                     value={input.remise}\n//                     onChange={e => handleRemiseChange(e, index)}\n//                     ref={remiseInputRef}\n//                     onKeyPress={handleKeyPress}\n//                     style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\n//                   />\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//         <button type=\"button\" onClick={handleAddInput} style={{ padding: '10px 20px', borderRadius: '4px', border: 'none', backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', marginBottom: '15px' }}>\n//           Ajouter une ligne\n//         </button>\n//         <p style={{ fontSize: '16px', fontWeight: 'bold' }}>Total: {calculateTotal()} DT</p>\n//         <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n//           <button type=\"submit\" style={{ padding: '10px 20px', borderRadius: '4px', border: 'none', backgroundColor: '#28a745', color: '#fff', cursor: 'pointer' }}>\n//             {selectedFacture ? 'Mettre à jour la facture' : 'Créer la facture'}\n//           </button>\n//           {/* <button type=\"button\" onClick={handleClear} style={{ padding: '10px 20px', borderRadius: '4px', border: 'none', backgroundColor: '#dc3545', color: '#fff', cursor: 'pointer' }}>\n//             Effacer\n//           </button> */}\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default Cfvbscfa;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cfvbscfa({\n  selectedFacture\n}) {\n  _s();\n  const [clName, setClName] = useState('');\n  const [client_id, setClientCode] = useState('');\n  const [date, setDate] = useState('');\n  const [DT, setDT] = useState('1.000');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0,\n    remise: 0\n  }]);\n  const [filteredInputs, setFilteredInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0,\n    remise: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const remiseInputRef = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:7777/articlesbsvcf').then(res => {\n      console.log('Fetched Articles:', res.data);\n      const parsedArticles = res.data;\n      setReferences(parsedArticles.map(article => article.refAr));\n      setInputs(parsedArticles);\n      setFilteredInputs(parsedArticles); // Initialize filteredInputs with all data\n    }).catch(err => console.log('Error fetching articles:', err));\n  }, []);\n  useEffect(() => {\n    if (selectedFacture) {\n      console.log('Selected Facture in CreateFactureVente:', selectedFacture);\n      setClName(selectedFacture.clName || '');\n      setClientCode(selectedFacture.client_id || '');\n      setDate(selectedFacture.date || '');\n      setDT(selectedFacture.DT || '1.000');\n      setInputs(selectedFacture.articles || [{\n        refAr: '',\n        quantité: '',\n        price: 0,\n        remise: 0\n      }]);\n    }\n  }, [selectedFacture]);\n  useEffect(() => {\n    let filtered = inputs;\n    if (clName) {\n      filtered = filtered.filter(input => {\n        var _input$clName;\n        return (_input$clName = input.clName) === null || _input$clName === void 0 ? void 0 : _input$clName.toLowerCase().includes(clName.toLowerCase());\n      });\n    }\n    if (client_id) {\n      filtered = filtered.filter(input => {\n        var _input$client_id;\n        return (_input$client_id = input.client_id) === null || _input$client_id === void 0 ? void 0 : _input$client_id.toString().includes(client_id);\n      });\n    }\n    setFilteredInputs(filtered);\n  }, [clName, client_id, inputs]);\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/cfvbscf/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log('Error fetching price:', err));\n  };\n  const handleReferenceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n    fetchPriceByReference(value, index);\n  };\n  const handleRemiseChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].remise = value;\n    setInputs(newInputs);\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].quantité = value;\n    if (!isNaN(value) && value !== '') {\n      axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`).then(res => {\n        const availableQuantity = res.data.quantity;\n        const remainingQuantity = availableQuantity - parseInt(value);\n        if (remainingQuantity < 0) {\n          alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n          newInputs[index].quantité = availableQuantity;\n        }\n        setInputs(newInputs);\n      }).catch(err => console.error('Error fetching quantity:', err));\n    } else {\n      alert('Veuillez entrer une quantité valide.');\n    }\n  };\n  const handleAddInput = () => {\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n    if (isEmpty) {\n      alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n      return;\n    }\n    setInputs([...inputs, {\n      refAr: '',\n      price: 0,\n      quantité: '',\n      remise: 0\n    }]);\n  };\n  const calculateTotal = () => {\n    if (!inputs) return 0;\n    const total = inputs.reduce((acc, curr) => acc + curr.price * curr.quantité * (1 - curr.remise / 100), 0) + parseFloat(DT);\n    return total.toFixed(3);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n    if (invalidReference) {\n      alert(\"Sélectionner une référence valide\");\n      return;\n    }\n    const refArArray = nonEmptyInputs.map(input => ({\n      refAr: input.refAr,\n      price: input.price,\n      quantité: input.quantité,\n      remise: input.remise\n    }));\n    const totalPrice = calculateTotal();\n    try {\n      console.log('Submitting data:', {\n        clName,\n        client_id,\n        date,\n        DT,\n        refAr: refArArray,\n        totalPrice\n      });\n      const res = await axios.post('http://localhost:7777/cfvbscf/', {\n        clName,\n        client_id,\n        date,\n        DT,\n        refAr: refArArray,\n        totalPrice\n      });\n      console.log('Response:', res.data);\n      handleClear();\n      window.location.reload();\n    } catch (err) {\n      console.error('Error creating facture:', err.response ? err.response.data : err);\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleAddInput();\n    }\n  };\n  const handleClientSelect = (name, code) => {\n    setClName(name);\n    setClientCode(code);\n    setFilteredClients([]);\n  };\n  const handleClientChange = e => {\n    const {\n      value\n    } = e.target;\n    setClName(value);\n    axios.get(`http://localhost:7777/clients/search?name=${value}`).then(res => {\n      setFilteredClients(res.data);\n    }).catch(err => console.log('Error fetching clients:', err));\n    axios.get(`http://localhost:7777/clients/search?name=${value}`).then(res => {\n      if (res.data.length > 0) {\n        setClientCode(res.data[0].clID);\n      } else {\n        setClientCode('');\n      }\n    }).catch(err => console.log('Error fetching client code:', err));\n  };\n  const handleClientBlur = () => {\n    setFilteredClients([]);\n  };\n  const handleClientCodeChange = e => {\n    const {\n      value\n    } = e.target;\n    setClientCode(value);\n    axios.get(`http://localhost:7777/clients/search?id=${value}`).then(res => {\n      if (res.data.length > 0) {\n        setClName(res.data[0].clName);\n      } else {\n        setClName('');\n      }\n    }).catch(err => console.log('Error fetching client name:', err));\n  };\n  const handleUpdate = async event => {\n    event.preventDefault();\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n    if (invalidReference) {\n      alert(\"Sélectionner une référence valide\");\n      return;\n    }\n    const refArArray = nonEmptyInputs.map(input => ({\n      refAr: input.refAr,\n      price: input.price,\n      quantité: input.quantité,\n      remise: input.remise\n    }));\n    const totalPrice = calculateTotal();\n    try {\n      const res = await axios.put(`http://localhost:7777/cfvbscf/update/${selectedFacture.id}`, {\n        clName,\n        client_id,\n        date,\n        DT,\n        articles: refArArray,\n        totalPrice\n      });\n      console.log(res.data);\n      window.location.reload();\n    } catch (err) {\n      console.log('Error updating facture:', err);\n    }\n  };\n  const handleClear = () => {\n    setClName('');\n    setClientCode('');\n    setDate('');\n    setDT('1.000');\n    setInputs([{\n      refAr: '',\n      quantité: '',\n      price: 0,\n      remise: 0\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: selectedFacture ? handleUpdate : handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nom de client:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: clName,\n          onChange: handleClientChange,\n          onBlur: handleClientBlur,\n          className: \"form-control\",\n          list: \"clientNames\",\n          placeholder: \"Saisir le nom du client\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"clientNames\",\n          children: filteredClients.map(client => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: client.clName,\n            onClick: () => handleClientSelect(client.clName, client.clID)\n          }, client.clID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Code de client:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: client_id,\n          onChange: handleClientCodeChange,\n          className: \"form-control\",\n          placeholder: \"Saisir le code du client\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"DT:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: DT,\n          onChange: e => setDT(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Saisir DT\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 9\n      }, this), filteredInputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"R\\xE9f\\xE9rence d'article:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input.refAr,\n          onChange: event => handleReferenceChange(event, index),\n          className: \"form-control\",\n          list: `referenceOptions${index}`,\n          placeholder: \"Saisir la r\\xE9f\\xE9rence\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: `referenceOptions${index}`,\n          children: references.map(reference => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: reference\n          }, reference, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quantit\\xE9:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: input.quantité,\n          onChange: event => handleQuantityChange(event, index),\n          className: \"form-control\",\n          placeholder: \"Saisir la quantit\\xE9\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Prix:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: input.price,\n          readOnly: true,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Remise:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: input.remise,\n          onChange: event => handleRemiseChange(event, index),\n          ref: index === filteredInputs.length - 1 ? remiseInputRef : null,\n          className: \"form-control\",\n          placeholder: \"Saisir la remise\",\n          onKeyPress: handleKeyPress,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddInput,\n        className: \"btn btn-secondary\",\n        children: \"Ajouter une ligne\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Total:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: calculateTotal(),\n          readOnly: true,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: selectedFacture ? 'Mettre à jour' : 'Enregistrer'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleClear,\n        className: \"btn btn-secondary\",\n        children: \"Vider le formulaire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 619,\n    columnNumber: 5\n  }, this);\n}\n_s(Cfvbscfa, \"OBn+0I1P3wCmIX32wlCjy/Fe+no=\");\n_c = Cfvbscfa;\nexport default Cfvbscfa;\nvar _c;\n$RefreshReg$(_c, \"Cfvbscfa\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Cfvbscfa","selectedFacture","_s","clName","setClName","client_id","setClientCode","date","setDate","DT","setDT","inputs","setInputs","refAr","quantité","price","remise","filteredInputs","setFilteredInputs","references","setReferences","filteredClients","setFilteredClients","remiseInputRef","get","then","res","console","log","data","parsedArticles","map","article","catch","err","articles","filtered","filter","input","_input$clName","toLowerCase","includes","_input$client_id","toString","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","event","value","target","handleRemiseChange","handleQuantityChange","isNaN","availableQuantity","quantity","remainingQuantity","parseInt","alert","error","handleAddInput","isEmpty","some","calculateTotal","total","reduce","acc","curr","parseFloat","toFixed","handleSubmit","preventDefault","nonEmptyInputs","invalidReference","refArArray","totalPrice","post","handleClear","window","location","reload","response","handleKeyPress","key","handleClientSelect","name","code","handleClientChange","e","length","clID","handleClientBlur","handleClientCodeChange","handleUpdate","put","id","style","margin","display","flexDirection","alignItems","fontFamily","children","onSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onBlur","list","placeholder","required","client","onClick","readOnly","ref","onKeyPress","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/Cfvbscfa.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function Cfvbscfa({ selectedFacture }) {\r\n//   const [clName, setClName] = useState('');\r\n//   const [client_id, setClientCode] = useState('');\r\n//   const [date, setDate] = useState('');\r\n//   const [DT, setDT] = useState('1.000');\r\n//   const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//   const [references, setReferences] = useState([]);\r\n//   const [filteredClients, setFilteredClients] = useState([]);\r\n\r\n//   const remiseInputRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     axios.get('http://localhost:7777/articlesbsvcf')\r\n//       .then(res => {\r\n//         console.log('Fetched Articles:', res.data);\r\n//         const parsedArticles = res.data;\r\n//         setReferences(parsedArticles.map(article => article.refAr));\r\n//         setInputs(parsedArticles);\r\n//       })\r\n//       .catch(err => console.log('Error fetching articles:', err));\r\n//   }, []);\r\n  \r\n//   useEffect(() => {\r\n//     if (selectedFacture) {\r\n//       console.log('Selected Facture in CreateFactureVente:', selectedFacture);\r\n//       setClName(selectedFacture.clName || '');\r\n//       setClientCode(selectedFacture.client_id || '');\r\n//       setDate(selectedFacture.date || '');\r\n//       setDT(selectedFacture.DT || '1.000');\r\n//       setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//     }\r\n//   }, [selectedFacture]);\r\n\r\n//   const fetchPriceByReference = (reference, index) => {\r\n//     axios.get(`http://localhost:7777/cfvbscf/${reference}`)\r\n//       .then(res => {\r\n//         const price = res.data.price;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].price = price;\r\n//         setInputs(newInputs);\r\n//       })\r\n//       .catch(err => console.log('Error fetching price:', err));\r\n//   };\r\n\r\n//   const handleReferenceChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].refAr = value;\r\n//     setInputs(newInputs);\r\n//     fetchPriceByReference(value, index);\r\n//   };\r\n\r\n//   const handleRemiseChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].remise = value;\r\n//     setInputs(newInputs);\r\n//   };\r\n\r\n//   const handleQuantityChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].quantité = value;\r\n\r\n//     if (!isNaN(value) && value !== '') {\r\n//       axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//         .then(res => {\r\n//           const availableQuantity = res.data.quantity;\r\n//           const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n//           if (remainingQuantity < 0) {\r\n//             alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//             newInputs[index].quantité = availableQuantity; \r\n//           }\r\n\r\n//           setInputs(newInputs);\r\n//         })\r\n//         .catch(err => console.error('Error fetching quantity:', err));\r\n//     } else {\r\n//       alert('Veuillez entrer une quantité valide.');\r\n//     }\r\n//   };\r\n\r\n//   const handleAddInput = () => {\r\n//     const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n//     if (isEmpty) {\r\n//       alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n//       return;\r\n//     }\r\n//     setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n//   };\r\n\r\n//   const calculateTotal = () => {\r\n//     if (!inputs) return 0;\r\n//     const total = inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité) * (1 - (curr.remise / 100)), 0) + parseFloat(DT);\r\n//     return total.toFixed(3);\r\n//   };\r\n\r\n// const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n  \r\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n  \r\n//     if (invalidReference) {\r\n//       alert(\"Sélectionner une référence valide\");\r\n//       return;\r\n//     }\r\n  \r\n//     const refArArray = nonEmptyInputs.map(input => ({\r\n//       refAr: input.refAr,\r\n//       price: input.price,\r\n//       quantité: input.quantité,\r\n//       remise: input.remise\r\n//     }));\r\n  \r\n//     const totalPrice = calculateTotal();\r\n//     try {\r\n//       console.log('Submitting data:', {\r\n//         clName,\r\n//         client_id,\r\n//         date,\r\n//         DT,\r\n//         refAr: refArArray,\r\n//         totalPrice\r\n//       });\r\n  \r\n//       const res = await axios.post('http://localhost:7777/cfvbscf/', {\r\n//         clName,\r\n//         client_id,\r\n//         date,\r\n//         DT,\r\n//         refAr: refArArray,\r\n//         totalPrice\r\n//       });\r\n  \r\n//       console.log('Response:', res.data);\r\n//       handleClear(); \r\n//       window.location.reload();\r\n//     } catch (err) {\r\n//       console.error('Error creating facture:', err.response ? err.response.data : err);\r\n//     }\r\n//   };\r\n  \r\n\r\n//   const handleKeyPress = (event) => {\r\n//     if (event.key === 'Enter') {\r\n//       handleAddInput();\r\n//     }\r\n//   };\r\n\r\n//   const handleClientSelect = (name, code) => {\r\n//     setClName(name);\r\n//     setClientCode(code);\r\n//     setFilteredClients([]);\r\n//   };\r\n\r\n//   const handleClientChange = (e) => {\r\n//     const { value } = e.target;\r\n//     setClName(value);\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//       .then(res => {\r\n//         setFilteredClients(res.data);\r\n//       })\r\n//       .catch(err => console.log('Error fetching clients:', err));\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//       .then(res => {\r\n//         if (res.data.length > 0) {\r\n//           setClientCode(res.data[0].clID);\r\n//         } else {\r\n//           setClientCode('');\r\n//         }\r\n//       })\r\n//       .catch(err => console.log('Error fetching client code:', err));\r\n//   };\r\n\r\n//   const handleClientBlur = () => {\r\n//     setFilteredClients([]);\r\n//   };\r\n\r\n//   const handleClientCodeChange = (e) => {\r\n//     const { value } = e.target;\r\n//     setClientCode(value);\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\r\n//       .then(res => {\r\n//         if (res.data.length > 0) {\r\n//           setClName(res.data[0].clName);\r\n//         } else {\r\n//           setClName('');\r\n//         }\r\n//       })\r\n//       .catch(err => console.log('Error fetching client name:', err));\r\n//   };\r\n\r\n//   const handleUpdate = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n//     if (invalidReference) {\r\n//       alert(\"Sélectionner une référence valide\");\r\n//       return;\r\n//     }\r\n\r\n//     const refArArray = nonEmptyInputs.map(input => ({\r\n//       refAr: input.refAr,\r\n//       price: input.price,\r\n//       quantité: input.quantité,\r\n//       remise: input.remise\r\n//     }));\r\n\r\n//     const totalPrice = calculateTotal();\r\n//     try {\r\n//       const res = await axios.put(`http://localhost:7777/cfvbscf/update/${selectedFacture.id}`, {\r\n//         clName,\r\n//         client_id,\r\n//         date,\r\n//         DT,\r\n//         articles: refArArray,\r\n//         totalPrice\r\n//       });\r\n//       console.log(res.data);\r\n//       window.location.reload();\r\n//     } catch (err) {\r\n//       console.log('Error updating facture:', err);\r\n//     }\r\n//   };\r\n  \r\n//   const handleClear = () => {\r\n//     setClName('');\r\n//     setClientCode('');\r\n//     setDate('');\r\n//     setDT('1.000');\r\n//     setInputs([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ margin: '20px', display: 'flex', flexDirection: 'column', alignItems: 'center', fontFamily: 'Arial, sans-serif', backgroundColor: '#f9f9f9', padding: '20px', borderRadius: '8px', boxShadow: '0 2px 4px rgba(0,0,0,0.1)' }}>\r\n//       <h2 style={{ marginBottom: '20px' }}>{selectedFacture ? 'Modifier Facture Vente' : 'Créer Facture Vente'}</h2>\r\n//       <form onSubmit={selectedFacture ? handleUpdate : handleSubmit} style={{ width: '100%', maxWidth: '600px' }}>\r\n//         <div style={{ marginBottom: '15px' }}>\r\n//           <label style={{ display: 'block', marginBottom: '5px' }}>Nom du client:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={clName}\r\n//             onChange={handleClientChange}\r\n//             onBlur={handleClientBlur}\r\n//             style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd', marginBottom: '5px' }}\r\n//           />\r\n//           {filteredClients.length > 0 && (\r\n//             <ul style={{ listStyleType: 'none', padding: '0', margin: '0', border: '1px solid #ddd', borderRadius: '4px', maxHeight: '100px', overflowY: 'auto' }}>\r\n//               {filteredClients.map(client => (\r\n//                 <li key={client.clID} onClick={() => handleClientSelect(client.clName, client.clID)} style={{ padding: '8px', cursor: 'pointer', backgroundColor: '#fff', borderBottom: '1px solid #ddd' }}>\r\n//                   {client.clName}\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           )}\r\n//         </div>\r\n//         <div style={{ marginBottom: '15px' }}>\r\n//           <label style={{ display: 'block', marginBottom: '5px' }}>Code client:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={client_id}\r\n//             onChange={handleClientCodeChange}\r\n//             style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\r\n//           />\r\n//         </div>\r\n//         <div style={{ marginBottom: '15px' }}>\r\n//           <label style={{ display: 'block', marginBottom: '5px' }}>Date:</label>\r\n//           <input\r\n//             type=\"date\"\r\n//             value={date}\r\n//             onChange={e => setDate(e.target.value)}\r\n//             style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\r\n//           />\r\n//         </div>\r\n//         <div style={{ marginBottom: '15px' }}>\r\n//           <label style={{ display: 'block', marginBottom: '5px' }}>DT:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={DT}\r\n//             onChange={e => setDT(e.target.value)}\r\n//             style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\r\n//           />\r\n//         </div>\r\n//         <table style={{ width: '100%', borderCollapse: 'collapse', marginBottom: '15px' }}>\r\n//           <thead>\r\n//             <tr>\r\n//               <th style={{ padding: '8px', border: '1px solid #ddd', backgroundColor: '#f1f1f1' }}>Référence Article</th>\r\n//               <th style={{ padding: '8px', border: '1px solid #ddd', backgroundColor: '#f1f1f1' }}>Quantité</th>\r\n//               <th style={{ padding: '8px', border: '1px solid #ddd', backgroundColor: '#f1f1f1' }}>Prix</th>\r\n//               <th style={{ padding: '8px', border: '1px solid #ddd', backgroundColor: '#f1f1f1' }}>Remise</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {inputs.map((input, index) => (\r\n//               <tr key={index}>\r\n//                 <td style={{ padding: '8px', border: '1px solid #ddd' }}>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     value={input.refAr}\r\n//                     onChange={e => handleReferenceChange(e, index)}\r\n//                     style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\r\n//                   />\r\n//                 </td>\r\n//                 <td style={{ padding: '8px', border: '1px solid #ddd' }}>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     value={input.quantité}\r\n//                     onChange={e => handleQuantityChange(e, index)}\r\n//                     style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\r\n//                   />\r\n//                 </td>\r\n//                 <td style={{ padding: '8px', border: '1px solid #ddd' }}>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     value={input.price}\r\n//                     readOnly\r\n//                     style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd', backgroundColor: '#f9f9f9' }}\r\n//                   />\r\n//                 </td>\r\n//                 <td style={{ padding: '8px', border: '1px solid #ddd' }}>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     value={input.remise}\r\n//                     onChange={e => handleRemiseChange(e, index)}\r\n//                     ref={remiseInputRef}\r\n//                     onKeyPress={handleKeyPress}\r\n//                     style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\r\n//                   />\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//         <button type=\"button\" onClick={handleAddInput} style={{ padding: '10px 20px', borderRadius: '4px', border: 'none', backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', marginBottom: '15px' }}>\r\n//           Ajouter une ligne\r\n//         </button>\r\n//         <p style={{ fontSize: '16px', fontWeight: 'bold' }}>Total: {calculateTotal()} DT</p>\r\n//         <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n//           <button type=\"submit\" style={{ padding: '10px 20px', borderRadius: '4px', border: 'none', backgroundColor: '#28a745', color: '#fff', cursor: 'pointer' }}>\r\n//             {selectedFacture ? 'Mettre à jour la facture' : 'Créer la facture'}\r\n//           </button>\r\n//           {/* <button type=\"button\" onClick={handleClear} style={{ padding: '10px 20px', borderRadius: '4px', border: 'none', backgroundColor: '#dc3545', color: '#fff', cursor: 'pointer' }}>\r\n//             Effacer\r\n//           </button> */}\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Cfvbscfa;\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Cfvbscfa({ selectedFacture }) {\r\n  const [clName, setClName] = useState('');\r\n  const [client_id, setClientCode] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [DT, setDT] = useState('1.000');\r\n  const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n  const [filteredInputs, setFilteredInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n  const [references, setReferences] = useState([]);\r\n  const [filteredClients, setFilteredClients] = useState([]);\r\n\r\n  const remiseInputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:7777/articlesbsvcf')\r\n      .then(res => {\r\n        console.log('Fetched Articles:', res.data);\r\n        const parsedArticles = res.data;\r\n        setReferences(parsedArticles.map(article => article.refAr));\r\n        setInputs(parsedArticles);\r\n        setFilteredInputs(parsedArticles); // Initialize filteredInputs with all data\r\n      })\r\n      .catch(err => console.log('Error fetching articles:', err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedFacture) {\r\n      console.log('Selected Facture in CreateFactureVente:', selectedFacture);\r\n      setClName(selectedFacture.clName || '');\r\n      setClientCode(selectedFacture.client_id || '');\r\n      setDate(selectedFacture.date || '');\r\n      setDT(selectedFacture.DT || '1.000');\r\n      setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n    }\r\n  }, [selectedFacture]);\r\n\r\n  useEffect(() => {\r\n    let filtered = inputs;\r\n    if (clName) {\r\n      filtered = filtered.filter(input => input.clName?.toLowerCase().includes(clName.toLowerCase()));\r\n    }\r\n    if (client_id) {\r\n      filtered = filtered.filter(input => input.client_id?.toString().includes(client_id));\r\n    }\r\n    setFilteredInputs(filtered);\r\n  }, [clName, client_id, inputs]);\r\n\r\n  const fetchPriceByReference = (reference, index) => {\r\n    axios.get(`http://localhost:7777/cfvbscf/${reference}`)\r\n      .then(res => {\r\n        const price = res.data.price;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].price = price;\r\n        setInputs(newInputs);\r\n      })\r\n      .catch(err => console.log('Error fetching price:', err));\r\n  };\r\n\r\n  const handleReferenceChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].refAr = value;\r\n    setInputs(newInputs);\r\n    fetchPriceByReference(value, index);\r\n  };\r\n\r\n  const handleRemiseChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].remise = value;\r\n    setInputs(newInputs);\r\n  };\r\n\r\n  const handleQuantityChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].quantité = value;\r\n\r\n    if (!isNaN(value) && value !== '') {\r\n      axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n        .then(res => {\r\n          const availableQuantity = res.data.quantity;\r\n          const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n          if (remainingQuantity < 0) {\r\n            alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n            newInputs[index].quantité = availableQuantity; \r\n          }\r\n\r\n          setInputs(newInputs);\r\n        })\r\n        .catch(err => console.error('Error fetching quantity:', err));\r\n    } else {\r\n      alert('Veuillez entrer une quantité valide.');\r\n    }\r\n  };\r\n\r\n  const handleAddInput = () => {\r\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n    if (isEmpty) {\r\n      alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n      return;\r\n    }\r\n    setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n  };\r\n\r\n  const calculateTotal = () => {\r\n    if (!inputs) return 0;\r\n    const total = inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité) * (1 - (curr.remise / 100)), 0) + parseFloat(DT);\r\n    return total.toFixed(3);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n    if (invalidReference) {\r\n      alert(\"Sélectionner une référence valide\");\r\n      return;\r\n    }\r\n\r\n    const refArArray = nonEmptyInputs.map(input => ({\r\n      refAr: input.refAr,\r\n      price: input.price,\r\n      quantité: input.quantité,\r\n      remise: input.remise\r\n    }));\r\n\r\n    const totalPrice = calculateTotal();\r\n    try {\r\n      console.log('Submitting data:', {\r\n        clName,\r\n        client_id,\r\n        date,\r\n        DT,\r\n        refAr: refArArray,\r\n        totalPrice\r\n      });\r\n\r\n      const res = await axios.post('http://localhost:7777/cfvbscf/', {\r\n        clName,\r\n        client_id,\r\n        date,\r\n        DT,\r\n        refAr: refArArray,\r\n        totalPrice\r\n      });\r\n\r\n      console.log('Response:', res.data);\r\n      handleClear(); \r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.error('Error creating facture:', err.response ? err.response.data : err);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleAddInput();\r\n    }\r\n  };\r\n\r\n  const handleClientSelect = (name, code) => {\r\n    setClName(name);\r\n    setClientCode(code);\r\n    setFilteredClients([]);\r\n  };\r\n\r\n  const handleClientChange = (e) => {\r\n    const { value } = e.target;\r\n    setClName(value);\r\n\r\n    axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n      .then(res => {\r\n        setFilteredClients(res.data);\r\n      })\r\n      .catch(err => console.log('Error fetching clients:', err));\r\n\r\n    axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n      .then(res => {\r\n        if (res.data.length > 0) {\r\n          setClientCode(res.data[0].clID);\r\n        } else {\r\n          setClientCode('');\r\n        }\r\n      })\r\n      .catch(err => console.log('Error fetching client code:', err));\r\n  };\r\n\r\n  const handleClientBlur = () => {\r\n    setFilteredClients([]);\r\n  };\r\n\r\n  const handleClientCodeChange = (e) => {\r\n    const { value } = e.target;\r\n    setClientCode(value);\r\n\r\n    axios.get(`http://localhost:7777/clients/search?id=${value}`)\r\n      .then(res => {\r\n        if (res.data.length > 0) {\r\n          setClName(res.data[0].clName);\r\n        } else {\r\n          setClName('');\r\n        }\r\n      })\r\n      .catch(err => console.log('Error fetching client name:', err));\r\n  };\r\n\r\n  const handleUpdate = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n    if (invalidReference) {\r\n      alert(\"Sélectionner une référence valide\");\r\n      return;\r\n    }\r\n\r\n    const refArArray = nonEmptyInputs.map(input => ({\r\n      refAr: input.refAr,\r\n      price: input.price,\r\n      quantité: input.quantité,\r\n      remise: input.remise\r\n    }));\r\n\r\n    const totalPrice = calculateTotal();\r\n    try {\r\n      const res = await axios.put(`http://localhost:7777/cfvbscf/update/${selectedFacture.id}`, {\r\n        clName,\r\n        client_id,\r\n        date,\r\n        DT,\r\n        articles: refArArray,\r\n        totalPrice\r\n      });\r\n      console.log(res.data);\r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.log('Error updating facture:', err);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setClName('');\r\n    setClientCode('');\r\n    setDate('');\r\n    setDT('1.000');\r\n    setInputs([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: '20px', display: 'flex', flexDirection: 'column', alignItems: 'center', fontFamily: 'Arial, sans-serif' }}>\r\n      <form onSubmit={selectedFacture ? handleUpdate : handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Nom de client:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={clName}\r\n            onChange={handleClientChange}\r\n            onBlur={handleClientBlur}\r\n            className=\"form-control\"\r\n            list=\"clientNames\"\r\n            placeholder=\"Saisir le nom du client\"\r\n            required\r\n          />\r\n          <datalist id=\"clientNames\">\r\n            {filteredClients.map(client => (\r\n              <option key={client.clID} value={client.clName} onClick={() => handleClientSelect(client.clName, client.clID)} />\r\n            ))}\r\n          </datalist>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Code de client:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={client_id}\r\n            onChange={handleClientCodeChange}\r\n            className=\"form-control\"\r\n            placeholder=\"Saisir le code du client\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>DT:</label>\r\n          <input\r\n            type=\"number\"\r\n            value={DT}\r\n            onChange={(e) => setDT(e.target.value)}\r\n            className=\"form-control\"\r\n            placeholder=\"Saisir DT\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {filteredInputs.map((input, index) => (\r\n          <div key={index} className=\"form-group\">\r\n            <label>Référence d'article:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={input.refAr}\r\n              onChange={(event) => handleReferenceChange(event, index)}\r\n              className=\"form-control\"\r\n              list={`referenceOptions${index}`}\r\n              placeholder=\"Saisir la référence\"\r\n              required\r\n            />\r\n            <datalist id={`referenceOptions${index}`}>\r\n              {references.map(reference => (\r\n                <option key={reference} value={reference} />\r\n              ))}\r\n            </datalist>\r\n\r\n            <label>Quantité:</label>\r\n            <input\r\n              type=\"number\"\r\n              value={input.quantité}\r\n              onChange={(event) => handleQuantityChange(event, index)}\r\n              className=\"form-control\"\r\n              placeholder=\"Saisir la quantité\"\r\n              required\r\n            />\r\n\r\n            <label>Prix:</label>\r\n            <input\r\n              type=\"number\"\r\n              value={input.price}\r\n              readOnly\r\n              className=\"form-control\"\r\n            />\r\n\r\n            <label>Remise:</label>\r\n            <input\r\n              type=\"number\"\r\n              value={input.remise}\r\n              onChange={(event) => handleRemiseChange(event, index)}\r\n              ref={index === filteredInputs.length - 1 ? remiseInputRef : null}\r\n              className=\"form-control\"\r\n              placeholder=\"Saisir la remise\"\r\n              onKeyPress={handleKeyPress}\r\n              required\r\n            />\r\n          </div>\r\n        ))}\r\n\r\n        <button type=\"button\" onClick={handleAddInput} className=\"btn btn-secondary\">Ajouter une ligne</button>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Total:</label>\r\n          <input type=\"number\" value={calculateTotal()} readOnly className=\"form-control\" />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">{selectedFacture ? 'Mettre à jour' : 'Enregistrer'}</button>\r\n        <button type=\"button\" onClick={handleClear} className=\"btn btn-secondary\">Vider le formulaire</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cfvbscfa;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}