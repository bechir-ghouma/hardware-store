{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\CreateFactureVente.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function CreateFactureVente() {\n//     const [client, setClient] = useState('');\n//     const [date, setDate] = useState('');\n//     const [code, setCode] = useState('');\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0 }]);\n//     const [references, setReferences] = useState([]);\n//     const [telephone, setTelephone] = useState('');\n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/article')\n//             .then(res => {\n//                 setReferences(res.data.map(article => article.ref));\n//             })\n//             .catch(err => console.log(err));\n//     }, []);\n\n//     const fetchPriceByReference = (reference, index) => {\n//         axios.get(`http://localhost:7777/factureVente/${reference}`) \n//             .then(res => {\n//                 const price = res.data.price;\n//                 const newInputs = [...inputs];\n//                 newInputs[index].price = price;\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.log(err));\n//     };\n\n//     const handleReferenceChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].refAr = value;\n//         setInputs(newInputs);\n//         fetchPriceByReference(value, index); \n//     };\n\n//     const handleQuantityChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//             .then(res => {\n//                 const availableQuantity = res.data.quantity;\n\n//                 // Calculate the remaining quantity\n//                 const remainingQuantity = availableQuantity - parseInt(value);\n\n//                 if (remainingQuantity < 0) {\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//                     // Reset the quantity input field to the available quantity\n//                     newInputs[index].quantité = availableQuantity;\n//                 } else {\n//                     newInputs[index].quantité = value;\n//                 }\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.error(err));\n//     };\n\n//     const handleAddInput = () => {\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '' }]);\n//     };\n\n//     const calculateTotal = () => {\n//         return inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0);\n//     };\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n\n//         const invalidReference = inputs.some(input => !references.includes(input.refAr));\n//         if (invalidReference) {\n//             alert(\"Sélectionner une référence valide\");\n//             return; // Stop the submission process\n//         }\n\n//         const refArArray = [];\n//         const quantiteArray = [];\n//         inputs.forEach(input => {\n//             refArArray.push(input.refAr);\n//             quantiteArray.push(input.quantité);\n//         });\n\n//         const totalPrice = calculateTotal();\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\n//             client,\n//             date,\n//             code,\n//             refAr: refArArray,\n//             quantité: quantiteArray,\n//             totalPrice\n//         })\n//             .then(res => {\n//                 console.log(res);\n//                 // After successful posting, update the quantities in the article table\n//                 updateArticleQuantities(refArArray, quantiteArray);\n//                 window.location.reload();\n//             })\n//             .catch(err => console.log(err))\n//     };\n\n//     const updateArticleQuantities = (refArArray, quantiteArray) => {\n//         // Iterate over each article reference and its corresponding quantity\n//         refArArray.forEach((refAr, index) => {\n//             const updatedQuantity = parseInt(quantiteArray[index]);\n//             axios.put(`http://localhost:7777/article/${refAr}/updateQuantity`, {\n//                 updatedQuantity\n//             })\n//             .then(res => console.log(res))\n//             .catch(err => console.error(err));\n//         });\n//     };\n\n//     return (\n//         <div className='container mt-5'>\n//             <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Nom du client</label>\n//                         <input type='text' placeholder='Entrez le nom du client' className='form-control'\n//                             onChange={e => setClient(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Date</label>\n//                         <input type=\"date\" className='form-control'\n//                             onChange={e => setDate(e.target.value)}\n//                         />\n//                     </div>\n//                 </div>\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Code de la facture</label>\n//                         <input type='text' placeholder='Entrez le code de la facture' className='form-control'\n//                             onChange={e => setCode(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Téléphone</label>\n//                         <input\n//                             type=\"text\"\n//                             className='form-control'\n//                             placeholder=\"Entrez le numéro de téléphone\"\n//                             value={telephone}\n//                             onChange={(e) => setTelephone(e.target.value)}\n//                         />\n//                     </div>\n//                 </div>\n//                 {inputs.map((input, index) => (\n//                     <div className=\"row mb-3\" key={index}>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Référence d'article</label>\n//                             <input\n//                                 list=\"references\"\n//                                 className='form-control'\n//                                 placeholder=\"Select or type reference...\"\n//                                 value={input.refAr}\n//                                 onChange={(e) => handleReferenceChange(e, index)}\n//                             />\n//                             <datalist id=\"references\">\n//                                 {references.map((reference, idx) => (\n//                                     <option key={idx} value={reference} />\n//                                 ))}\n//                             </datalist>\n//                         </div>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Prix vente TTC</label>\n//                             <input type='number' placeholder=\"Prix d'article\" className='form-control'\n//                                 value={input.price} // Display the price\n//                                 readOnly // Make it read-only\n//                             />\n//                         </div>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Quantité</label>\n//                             <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\n//                                 value={input.quantité}\n//                                 onChange={(e) => handleQuantityChange(e, index)}\n//                             />\n//                         </div>\n//                     </div>\n//                 ))}\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Total</label>\n//                         <input type='number' placeholder='Total de la facture' className='form-control' value={calculateTotal()} readOnly />\n//                     </div>\n//                 </div>\n//                 <button type=\"button\" className='btn btn-success' onClick={handleAddInput}>Ajouter</button>\n//                 <button type=\"submit\" className='btn btn-primary'>Enregistrer</button>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default CreateFactureVente;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateFactureVente({\n  onAddFVente,\n  onDelete,\n  selectedFacture\n}) {\n  _s();\n  const [client, setClient] = useState('');\n  const [date, setDate] = useState('');\n  const [code, setCode] = useState('');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [telephone, setTelephone] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:7777/article').then(res => setReferences(res.data.map(article => article.ref))).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    if (selectedFacture) {\n      setClient(selectedFacture.client || '');\n      setDate(selectedFacture.date || '');\n      setCode(selectedFacture.code || '');\n      setInputs(selectedFacture.inputs || [{\n        refAr: '',\n        quantité: '',\n        price: 0\n      }]);\n      setTelephone(selectedFacture.telephone || '');\n    }\n  }, [selectedFacture]);\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/factureVente/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log(err));\n  };\n  const handleReferenceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n    fetchPriceByReference(value, index);\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`).then(res => {\n      const availableQuantity = res.data.quantity;\n      const remainingQuantity = availableQuantity - parseInt(value);\n      if (remainingQuantity < 0) {\n        alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n        newInputs[index].quantité = availableQuantity;\n      } else {\n        newInputs[index].quantité = value;\n      }\n      setInputs(newInputs);\n    }).catch(err => console.error(err));\n  };\n  const handleAddInput = () => {\n    setInputs([...inputs, {\n      refAr: '',\n      price: 0,\n      quantité: ''\n    }]);\n  };\n  const calculateTotal = () => {\n    return inputs.reduce((acc, curr) => acc + curr.price * curr.quantité, 0);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const invalidReference = inputs.some(input => !references.includes(input.refAr));\n    if (invalidReference) {\n      alert(\"Sélectionner une référence valide\");\n      return;\n    }\n    const refArArray = [];\n    const quantiteArray = [];\n    inputs.forEach(input => {\n      refArArray.push(input.refAr);\n      quantiteArray.push(input.quantité);\n    });\n    const totalPrice = calculateTotal();\n    axios.post('http://localhost:7777/factureVente/createFac/', {\n      client,\n      date,\n      code,\n      refAr: refArArray,\n      quantité: quantiteArray,\n      totalPrice\n    }).then(res => {\n      onAddFVente({\n        client,\n        date,\n        code,\n        refAr: refArArray,\n        quantité: quantiteArray,\n        totalPrice\n      });\n      updateArticleQuantities(refArArray, quantiteArray);\n      clearInputs();\n    }).catch(err => console.log(err));\n  };\n  const updateArticleQuantities = (refArArray, quantiteArray) => {\n    refArArray.forEach((refAr, index) => {\n      const updatedQuantity = parseInt(quantiteArray[index]);\n      axios.put(`http://localhost:7777/article/${refAr}/updateQuantity`, {\n        updatedQuantity\n      }).then(res => console.log(res)).catch(err => console.error(err));\n    });\n  };\n  const clearInputs = () => {\n    setClient('');\n    setDate('');\n    setCode('');\n    setInputs([{\n      refAr: '',\n      quantité: '',\n      price: 0\n    }]);\n    setTelephone('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"20px\",\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: \"0.7\",\n        marginRight: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            width: \"120px\"\n          },\n          htmlFor: \"client\",\n          children: \"Nom du client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            width: \"200px\"\n          },\n          type: \"text\",\n          id: \"client\",\n          value: client,\n          onChange: e => setClient(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            width: \"120px\"\n          },\n          htmlFor: \"date\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            width: \"200px\"\n          },\n          type: \"date\",\n          id: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            width: \"120px\"\n          },\n          htmlFor: \"code\",\n          children: \"Code de la facture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            width: \"200px\"\n          },\n          type: \"text\",\n          id: \"code\",\n          value: code,\n          onChange: e => setCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            width: \"120px\"\n          },\n          htmlFor: \"telephone\",\n          children: \"T\\xE9l\\xE9phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            width: \"200px\"\n          },\n          type: \"text\",\n          id: \"telephone\",\n          value: telephone,\n          onChange: e => setTelephone(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: \"1\",\n        marginRight: \"10px\"\n      },\n      children: inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: \"120px\"\n            },\n            htmlFor: `refAr-${index}`,\n            children: \"R\\xE9f\\xE9rence d'article\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            list: \"references\",\n            id: `refAr-${index}`,\n            style: {\n              width: \"200px\"\n            },\n            value: input.refAr,\n            onChange: e => handleReferenceChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"references\",\n            children: references.map((reference, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: reference\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: \"120px\"\n            },\n            htmlFor: `price-${index}`,\n            children: \"Prix vente TTC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: `price-${index}`,\n            style: {\n              width: \"200px\"\n            },\n            value: input.price,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: \"120px\"\n            },\n            htmlFor: `quantité-${index}`,\n            children: \"Quantit\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: `quantité-${index}`,\n            style: {\n              width: \"200px\"\n            },\n            value: input.quantité,\n            onChange: e => handleQuantityChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: \"1\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            width: \"120px\"\n          },\n          htmlFor: \"total\",\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"total\",\n          style: {\n            width: \"200px\"\n          },\n          value: calculateTotal(),\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: \"200px\",\n          marginBottom: \"10px\"\n        },\n        type: \"button\",\n        onClick: handleAddInput,\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: \"200px\",\n          marginBottom: \"10px\"\n        },\n        type: \"button\",\n        onClick: handleSubmit,\n        children: \"Enregistrer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: \"200px\",\n          marginBottom: \"10px\"\n        },\n        type: \"button\",\n        onClick: () => {\n          if (selectedFacture) {\n            const confirmed = window.confirm(\"Êtes-vous sûr de vouloir supprimer cette facture ?\");\n            if (confirmed) {\n              onDelete(selectedFacture.id);\n              clearInputs();\n            }\n          } else {\n            console.log(\"No facture selected for deletion\");\n          }\n        },\n        children: \"Supprimer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: \"200px\",\n          marginTop: \"10px\"\n        },\n        type: \"button\",\n        onClick: clearInputs,\n        children: \"Vider les champs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 333,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateFactureVente, \"388/vE88/yYl7Hz3snEuy0LxSuU=\");\n_c = CreateFactureVente;\nexport default CreateFactureVente;\nvar _c;\n$RefreshReg$(_c, \"CreateFactureVente\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CreateFactureVente","onAddFVente","onDelete","selectedFacture","_s","client","setClient","date","setDate","code","setCode","inputs","setInputs","refAr","quantité","price","references","setReferences","telephone","setTelephone","get","then","res","data","map","article","ref","catch","err","console","log","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","event","value","target","handleQuantityChange","availableQuantity","quantity","remainingQuantity","parseInt","alert","error","handleAddInput","calculateTotal","reduce","acc","curr","handleSubmit","preventDefault","invalidReference","some","input","includes","refArArray","quantiteArray","forEach","push","totalPrice","post","updateArticleQuantities","clearInputs","updatedQuantity","put","style","margin","display","justifyContent","children","flex","marginRight","marginBottom","width","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","e","list","idx","readOnly","flexDirection","alignItems","onClick","confirmed","window","confirm","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureVente.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function CreateFactureVente() {\r\n//     const [client, setClient] = useState('');\r\n//     const [date, setDate] = useState('');\r\n//     const [code, setCode] = useState('');\r\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0 }]);\r\n//     const [references, setReferences] = useState([]);\r\n//     const [telephone, setTelephone] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/article')\r\n//             .then(res => {\r\n//                 setReferences(res.data.map(article => article.ref));\r\n//             })\r\n//             .catch(err => console.log(err));\r\n//     }, []);\r\n\r\n//     const fetchPriceByReference = (reference, index) => {\r\n//         axios.get(`http://localhost:7777/factureVente/${reference}`) \r\n//             .then(res => {\r\n//                 const price = res.data.price;\r\n//                 const newInputs = [...inputs];\r\n//                 newInputs[index].price = price;\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.log(err));\r\n//     };\r\n\r\n//     const handleReferenceChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].refAr = value;\r\n//         setInputs(newInputs);\r\n//         fetchPriceByReference(value, index); \r\n//     };\r\n\r\n//     const handleQuantityChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n\r\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//             .then(res => {\r\n//                 const availableQuantity = res.data.quantity;\r\n\r\n//                 // Calculate the remaining quantity\r\n//                 const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n//                 if (remainingQuantity < 0) {\r\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//                     // Reset the quantity input field to the available quantity\r\n//                     newInputs[index].quantité = availableQuantity;\r\n//                 } else {\r\n//                     newInputs[index].quantité = value;\r\n//                 }\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.error(err));\r\n//     };\r\n\r\n//     const handleAddInput = () => {\r\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '' }]);\r\n//     };\r\n\r\n//     const calculateTotal = () => {\r\n//         return inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0);\r\n//     };\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n\r\n//         const invalidReference = inputs.some(input => !references.includes(input.refAr));\r\n//         if (invalidReference) {\r\n//             alert(\"Sélectionner une référence valide\");\r\n//             return; // Stop the submission process\r\n//         }\r\n\r\n//         const refArArray = [];\r\n//         const quantiteArray = [];\r\n//         inputs.forEach(input => {\r\n//             refArArray.push(input.refAr);\r\n//             quantiteArray.push(input.quantité);\r\n//         });\r\n\r\n//         const totalPrice = calculateTotal();\r\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//             client,\r\n//             date,\r\n//             code,\r\n//             refAr: refArArray,\r\n//             quantité: quantiteArray,\r\n//             totalPrice\r\n//         })\r\n//             .then(res => {\r\n//                 console.log(res);\r\n//                 // After successful posting, update the quantities in the article table\r\n//                 updateArticleQuantities(refArArray, quantiteArray);\r\n//                 window.location.reload();\r\n//             })\r\n//             .catch(err => console.log(err))\r\n//     };\r\n\r\n//     const updateArticleQuantities = (refArArray, quantiteArray) => {\r\n//         // Iterate over each article reference and its corresponding quantity\r\n//         refArArray.forEach((refAr, index) => {\r\n//             const updatedQuantity = parseInt(quantiteArray[index]);\r\n//             axios.put(`http://localhost:7777/article/${refAr}/updateQuantity`, {\r\n//                 updatedQuantity\r\n//             })\r\n//             .then(res => console.log(res))\r\n//             .catch(err => console.error(err));\r\n//         });\r\n//     };\r\n\r\n//     return (\r\n//         <div className='container mt-5'>\r\n//             <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Nom du client</label>\r\n//                         <input type='text' placeholder='Entrez le nom du client' className='form-control'\r\n//                             onChange={e => setClient(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Date</label>\r\n//                         <input type=\"date\" className='form-control'\r\n//                             onChange={e => setDate(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Code de la facture</label>\r\n//                         <input type='text' placeholder='Entrez le code de la facture' className='form-control'\r\n//                             onChange={e => setCode(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Téléphone</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             className='form-control'\r\n//                             placeholder=\"Entrez le numéro de téléphone\"\r\n//                             value={telephone}\r\n//                             onChange={(e) => setTelephone(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 {inputs.map((input, index) => (\r\n//                     <div className=\"row mb-3\" key={index}>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Référence d'article</label>\r\n//                             <input\r\n//                                 list=\"references\"\r\n//                                 className='form-control'\r\n//                                 placeholder=\"Select or type reference...\"\r\n//                                 value={input.refAr}\r\n//                                 onChange={(e) => handleReferenceChange(e, index)}\r\n//                             />\r\n//                             <datalist id=\"references\">\r\n//                                 {references.map((reference, idx) => (\r\n//                                     <option key={idx} value={reference} />\r\n//                                 ))}\r\n//                             </datalist>\r\n//                         </div>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Prix vente TTC</label>\r\n//                             <input type='number' placeholder=\"Prix d'article\" className='form-control'\r\n//                                 value={input.price} // Display the price\r\n//                                 readOnly // Make it read-only\r\n//                             />\r\n//                         </div>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Quantité</label>\r\n//                             <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\r\n//                                 value={input.quantité}\r\n//                                 onChange={(e) => handleQuantityChange(e, index)}\r\n//                             />\r\n//                         </div>\r\n//                     </div>\r\n//                 ))}\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Total</label>\r\n//                         <input type='number' placeholder='Total de la facture' className='form-control' value={calculateTotal()} readOnly />\r\n//                     </div>\r\n//                 </div>\r\n//                 <button type=\"button\" className='btn btn-success' onClick={handleAddInput}>Ajouter</button>\r\n//                 <button type=\"submit\" className='btn btn-primary'>Enregistrer</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CreateFactureVente({ onAddFVente, onDelete, selectedFacture }) {\r\n    const [client, setClient] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [code, setCode] = useState('');\r\n    const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0 }]);\r\n    const [references, setReferences] = useState([]);\r\n    const [telephone, setTelephone] = useState('');\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7777/article')\r\n            .then(res => setReferences(res.data.map(article => article.ref)))\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedFacture) {\r\n            setClient(selectedFacture.client || '');\r\n            setDate(selectedFacture.date || '');\r\n            setCode(selectedFacture.code || '');\r\n            setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0 }]);\r\n            setTelephone(selectedFacture.telephone || '');\r\n        }\r\n    }, [selectedFacture]);\r\n\r\n    const fetchPriceByReference = (reference, index) => {\r\n        axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n            .then(res => {\r\n                const price = res.data.price;\r\n                const newInputs = [...inputs];\r\n                newInputs[index].price = price;\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    const handleReferenceChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].refAr = value;\r\n        setInputs(newInputs);\r\n        fetchPriceByReference(value, index);\r\n    };\r\n\r\n    const handleQuantityChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n\r\n        axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n            .then(res => {\r\n                const availableQuantity = res.data.quantity;\r\n                const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n                if (remainingQuantity < 0) {\r\n                    alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n                    newInputs[index].quantité = availableQuantity;\r\n                } else {\r\n                    newInputs[index].quantité = value;\r\n                }\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.error(err));\r\n    };\r\n\r\n    const handleAddInput = () => {\r\n        setInputs([...inputs, { refAr: '', price: 0, quantité: '' }]);\r\n    };\r\n\r\n    const calculateTotal = () => {\r\n        return inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const invalidReference = inputs.some(input => !references.includes(input.refAr));\r\n        if (invalidReference) {\r\n            alert(\"Sélectionner une référence valide\");\r\n            return;\r\n        }\r\n\r\n        const refArArray = [];\r\n        const quantiteArray = [];\r\n        inputs.forEach(input => {\r\n            refArArray.push(input.refAr);\r\n            quantiteArray.push(input.quantité);\r\n        });\r\n\r\n        const totalPrice = calculateTotal();\r\n        axios.post('http://localhost:7777/factureVente/createFac/', {\r\n            client,\r\n            date,\r\n            code,\r\n            refAr: refArArray,\r\n            quantité: quantiteArray,\r\n            totalPrice\r\n        })\r\n            .then(res => {\r\n                onAddFVente({\r\n                    client,\r\n                    date,\r\n                    code,\r\n                    refAr: refArArray,\r\n                    quantité: quantiteArray,\r\n                    totalPrice\r\n                });\r\n                updateArticleQuantities(refArArray, quantiteArray);\r\n                clearInputs();\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    const updateArticleQuantities = (refArArray, quantiteArray) => {\r\n        refArArray.forEach((refAr, index) => {\r\n            const updatedQuantity = parseInt(quantiteArray[index]);\r\n            axios.put(`http://localhost:7777/article/${refAr}/updateQuantity`, {\r\n                updatedQuantity\r\n            })\r\n            .then(res => console.log(res))\r\n            .catch(err => console.error(err));\r\n        });\r\n    };\r\n\r\n    const clearInputs = () => {\r\n        setClient('');\r\n        setDate('');\r\n        setCode('');\r\n        setInputs([{ refAr: '', quantité: '', price: 0 }]);\r\n        setTelephone('');\r\n    };\r\n\r\n    return (\r\n        <div style={{ margin: \"20px\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n            <div style={{ flex: \"0.7\", marginRight: \"10px\" }}>\r\n                <div style={{ marginBottom: \"10px\" }}>\r\n                    <label style={{ width: \"120px\" }} htmlFor=\"client\">Nom du client</label>\r\n                    <input\r\n                        style={{ width: \"200px\" }}\r\n                        type=\"text\"\r\n                        id=\"client\"\r\n                        value={client}\r\n                        onChange={(e) => setClient(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div style={{ marginBottom: \"10px\" }}>\r\n                    <label style={{ width: \"120px\" }} htmlFor=\"date\">Date</label>\r\n                    <input\r\n                        style={{ width: \"200px\" }}\r\n                        type=\"date\"\r\n                        id=\"date\"\r\n                        value={date}\r\n                        onChange={(e) => setDate(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div style={{ marginBottom: \"10px\" }}>\r\n                    <label style={{ width: \"120px\" }} htmlFor=\"code\">Code de la facture</label>\r\n                    <input\r\n                        style={{ width: \"200px\" }}\r\n                        type=\"text\"\r\n                        id=\"code\"\r\n                        value={code}\r\n                        onChange={(e) => setCode(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div style={{ marginBottom: \"10px\" }}>\r\n                    <label style={{ width: \"120px\" }} htmlFor=\"telephone\">Téléphone</label>\r\n                    <input\r\n                        style={{ width: \"200px\" }}\r\n                        type=\"text\"\r\n                        id=\"telephone\"\r\n                        value={telephone}\r\n                        onChange={(e) => setTelephone(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div style={{ flex: \"1\", marginRight: \"10px\" }}>\r\n                {inputs.map((input, index) => (\r\n                    <div key={index} style={{ marginBottom: \"10px\" }}>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <label style={{ width: \"120px\" }} htmlFor={`refAr-${index}`}>Référence d'article</label>\r\n                            <input\r\n                                list=\"references\"\r\n                                id={`refAr-${index}`}\r\n                                style={{ width: \"200px\" }}\r\n                                value={input.refAr}\r\n                                onChange={(e) => handleReferenceChange(e, index)}\r\n                            />\r\n                            <datalist id=\"references\">\r\n                                {references.map((reference, idx) => (\r\n                                    <option key={idx} value={reference} />\r\n                                ))}\r\n                            </datalist>\r\n                        </div>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <label style={{ width: \"120px\" }} htmlFor={`price-${index}`}>Prix vente TTC</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id={`price-${index}`}\r\n                                style={{ width: \"200px\" }}\r\n                                value={input.price}\r\n                                readOnly\r\n                            />\r\n                        </div>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <label style={{ width: \"120px\" }} htmlFor={`quantité-${index}`}>Quantité</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id={`quantité-${index}`}\r\n                                style={{ width: \"200px\" }}\r\n                                value={input.quantité}\r\n                                onChange={(e) => handleQuantityChange(e, index)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div style={{ flex: \"1\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n                <div style={{ marginBottom: \"10px\" }}>\r\n                    <label style={{ width: \"120px\" }} htmlFor=\"total\">Total</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"total\"\r\n                        style={{ width: \"200px\" }}\r\n                        value={calculateTotal()}\r\n                        readOnly\r\n                    />\r\n                </div>\r\n                <button style={{ width: \"200px\", marginBottom: \"10px\" }} type=\"button\" onClick={handleAddInput}>Ajouter</button>\r\n                <button style={{ width: \"200px\", marginBottom: \"10px\" }} type=\"button\" onClick={handleSubmit}>Enregistrer</button>\r\n                <button style={{ width: \"200px\", marginBottom: \"10px\" }} type=\"button\" onClick={() => {\r\n                    if (selectedFacture) {\r\n                        const confirmed = window.confirm(\"Êtes-vous sûr de vouloir supprimer cette facture ?\");\r\n                        if (confirmed) {\r\n                            onDelete(selectedFacture.id);\r\n                            clearInputs();\r\n                        }\r\n                    } else {\r\n                        console.log(\"No facture selected for deletion\");\r\n                    }\r\n                }}>Supprimer</button>\r\n                <button style={{ width: \"200px\", marginTop: \"10px\" }} type=\"button\" onClick={clearInputs}>Vider les champs</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateFactureVente;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,kBAAkBA,CAAC;EAAEC,WAAW;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACpE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,IAAI,EAAEC,OA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}