{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\Cfvbs.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import axios from 'axios';\n\n// function Cfvbs({ selectedFacture }) {\n//   const [clName, setClName] = useState('Comptoir');\n//   const [client_id, setClientCode] = useState('13');\n//   const [date, setDate] = useState('');\n//   const [DT, setDT] = useState('1.000');\n//   const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//   const [references, setReferences] = useState([]);\n//   const [filteredClients, setFilteredClients] = useState([]);\n\n//   const remiseInputRef = useRef(null);\n\n//   useEffect(() => {\n//     axios.get('http://localhost:7777/article')\n//       .then(res => {\n//         setReferences(res.data.map(article => article.ref));\n//       })\n//       .catch(err => console.log('Error fetching articles:', err));\n//   }, []);\n\n//   useEffect(() => {\n//     if (selectedFacture) {\n//       console.log('Selected Facture in CreateFactureVente:', selectedFacture);\n//       setClName(selectedFacture.clName || '');\n//       setClientCode(selectedFacture.client_id || '');\n//       setDate(selectedFacture.date || '');\n//       setDT(selectedFacture.DT || '1.000');\n//       setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//     }\n//   }, [selectedFacture]);\n\n//   const fetchPriceByReference = (reference, index) => {\n//     axios.get(`http://localhost:7777/cfvbs/${reference}`)\n//       .then(res => {\n//         const price = res.data.price;\n//         const newInputs = [...inputs];\n//         newInputs[index].price = price;\n//         setInputs(newInputs);\n//       })\n//       .catch(err => console.log('Error fetching price:', err));\n//   };\n\n//   const handleReferenceChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].refAr = value;\n//     setInputs(newInputs);\n//     fetchPriceByReference(value, index);\n//   };\n\n//   const handleRemiseChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].remise = value;\n//     setInputs(newInputs);\n//   };\n\n//   const handleQuantityChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].quantité = value;\n\n//     if (!isNaN(value) && value !== '') {\n//       axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//         .then(res => {\n//           const availableQuantity = res.data.quantity;\n//           const remainingQuantity = availableQuantity - parseInt(value);\n\n//           if (remainingQuantity < 0) {\n//             alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//             newInputs[index].quantité = availableQuantity; \n//     }\n\n//           setInputs(newInputs);\n//         })\n//         .catch(err => console.error('Error fetching quantity:', err));\n//     } else {\n//       alert('Veuillez entrer une quantité valide.');\n//     }\n//   };\n\n//   const handleAddInput = () => {\n//     const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n//     if (isEmpty) {\n//       alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n//       return;\n//     }\n//     setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\n//   };\n\n//   const calculateTotal = () => {\n//     if (!inputs) return 0;\n//     const total = inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité) * (1 - (curr.remise / 100)), 0) + parseFloat(DT);\n//     return total.toFixed(3);\n//   };\n\n//   const updateStock = async (inputs) => {\n//     try {\n//       for (const input of inputs) {\n//         if (!isNaN(input.quantité) && input.quantité !== '') {\n//           const response = await axios.put(`http://localhost:7777/article/${input.refAr}/updateStock`, { quantity: input.quantité });\n//           console.log(`Stock updated for ${input.refAr}:`, response.data);\n//         }\n//       }\n//     } catch (error) {\n//       console.error('Error updating stock:', error);\n//     }\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//     if (invalidReference) {\n//       alert(\"Sélectionner une référence valide\");\n//       return;\n//     }\n\n//     const refArArray = nonEmptyInputs.map(input => ({\n//       refAr: input.refAr,\n//       price: input.price,\n//       quantité: input.quantité,\n//       remise: input.remise\n//     }));\n\n//     const totalPrice = calculateTotal();\n//     try {\n//       console.log('Submitting data:', {\n//         clName,\n//         client_id,\n//         date,\n//         DT,\n//         refAr: refArArray,\n//         totalPrice\n//       });\n\n//       const res = await axios.post('http://localhost:7777/cfvbs/', {\n//         clName,\n//         client_id,\n//         date,\n//         DT,\n//         refAr: refArArray,\n//         totalPrice\n//       });\n//       console.log('Response:', res.data);\n//       await updateStock(refArArray);\n//       window.location.reload();\n//     } catch (err) {\n//       console.error('Error creating facture:', err.response ? err.response.data : err);\n//     }\n//   };\n\n//   const handleKeyPress = (event) => {\n//     if (event.key === 'Enter') {\n//       handleAddInput();\n//     }\n//   };\n\n//   const handleClientSelect = (name, code) => {\n//     setClName(name);\n//     setClientCode(code);\n//     setFilteredClients([]);\n//   };\n\n//   const handleClientChange = (e) => {\n//     const { value } = e.target;\n//     setClName(value);\n\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//       .then(res => {\n//         setFilteredClients(res.data);\n//       })\n//       .catch(err => console.log('Error fetching clients:', err));\n\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//       .then(res => {\n//         if (res.data.length > 0) {\n//           setClientCode(res.data[0].clID);\n//         } else {\n//           setClientCode('');\n//         }\n//       })\n//       .catch(err => console.log('Error fetching client code:', err));\n//   };\n\n//   const handleClientBlur = () => {\n//     setFilteredClients([]);\n//   };\n\n//   const handleClientCodeChange = (e) => {\n//     const { value } = e.target;\n//     setClientCode(value);\n\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\n//       .then(res => {\n//         if (res.data.length > 0) {\n//           setClName(res.data[0].clName);\n//         } else {\n//           setClName('');\n//         }\n//       })\n//       .catch(err => console.log('Error fetching client name:', err));\n//   };\n\n//   const handleUpdate = async (event) => {\n//     event.preventDefault();\n\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//     if (invalidReference) {\n//       alert(\"Sélectionner une référence valide\");\n//       return;\n//     }\n\n//     const refArArray = nonEmptyInputs.map(input => ({\n//       refAr: input.refAr,\n//       price: input.price,\n//       quantité: input.quantité,\n//       remise: input.remise\n//     }));\n\n//     const totalPrice = calculateTotal();\n//     try {\n//       const res = await axios.put(`http://localhost:7777/cfvbs/update/${selectedFacture.id}`, {\n//         clName,\n//         client_id,\n//         date,\n//         DT,\n//         articles: refArArray,\n//         totalPrice\n//       });\n//       console.log(res.data);\n//       await updateStock(refArArray);\n//       window.location.reload();\n//     } catch (err) {\n//       console.log('Error updating facture:', err);\n//     }\n//   };\n//   const handleClear = () => {\n//     setClName('');\n//     setClientCode('');\n//     setDate('');\n//     setDT('1.000');\n//     setInputs([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//   };\n\n//   return (\n//     <div style={{ margin: '20px', justifyContent: 'center' }}>\n//       <div style={{ display: 'flex', flex: '1' }}>\n//         <div>\n//           <div style={{ marginBottom: '20px' }}>\n//             <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\n//             <input\n//               style={{ width: '200px' }}\n//               type=\"text\"\n//               id=\"code-client\"\n//               name=\"code-client\"\n//               value={client_id}\n//               onChange={handleClientCodeChange}\n//             />\n//           </div>\n//           <div style={{ marginBottom: '20px', position: 'relative' }}>\n//             <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\n//             <input\n//               style={{ width: '200px' }}\n//               type=\"text\"\n//               id=\"client\"\n//               value={clName}\n//               onChange={handleClientChange}\n//               onBlur={handleClientBlur}\n//             />\n//             {filteredClients.length > 0 && (\n//               <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\n//                 {filteredClients.map((client, index) => (\n//                   <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\n//                     {client.clName}\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//           <div style={{ marginBottom: '20px' }}>\n//             <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\n//             <input\n//               style={{ width: '200px' }}\n//               type=\"date\"\n//               id=\"date\"\n//               value={date}\n//               onChange={(e) => setDate(e.target.value)}\n//             />\n//           </div>\n//           <div style={{ marginBottom: '20px' }}>\n//             <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\n//             <input\n//               style={{ width: '200px' }}\n//               type=\"text\"\n//               id=\"DT\"\n//               value={DT}\n//               onChange={(e) => setDT(e.target.value)}\n//             />\n//           </div>\n//         </div>\n//         <div>\n//           {inputs.map((input, index) => (\n//             <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//               <div style={{ flex: '1', marginRight: '10px' }}>\n//                 <label>Référence d'article</label>\n//                 <input\n//                   list=\"references\"\n//                   style={{ width: '100%' }}\n//                   value={input.refAr}\n//                   onChange={(e) => handleReferenceChange(e, index)}\n//                 />\n//                 <datalist id=\"references\">\n//                   {references.map((reference, idx) => (\n//                     <option key={idx} value={reference} />\n//                   ))}\n//                 </datalist>\n//               </div>\n//               <div style={{ flex: '1', marginRight: '10px' }}>\n//                 <label>Prix vente TTC</label>\n//                 <input\n//                   type=\"number\"\n//                   style={{ width: '100%' }}\n//                   value={input.price}\n//                   readOnly\n//                 />\n//               </div>\n//               <div style={{ flex: '1', marginRight: '10px' }}>\n//                 <label>Quantité</label>\n//                 <input\n//                   type=\"number\"\n//                   style={{ width: '100%' }}\n//                   value={input.quantité}\n//                   onChange={(e) => handleQuantityChange(e, index)}\n//                 />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center' }}>\n//                 <div style={{ flex: '1' }}>\n//                   <label>Remise</label>\n//                   <input\n//                     type=\"number\"\n//                     style={{ width: '100%' }}\n//                     value={input.remise}\n//                     onChange={(e) => handleRemiseChange(e, index)}\n//                     onKeyDown={handleKeyPress}\n//                     ref={remiseInputRef}\n//                   />\n//                 </div>\n//                 <div style={{ marginLeft: '10px' }}>\n//                   <button type=\"button\" onClick={handleAddInput}>+</button>\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//         <div>\n//           <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\n//             <button\n//               style={{ width: '200px', marginBottom: '10px' }}\n//               type=\"button\"\n//               onClick={handleSubmit}\n//             >\n//               Ajouter\n//             </button>\n//             <button\n//               style={{ width: '200px', marginBottom: '10px' }}\n//               type=\"submit\"\n//               onClick={handleUpdate}\n//             >\n//               {selectedFacture ? 'Mettre à jour' : 'Enregistrer'}\n//             </button><br />\n//             <button\n//               style={{ width: '200px', marginBottom: '10px' }}\n//               type=\"button\"\n//               onClick={handleClear}\n//             >\n//               Vider les champs\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ marginBottom: '20px' }}>\n//         <label>Total</label>\n//         <input\n//         style={{ width: '100%' }}\n//         value={calculateTotal()}\n//         readOnly\n//       />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Cfvbs;\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cfvbs({\n  selectedFacture\n}) {\n  _s();\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0,\n    remise: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const remiseInputRef = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:7777/article').then(res => {\n      setReferences(res.data.map(article => article.ref));\n    }).catch(err => console.log('Error fetching articles:', err));\n  }, []);\n  useEffect(() => {\n    if (selectedFacture) {\n      console.log('Selected Facture in CreateFactureVente:', selectedFacture);\n      setInputs(selectedFacture.articles || [{\n        refAr: '',\n        quantité: '',\n        price: 0,\n        remise: 0\n      }]);\n    }\n  }, [selectedFacture]);\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/cfvbs/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log('Error fetching price:', err));\n  };\n  const handleReferenceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n    fetchPriceByReference(value, index);\n  };\n  const handleRemiseChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].remise = value;\n    setInputs(newInputs);\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].quantité = value;\n    if (!isNaN(value) && value !== '') {\n      axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`).then(res => {\n        const availableQuantity = res.data.quantity;\n        const remainingQuantity = availableQuantity - parseInt(value);\n        if (remainingQuantity < 0) {\n          alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n          newInputs[index].quantité = availableQuantity;\n        }\n        setInputs(newInputs);\n      }).catch(err => console.error('Error fetching quantity:', err));\n    } else {\n      alert('Veuillez entrer une quantité valide.');\n    }\n  };\n  const handleAddInput = () => {\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n    if (isEmpty) {\n      alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n      return;\n    }\n    setInputs([...inputs, {\n      refAr: '',\n      price: 0,\n      quantité: '',\n      remise: 0\n    }]);\n  };\n  const updateStock = async inputs => {\n    try {\n      for (const input of inputs) {\n        if (!isNaN(input.quantité) && input.quantité !== '') {\n          const response = await axios.put(`http://localhost:7777/article/${input.refAr}/updateStock`, {\n            quantity: input.quantité\n          });\n          console.log(`Stock updated for ${input.refAr}:`, response.data);\n        }\n      }\n    } catch (error) {\n      console.error('Error updating stock:', error);\n    }\n  };\n\n  // const handleSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n  //   const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n  //   if (invalidReference) {\n  //     alert(\"Sélectionner une référence valide\");\n  //     return;\n  //   }\n\n  //   const refArArray = nonEmptyInputs.map(input => ({\n  //     refAr: input.refAr,\n  //     price: input.price,\n  //     quantité: input.quantité,\n  //     remise: input.remise\n  //   }));\n\n  //   const totalPrice = calculateTotal();\n  //   try {\n  //     console.log('Submitting data:', {\n  //       refAr: refArArray,\n  //       totalPrice\n  //     });\n\n  //     const res = await axios.post('http://localhost:7777/cfvbs/', {\n  //       refAr: refArArray,\n  //       totalPrice\n  //     });\n  //     console.log('Response:', res.data);\n  //     await updateStock(refArArray);\n  //     window.location.reload();\n  //   } catch (err) {\n  //     console.error('Error creating facture:', err.response ? err.response.data : err);\n  //   }\n  // };\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleAddInput();\n    }\n  };\n  const handleUpdate = async event => {\n    event.preventDefault();\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n    if (invalidReference) {\n      alert(\"Sélectionner une référence valide\");\n      return;\n    }\n    const refArArray = nonEmptyInputs.map(input => ({\n      refAr: input.refAr,\n      price: input.price,\n      quantité: input.quantité,\n      remise: input.remise\n    }));\n    const totalPrice = calculateTotal();\n    try {\n      const res = await axios.put(`http://localhost:7777/cfvbs/update/${selectedFacture.id}`, {\n        clName,\n        client_id,\n        date,\n        DT,\n        articles: refArArray,\n        totalPrice\n      });\n      console.log(res.data);\n      await updateStock(refArArray);\n      window.location.reload();\n    } catch (err) {\n      console.log('Error updating facture:', err);\n    }\n  };\n  const handleClear = () => {\n    setInputs([{\n      refAr: '',\n      quantité: '',\n      price: 0,\n      remise: 0\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flex: '1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"code-client\",\n            children: \"Code client:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"text\",\n            id: \"code-client\",\n            name: \"code-client\",\n            value: client_id,\n            onChange: handleClientCodeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"client\",\n            children: \"Nom du client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"text\",\n            id: \"client\",\n            value: clName,\n            onChange: handleClientChange,\n            onBlur: handleClientBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 13\n          }, this), filteredClients.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: '100%',\n              left: 0,\n              backgroundColor: 'white',\n              border: '1px solid #ccc',\n              width: '100%'\n            },\n            children: filteredClients.map((client, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '5px',\n                cursor: 'pointer'\n              },\n              onClick: () => handleClientSelect(client.clName, client.clID),\n              children: client.clName\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"date\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"date\",\n            id: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"DT\",\n            children: \"Droit de timbre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"text\",\n            id: \"DT\",\n            value: DT,\n            onChange: e => setDT(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1',\n              marginRight: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"R\\xE9f\\xE9rence d'article\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              list: \"references\",\n              style: {\n                width: '100%'\n              },\n              value: input.refAr,\n              onChange: e => handleReferenceChange(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n              id: \"references\",\n              children: references.map((reference, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: reference\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1',\n              marginRight: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Prix vente TTC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              style: {\n                width: '100%'\n              },\n              value: input.price,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1',\n              marginRight: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Quantit\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              style: {\n                width: '100%'\n              },\n              value: input.quantité,\n              onChange: e => handleQuantityChange(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: '1'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Remise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                style: {\n                  width: '100%'\n                },\n                value: input.remise,\n                onChange: e => handleRemiseChange(e, index),\n                onKeyDown: handleKeyPress,\n                ref: remiseInputRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleAddInput,\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\",\n            marginBottom: '20px',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: '200px',\n              marginBottom: '10px'\n            },\n            type: \"button\",\n            onClick: handleSubmit,\n            children: \"Ajouter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: '200px',\n              marginBottom: '10px'\n            },\n            type: \"submit\",\n            onClick: handleUpdate,\n            children: selectedFacture ? 'Mettre à jour' : 'Enregistrer'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: '200px',\n              marginBottom: '10px'\n            },\n            type: \"button\",\n            onClick: handleClear,\n            children: \"Vider les champs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Total\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          width: '100%'\n        },\n        value: calculateTotal(),\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 598,\n    columnNumber: 5\n  }, this);\n}\n_s(Cfvbs, \"6UL19LdgNPFfcp/ZQrXGJQXGZb8=\");\n_c = Cfvbs;\nexport default Cfvbs;\nvar _c;\n$RefreshReg$(_c, \"Cfvbs\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Cfvbs","selectedFacture","_s","inputs","setInputs","refAr","quantité","price","remise","references","setReferences","filteredClients","setFilteredClients","remiseInputRef","get","then","res","data","map","article","ref","catch","err","console","log","articles","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","event","value","target","handleRemiseChange","handleQuantityChange","isNaN","availableQuantity","quantity","remainingQuantity","parseInt","alert","error","handleAddInput","isEmpty","some","input","updateStock","response","put","handleKeyPress","key","handleUpdate","preventDefault","nonEmptyInputs","filter","invalidReference","includes","refArArray","totalPrice","calculateTotal","id","clName","client_id","date","DT","window","location","reload","handleClear","style","margin","justifyContent","children","display","flex","marginBottom","width","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","onChange","handleClientCodeChange","position","handleClientChange","onBlur","handleClientBlur","length","top","left","backgroundColor","border","client","padding","cursor","onClick","handleClientSelect","clID","e","setDate","setDT","alignItems","marginRight","list","idx","readOnly","onKeyDown","marginLeft","textAlign","handleSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/Cfvbs.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function Cfvbs({ selectedFacture }) {\r\n//   const [clName, setClName] = useState('Comptoir');\r\n//   const [client_id, setClientCode] = useState('13');\r\n//   const [date, setDate] = useState('');\r\n//   const [DT, setDT] = useState('1.000');\r\n//   const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//   const [references, setReferences] = useState([]);\r\n//   const [filteredClients, setFilteredClients] = useState([]);\r\n\r\n//   const remiseInputRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     axios.get('http://localhost:7777/article')\r\n//       .then(res => {\r\n//         setReferences(res.data.map(article => article.ref));\r\n//       })\r\n//       .catch(err => console.log('Error fetching articles:', err));\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (selectedFacture) {\r\n//       console.log('Selected Facture in CreateFactureVente:', selectedFacture);\r\n//       setClName(selectedFacture.clName || '');\r\n//       setClientCode(selectedFacture.client_id || '');\r\n//       setDate(selectedFacture.date || '');\r\n//       setDT(selectedFacture.DT || '1.000');\r\n//       setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//     }\r\n//   }, [selectedFacture]);\r\n\r\n//   const fetchPriceByReference = (reference, index) => {\r\n//     axios.get(`http://localhost:7777/cfvbs/${reference}`)\r\n//       .then(res => {\r\n//         const price = res.data.price;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].price = price;\r\n//         setInputs(newInputs);\r\n//       })\r\n//       .catch(err => console.log('Error fetching price:', err));\r\n//   };\r\n\r\n//   const handleReferenceChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].refAr = value;\r\n//     setInputs(newInputs);\r\n//     fetchPriceByReference(value, index);\r\n//   };\r\n\r\n//   const handleRemiseChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].remise = value;\r\n//     setInputs(newInputs);\r\n//   };\r\n\r\n\r\n//   const handleQuantityChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].quantité = value;\r\n  \r\n\r\n//     if (!isNaN(value) && value !== '') {\r\n//       axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//         .then(res => {\r\n//           const availableQuantity = res.data.quantity;\r\n//           const remainingQuantity = availableQuantity - parseInt(value);\r\n  \r\n//           if (remainingQuantity < 0) {\r\n//             alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//             newInputs[index].quantité = availableQuantity; \r\n//     }\r\n  \r\n//           setInputs(newInputs);\r\n//         })\r\n//         .catch(err => console.error('Error fetching quantity:', err));\r\n//     } else {\r\n//       alert('Veuillez entrer une quantité valide.');\r\n//     }\r\n//   };\r\n  \r\n\r\n//   const handleAddInput = () => {\r\n//     const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n//     if (isEmpty) {\r\n//       alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n//       return;\r\n//     }\r\n//     setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n//   };\r\n\r\n//   const calculateTotal = () => {\r\n//     if (!inputs) return 0;\r\n//     const total = inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité) * (1 - (curr.remise / 100)), 0) + parseFloat(DT);\r\n//     return total.toFixed(3);\r\n//   };\r\n\r\n//   const updateStock = async (inputs) => {\r\n//     try {\r\n//       for (const input of inputs) {\r\n//         if (!isNaN(input.quantité) && input.quantité !== '') {\r\n//           const response = await axios.put(`http://localhost:7777/article/${input.refAr}/updateStock`, { quantity: input.quantité });\r\n//           console.log(`Stock updated for ${input.refAr}:`, response.data);\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error updating stock:', error);\r\n//     }\r\n//   };\r\n  \r\n  \r\n  \r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n  \r\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n  \r\n//     if (invalidReference) {\r\n//       alert(\"Sélectionner une référence valide\");\r\n//       return;\r\n//     }\r\n  \r\n//     const refArArray = nonEmptyInputs.map(input => ({\r\n//       refAr: input.refAr,\r\n//       price: input.price,\r\n//       quantité: input.quantité,\r\n//       remise: input.remise\r\n//     }));\r\n  \r\n//     const totalPrice = calculateTotal();\r\n//     try {\r\n//       console.log('Submitting data:', {\r\n//         clName,\r\n//         client_id,\r\n//         date,\r\n//         DT,\r\n//         refAr: refArArray,\r\n//         totalPrice\r\n//       });\r\n  \r\n//       const res = await axios.post('http://localhost:7777/cfvbs/', {\r\n//         clName,\r\n//         client_id,\r\n//         date,\r\n//         DT,\r\n//         refAr: refArArray,\r\n//         totalPrice\r\n//       });\r\n//       console.log('Response:', res.data);\r\n//       await updateStock(refArArray);\r\n//       window.location.reload();\r\n//     } catch (err) {\r\n//       console.error('Error creating facture:', err.response ? err.response.data : err);\r\n//     }\r\n//   };\r\n\r\n  \r\n\r\n//   const handleKeyPress = (event) => {\r\n//     if (event.key === 'Enter') {\r\n//       handleAddInput();\r\n//     }\r\n//   };\r\n\r\n//   const handleClientSelect = (name, code) => {\r\n//     setClName(name);\r\n//     setClientCode(code);\r\n//     setFilteredClients([]);\r\n//   };\r\n\r\n//   const handleClientChange = (e) => {\r\n//     const { value } = e.target;\r\n//     setClName(value);\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//       .then(res => {\r\n//         setFilteredClients(res.data);\r\n//       })\r\n//       .catch(err => console.log('Error fetching clients:', err));\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//       .then(res => {\r\n//         if (res.data.length > 0) {\r\n//           setClientCode(res.data[0].clID);\r\n//         } else {\r\n//           setClientCode('');\r\n//         }\r\n//       })\r\n//       .catch(err => console.log('Error fetching client code:', err));\r\n//   };\r\n\r\n//   const handleClientBlur = () => {\r\n//     setFilteredClients([]);\r\n//   };\r\n\r\n//   const handleClientCodeChange = (e) => {\r\n//     const { value } = e.target;\r\n//     setClientCode(value);\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\r\n//       .then(res => {\r\n//         if (res.data.length > 0) {\r\n//           setClName(res.data[0].clName);\r\n//         } else {\r\n//           setClName('');\r\n//         }\r\n//       })\r\n//       .catch(err => console.log('Error fetching client name:', err));\r\n//   };\r\n\r\n//   const handleUpdate = async (event) => {\r\n//     event.preventDefault();\r\n  \r\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n  \r\n//     if (invalidReference) {\r\n//       alert(\"Sélectionner une référence valide\");\r\n//       return;\r\n//     }\r\n  \r\n//     const refArArray = nonEmptyInputs.map(input => ({\r\n//       refAr: input.refAr,\r\n//       price: input.price,\r\n//       quantité: input.quantité,\r\n//       remise: input.remise\r\n//     }));\r\n  \r\n//     const totalPrice = calculateTotal();\r\n//     try {\r\n//       const res = await axios.put(`http://localhost:7777/cfvbs/update/${selectedFacture.id}`, {\r\n//         clName,\r\n//         client_id,\r\n//         date,\r\n//         DT,\r\n//         articles: refArArray,\r\n//         totalPrice\r\n//       });\r\n//       console.log(res.data);\r\n//       await updateStock(refArArray);\r\n//       window.location.reload();\r\n//     } catch (err) {\r\n//       console.log('Error updating facture:', err);\r\n//     }\r\n//   };\r\n//   const handleClear = () => {\r\n//     setClName('');\r\n//     setClientCode('');\r\n//     setDate('');\r\n//     setDT('1.000');\r\n//     setInputs([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//   };\r\n  \r\n//   return (\r\n//     <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n//       <div style={{ display: 'flex', flex: '1' }}>\r\n//         <div>\r\n//           <div style={{ marginBottom: '20px' }}>\r\n//             <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\r\n//             <input\r\n//               style={{ width: '200px' }}\r\n//               type=\"text\"\r\n//               id=\"code-client\"\r\n//               name=\"code-client\"\r\n//               value={client_id}\r\n//               onChange={handleClientCodeChange}\r\n//             />\r\n//           </div>\r\n//           <div style={{ marginBottom: '20px', position: 'relative' }}>\r\n//             <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n//             <input\r\n//               style={{ width: '200px' }}\r\n//               type=\"text\"\r\n//               id=\"client\"\r\n//               value={clName}\r\n//               onChange={handleClientChange}\r\n//               onBlur={handleClientBlur}\r\n//             />\r\n//             {filteredClients.length > 0 && (\r\n//               <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\r\n//                 {filteredClients.map((client, index) => (\r\n//                   <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\r\n//                     {client.clName}\r\n//                   </div>\r\n//                 ))}\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//           <div style={{ marginBottom: '20px' }}>\r\n//             <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n//             <input\r\n//               style={{ width: '200px' }}\r\n//               type=\"date\"\r\n//               id=\"date\"\r\n//               value={date}\r\n//               onChange={(e) => setDate(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div style={{ marginBottom: '20px' }}>\r\n//             <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\r\n//             <input\r\n//               style={{ width: '200px' }}\r\n//               type=\"text\"\r\n//               id=\"DT\"\r\n//               value={DT}\r\n//               onChange={(e) => setDT(e.target.value)}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//         <div>\r\n//           {inputs.map((input, index) => (\r\n//             <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//               <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                 <label>Référence d'article</label>\r\n//                 <input\r\n//                   list=\"references\"\r\n//                   style={{ width: '100%' }}\r\n//                   value={input.refAr}\r\n//                   onChange={(e) => handleReferenceChange(e, index)}\r\n//                 />\r\n//                 <datalist id=\"references\">\r\n//                   {references.map((reference, idx) => (\r\n//                     <option key={idx} value={reference} />\r\n//                   ))}\r\n//                 </datalist>\r\n//               </div>\r\n//               <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                 <label>Prix vente TTC</label>\r\n//                 <input\r\n//                   type=\"number\"\r\n//                   style={{ width: '100%' }}\r\n//                   value={input.price}\r\n//                   readOnly\r\n//                 />\r\n//               </div>\r\n//               <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                 <label>Quantité</label>\r\n//                 <input\r\n//                   type=\"number\"\r\n//                   style={{ width: '100%' }}\r\n//                   value={input.quantité}\r\n//                   onChange={(e) => handleQuantityChange(e, index)}\r\n//                 />\r\n//               </div>\r\n//               <div style={{ display: 'flex', alignItems: 'center' }}>\r\n//                 <div style={{ flex: '1' }}>\r\n//                   <label>Remise</label>\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     style={{ width: '100%' }}\r\n//                     value={input.remise}\r\n//                     onChange={(e) => handleRemiseChange(e, index)}\r\n//                     onKeyDown={handleKeyPress}\r\n//                     ref={remiseInputRef}\r\n//                   />\r\n//                 </div>\r\n//                 <div style={{ marginLeft: '10px' }}>\r\n//                   <button type=\"button\" onClick={handleAddInput}>+</button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//         <div>\r\n//           <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\r\n//             <button\r\n//               style={{ width: '200px', marginBottom: '10px' }}\r\n//               type=\"button\"\r\n//               onClick={handleSubmit}\r\n//             >\r\n//               Ajouter\r\n//             </button>\r\n//             <button\r\n//               style={{ width: '200px', marginBottom: '10px' }}\r\n//               type=\"submit\"\r\n//               onClick={handleUpdate}\r\n//             >\r\n//               {selectedFacture ? 'Mettre à jour' : 'Enregistrer'}\r\n//             </button><br />\r\n//             <button\r\n//               style={{ width: '200px', marginBottom: '10px' }}\r\n//               type=\"button\"\r\n//               onClick={handleClear}\r\n//             >\r\n//               Vider les champs\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <div style={{ marginBottom: '20px' }}>\r\n//         <label>Total</label>\r\n//         <input\r\n//         style={{ width: '100%' }}\r\n//         value={calculateTotal()}\r\n//         readOnly\r\n//       />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Cfvbs;\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Cfvbs({ selectedFacture }) {\r\n  const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n  const [references, setReferences] = useState([]);\r\n  const [filteredClients, setFilteredClients] = useState([]);\r\n\r\n  const remiseInputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:7777/article')\r\n      .then(res => {\r\n        setReferences(res.data.map(article => article.ref));\r\n      })\r\n      .catch(err => console.log('Error fetching articles:', err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedFacture) {\r\n      console.log('Selected Facture in CreateFactureVente:', selectedFacture);\r\n      setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n    }\r\n  }, [selectedFacture]);\r\n\r\n  const fetchPriceByReference = (reference, index) => {\r\n    axios.get(`http://localhost:7777/cfvbs/${reference}`)\r\n      .then(res => {\r\n        const price = res.data.price;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].price = price;\r\n        setInputs(newInputs);\r\n      })\r\n      .catch(err => console.log('Error fetching price:', err));\r\n  };\r\n\r\n  const handleReferenceChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].refAr = value;\r\n    setInputs(newInputs);\r\n    fetchPriceByReference(value, index);\r\n  };\r\n\r\n  const handleRemiseChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].remise = value;\r\n    setInputs(newInputs);\r\n  };\r\n\r\n\r\n  const handleQuantityChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].quantité = value;\r\n  \r\n\r\n    if (!isNaN(value) && value !== '') {\r\n      axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n        .then(res => {\r\n          const availableQuantity = res.data.quantity;\r\n          const remainingQuantity = availableQuantity - parseInt(value);\r\n  \r\n          if (remainingQuantity < 0) {\r\n            alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n            newInputs[index].quantité = availableQuantity; \r\n    }\r\n  \r\n          setInputs(newInputs);\r\n        })\r\n        .catch(err => console.error('Error fetching quantity:', err));\r\n    } else {\r\n      alert('Veuillez entrer une quantité valide.');\r\n    }\r\n  };\r\n  \r\n\r\n  const handleAddInput = () => {\r\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n    if (isEmpty) {\r\n      alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n      return;\r\n    }\r\n    setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n  };\r\n\r\n\r\n  const updateStock = async (inputs) => {\r\n    try {\r\n      for (const input of inputs) {\r\n        if (!isNaN(input.quantité) && input.quantité !== '') {\r\n          const response = await axios.put(`http://localhost:7777/article/${input.refAr}/updateStock`, { quantity: input.quantité });\r\n          console.log(`Stock updated for ${input.refAr}:`, response.data);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating stock:', error);\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n  // const handleSubmit = async (event) => {\r\n  //   event.preventDefault();\r\n  \r\n  //   const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n  //   const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n  \r\n  //   if (invalidReference) {\r\n  //     alert(\"Sélectionner une référence valide\");\r\n  //     return;\r\n  //   }\r\n  \r\n  //   const refArArray = nonEmptyInputs.map(input => ({\r\n  //     refAr: input.refAr,\r\n  //     price: input.price,\r\n  //     quantité: input.quantité,\r\n  //     remise: input.remise\r\n  //   }));\r\n  \r\n  //   const totalPrice = calculateTotal();\r\n  //   try {\r\n  //     console.log('Submitting data:', {\r\n  //       refAr: refArArray,\r\n  //       totalPrice\r\n  //     });\r\n  \r\n  //     const res = await axios.post('http://localhost:7777/cfvbs/', {\r\n  //       refAr: refArArray,\r\n  //       totalPrice\r\n  //     });\r\n  //     console.log('Response:', res.data);\r\n  //     await updateStock(refArArray);\r\n  //     window.location.reload();\r\n  //   } catch (err) {\r\n  //     console.error('Error creating facture:', err.response ? err.response.data : err);\r\n  //   }\r\n  // };\r\n\r\n  \r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleAddInput();\r\n    }\r\n  };\r\n\r\n\r\n \r\n  const handleUpdate = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n  \r\n    if (invalidReference) {\r\n      alert(\"Sélectionner une référence valide\");\r\n      return;\r\n    }\r\n  \r\n    const refArArray = nonEmptyInputs.map(input => ({\r\n      refAr: input.refAr,\r\n      price: input.price,\r\n      quantité: input.quantité,\r\n      remise: input.remise\r\n    }));\r\n  \r\n    const totalPrice = calculateTotal();\r\n    try {\r\n      const res = await axios.put(`http://localhost:7777/cfvbs/update/${selectedFacture.id}`, {\r\n        clName,\r\n        client_id,\r\n        date,\r\n        DT,\r\n        articles: refArArray,\r\n        totalPrice\r\n      });\r\n      console.log(res.data);\r\n      await updateStock(refArArray);\r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.log('Error updating facture:', err);\r\n    }\r\n  };\r\n  const handleClear = () => {\r\n    setInputs([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n  };\r\n  \r\n  return (\r\n    <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n      <div style={{ display: 'flex', flex: '1' }}>\r\n        <div>\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\r\n            <input\r\n              style={{ width: '200px' }}\r\n              type=\"text\"\r\n              id=\"code-client\"\r\n              name=\"code-client\"\r\n              value={client_id}\r\n              onChange={handleClientCodeChange}\r\n            />\r\n          </div>\r\n          <div style={{ marginBottom: '20px', position: 'relative' }}>\r\n            <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n            <input\r\n              style={{ width: '200px' }}\r\n              type=\"text\"\r\n              id=\"client\"\r\n              value={clName}\r\n              onChange={handleClientChange}\r\n              onBlur={handleClientBlur}\r\n            />\r\n            {filteredClients.length > 0 && (\r\n              <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\r\n                {filteredClients.map((client, index) => (\r\n                  <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\r\n                    {client.clName}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n            <input\r\n              style={{ width: '200px' }}\r\n              type=\"date\"\r\n              id=\"date\"\r\n              value={date}\r\n              onChange={(e) => setDate(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\r\n            <input\r\n              style={{ width: '200px' }}\r\n              type=\"text\"\r\n              id=\"DT\"\r\n              value={DT}\r\n              onChange={(e) => setDT(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {inputs.map((input, index) => (\r\n            <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n              <div style={{ flex: '1', marginRight: '10px' }}>\r\n                <label>Référence d'article</label>\r\n                <input\r\n                  list=\"references\"\r\n                  style={{ width: '100%' }}\r\n                  value={input.refAr}\r\n                  onChange={(e) => handleReferenceChange(e, index)}\r\n                />\r\n                <datalist id=\"references\">\r\n                  {references.map((reference, idx) => (\r\n                    <option key={idx} value={reference} />\r\n                  ))}\r\n                </datalist>\r\n              </div>\r\n              <div style={{ flex: '1', marginRight: '10px' }}>\r\n                <label>Prix vente TTC</label>\r\n                <input\r\n                  type=\"number\"\r\n                  style={{ width: '100%' }}\r\n                  value={input.price}\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div style={{ flex: '1', marginRight: '10px' }}>\r\n                <label>Quantité</label>\r\n                <input\r\n                  type=\"number\"\r\n                  style={{ width: '100%' }}\r\n                  value={input.quantité}\r\n                  onChange={(e) => handleQuantityChange(e, index)}\r\n                />\r\n              </div>\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <div style={{ flex: '1' }}>\r\n                  <label>Remise</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    style={{ width: '100%' }}\r\n                    value={input.remise}\r\n                    onChange={(e) => handleRemiseChange(e, index)}\r\n                    onKeyDown={handleKeyPress}\r\n                    ref={remiseInputRef}\r\n                  />\r\n                </div>\r\n                <div style={{ marginLeft: '10px' }}>\r\n                  <button type=\"button\" onClick={handleAddInput}>+</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\r\n            <button\r\n              style={{ width: '200px', marginBottom: '10px' }}\r\n              type=\"button\"\r\n              onClick={handleSubmit}\r\n            >\r\n              Ajouter\r\n            </button>\r\n            <button\r\n              style={{ width: '200px', marginBottom: '10px' }}\r\n              type=\"submit\"\r\n              onClick={handleUpdate}\r\n            >\r\n              {selectedFacture ? 'Mettre à jour' : 'Enregistrer'}\r\n            </button><br />\r\n            <button\r\n              style={{ width: '200px', marginBottom: '10px' }}\r\n              type=\"button\"\r\n              onClick={handleClear}\r\n            >\r\n              Vider les champs\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <label>Total</label>\r\n        <input\r\n        style={{ width: '100%' }}\r\n        value={calculateTotal()}\r\n        readOnly\r\n      />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cfvbs;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,KAAKA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC;IAAEW,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,CAAC,CAAC;EACxF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMmB,cAAc,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACdE,KAAK,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}