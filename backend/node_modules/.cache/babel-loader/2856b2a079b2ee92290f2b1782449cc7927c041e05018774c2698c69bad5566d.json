{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\CreateFactureVente.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function CreateFactureVente({ onAddFVente, onDelete, selectedFacture }) {\n//     const [client, setClient] = useState('');\n//     const [date, setDate] = useState('');\n//     const [code, setCode] = useState('');\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//     const [references, setReferences] = useState([]);\n//     const [telephone, setTelephone] = useState('');\n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/article')\n//             .then(res => {\n//                 setReferences(res.data.map(article => article.ref));\n//             })\n//             .catch(err => console.log('Error fetching articles:', err));\n//     }, []);\n\n//     const fetchPriceByReference = (reference, index) => {\n//         axios.get(`http://localhost:7777/factureVente/${reference}`) \n//             .then(res => {\n//                 const price = res.data.price;\n//                 const newInputs = [...inputs];\n//                 newInputs[index].price = price;\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.log('Error fetching price:', err));\n//     };\n\n//     const handleReferenceChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].refAr = value;\n//         setInputs(newInputs);\n//         fetchPriceByReference(value, index); \n//     };\n\n//     const handleRemiseChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].remise = value;\n//         setInputs(newInputs);\n//     };\n\n//     const handleQuantityChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].quantité = value;\n\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//             .then(res => {\n//                 const availableQuantity = res.data.quantity;\n//                 const remainingQuantity = availableQuantity - parseInt(value);\n\n//                 if (remainingQuantity < 0) {\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//                     newInputs[index].quantité = availableQuantity;\n//                 }\n\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.error('Error fetching quantity:', err));\n\n//         // Recalculate total\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0);\n//         console.log(\"New Total:\", newTotal);\n//     };\n\n//     const handleAddInput = () => {\n//         // Check if any previous input fields are empty\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n\n//         // If any previous input field is empty, display an alert\n//         if (isEmpty) {\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n//             return;\n//         }\n\n//         // If all previous input fields are filled, add a new input line\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\n//     };\n\n//     const calculateTotal = () => {\n//         return inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité)/100) * (100 - curr.remise), 0);\n//     };\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n\n//         // Filter out empty inputs before checking for invalid references\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//         if (invalidReference) {\n//             alert(\"Sélectionner une référence valide\");\n//             return;\n//         }\n\n//         const refArArray = [];\n//         const quantiteArray = [];\n//         const remiseArray = [];\n//         nonEmptyInputs.forEach(input => {\n//             refArArray.push(input.refAr);\n//             quantiteArray.push(input.quantité);\n//             remiseArray.push(input.remise);\n//         });\n\n//         const totalPrice = calculateTotal();\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\n//             client,\n//             date,\n//             code,\n//             refAr: refArArray,\n//             quantité: quantiteArray,\n//             remise: remiseArray,\n//             totalPrice\n//         })\n//             .then(res => {\n//                 console.log(res);\n//                 window.location.reload();\n//             })\n//             .catch(err => console.log('Error creating facture:', err))\n//     };\n\n//     return (\n//         <div style={{ margin: '20px', justifyContent: 'center' }}>\n//             <div style={{ display: 'flex', flex: '1' }}>\n//                 <div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"text\"\n//                             id=\"client\"\n//                             value={client}\n//                             onChange={(e) => setClient(e.target.value)}\n//                         />\n//                     </div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"date\"\n//                             id=\"date\"\n//                             value={date}\n//                             onChange={(e) => setDate(e.target.value)}\n//                         />\n//                     </div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"code\">Code facture</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"text\"\n//                             id=\"code\"\n//                             value={code}\n//                             onChange={(e) => setCode(e.target.value)}\n//                         />\n//                     </div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"telephone\">Téléphone</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"text\"\n//                             id=\"telephone\"\n//                             value={telephone}\n//                             onChange={(e) => setTelephone(e.target.value)}\n//                         />\n//                     </div>\n//                 </div>\n//                 <div>\n//                     <div>\n//                         {inputs.map((input, index) => (\n//     <div key={index} style={{ display: 'flex', marginBottom: '10px' }}>\n//         <div style={{ flex: '1', marginRight: '10px' }}>\n//             <label>Référence d'article</label>\n//             <input\n//                 list=\"references\"\n//                 style={{ width: '100%' }}\n//                 value={input.refAr}\n//                 onChange={(e) => handleReferenceChange(e, index)}\n//             />\n//             <datalist id=\"references\">\n//                 {references.map((reference, idx) => (\n//                     <option key={idx} value={reference} />\n//                 ))}\n//             </datalist>\n//         </div>\n//         <div style={{ flex: '1', marginRight: '10px' }}>\n//             <label>Prix vente TTC</label>\n//             <input\n//                 type=\"number\"\n//                 style={{ width: '100%' }}\n//                 value={input.price}\n//                 readOnly\n//             />\n//         </div>\n//         <div style={{ flex: '1', marginRight:'10px' }}>\n//             <label>Quantité</label>\n//             <input\n//                 type=\"number\"\n//                 style={{ width: '100%' }}\n//                 value={input.quantité}\n//                 onChange={(e) =>handleQuantityChange(e, index)}\n//             />\n//         </div>\n//         <div style={{ flex: '1' }}>\n//             <label>Remise</label>\n//             <input\n//                 type=\"number\"\n//                 style={{ width: '100%' }}\n//                 value={input.remise}\n//                 onChange={(e) => handleRemiseChange\n// (e, index)}\n//                                     />\n//                                 </div>\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </div>\n//                 <div>\n//                     <div>\n//                         <div style={{ display:\"inline-block\", marginBottom: '20px', textAlign: 'center'}}>\n//                             <button\n//                                 style={{ width: '200px', marginBottom: '10px' }}\n//                                 type=\"button\"\n//                                 onClick={handleAddInput}\n//                             >\n//                                 Ajouter\n//                             </button>\n//                             <button\n//                                 style={{ width: '200px', marginBottom: '10px' }}\n//                                 type=\"submit\"\n//                                 onClick={handleSubmit}\n//                             >\n//                                 Enregistrer\n//                             </button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>    \n//             <div style={{ marginBottom: '20px' }}>\n//                 <label>Total</label>\n//                 <input\n//                     type=\"number\"\n//                     style={{ width: '100%' }}\n//                     value={calculateTotal()}\n//                     readOnly\n//                 />\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default CreateFactureVente;\n\n// **CreateFactureVente Component:**\n\n// ```javascript\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateFactureVente({\n  onAddFVente,\n  selectedFacture\n}) {\n  _s();\n  const [client, setClient] = useState('');\n  const [date, setDate] = useState('');\n  const [DT, setDT] = useState('');\n  const [telephone, setTelephone] = useState('');\n  const [references, setReferences] = useState([]);\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    price: 0,\n    quantité: '',\n    remise: 0\n  }]);\n  const [totalPrice, setTotalPrice] = useState(0);\n  useEffect(() => {\n    // Fetch references\n    axios.get('http://localhost:7777/article/').then(res => {\n      const refArArray = res.data.map(article => article.refAr);\n      setReferences(refArArray);\n    }).catch(err => console.error('Error fetching references:', err));\n  }, []);\n  useEffect(() => {\n    // If selectedFacture is provided, populate the form with its details\n    if (selectedFacture) {\n      const {\n        client,\n        date,\n        DT,\n        refAr,\n        quantité,\n        remise,\n        telephone\n      } = selectedFacture;\n      setClient(client || '');\n      setDate(date || '');\n      setDT(DT || '');\n      setTelephone(telephone || '');\n      const newInputs = refAr.map((ref, index) => ({\n        refAr: ref,\n        price: 0,\n        // You may fetch the price from the server based on the reference\n        quantité: quantité[index] || '',\n        remise: remise[index] || 0\n      }));\n      setInputs(newInputs);\n\n      // Recalculate total\n      const newTotal = calculateTotal(newInputs);\n      setTotalPrice(newTotal);\n    }\n  }, [selectedFacture]);\n  const handleReferenceChange = (e, index) => {\n    const {\n      value\n    } = e.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n\n    // Fetch the price for the selected reference and update the input\n    // Example:\n    // axios.get(`http://localhost:7777/article/${value}`)\n    //     .then(res => {\n    //         const price = res.data.price;\n    //         newInputs[index].price = price;\n    //         setInputs(newInputs);\n    //     })\n    //     .catch(err => console.error('Error fetching price:', err));\n    // };\n\n    const handleQuantityChange = (e, index) => {\n      const {\n        value\n      } = e.target;\n      const newInputs = [...inputs];\n      newInputs[index].quantité = value;\n      setInputs(newInputs);\n\n      // Recalculate total\n      const newTotal = calculateTotal(newInputs);\n      setTotalPrice(newTotal);\n    };\n    const handleRemiseChange = (e, index) => {\n      const {\n        value\n      } = e.target;\n      const newInputs = [...inputs];\n      newInputs[index].remise = value;\n      setInputs(newInputs);\n\n      // Recalculate total\n      const newTotal = calculateTotal(newInputs);\n      setTotalPrice(newTotal);\n    };\n    const handleAddInput = () => {\n      // Check if any previous input fields are empty\n      const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n\n      // If any previous input field is empty, display an alert\n      if (isEmpty) {\n        alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n        return;\n      }\n\n      // If all previous input fields are filled, add a new input line\n      setInputs([...inputs, {\n        refAr: '',\n        price: 0,\n        quantité: '',\n        remise: 0\n      }]);\n    };\n    const calculateTotal = inputs => {\n      if (!inputs) return 0; // Check if inputs array is defined\n      return inputs.reduce((acc, curr) => acc + curr.price * curr.quantité / 100 * (100 - curr.remise), 0);\n    };\n    const handleSubmit = event => {\n      event.preventDefault();\n\n      // Filter out empty inputs before checking for invalid references\n      const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n      const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n      if (invalidReference) {\n        alert(\"Sélectionner une référence valide\");\n        return;\n      }\n      const refArArray = [];\n      const quantiteArray = [];\n      const remiseArray = [];\n      nonEmptyInputs.forEach(input => {\n        refArArray.push(input.refAr);\n        quantiteArray.push(input.quantité);\n        remiseArray.push(input.remise);\n      });\n      const totalPrice = calculateTotal(nonEmptyInputs);\n      axios.post('http://localhost:7777/factureVente/createFac/', {\n        client,\n        date,\n        DT,\n        refAr: refArArray,\n        quantité: quantiteArray,\n        remise: remiseArray,\n        totalPrice\n      }).then(res => {\n        console.log(res);\n        window.location.reload();\n      }).catch(err => console.log('Error creating facture:', err));\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flex: '1'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                width: '120px'\n              },\n              htmlFor: \"client\",\n              children: \"Nom du client\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                width: '200px'\n              },\n              type: \"text\",\n              id: \"client\",\n              value: client,\n              onChange: e => setClient(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                width: '120px'\n              },\n              htmlFor: \"date\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                width: '200px'\n              },\n              type: \"date\",\n              id: \"date\",\n              value: date,\n              onChange: e => setDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                width: '120px'\n              },\n              htmlFor: \"DT\",\n              children: \"DT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                width: '200px'\n              },\n              type: \"text\",\n              id: \"DT\",\n              value: DT,\n              onChange: e => setDT(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                width: '120px'\n              },\n              htmlFor: \"telephone\",\n              children: \"T\\xE9l\\xE9phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                width: '200px'\n              },\n              type: \"text\",\n              id: \"telephone\",\n              value: telephone,\n              onChange: e => setTelephone(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"R\\xE9f\\xE9rences:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 25\n            }, this), inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                style: {\n                  width: '100px',\n                  marginRight: '10px'\n                },\n                value: input.refAr,\n                onChange: e => handleReferenceChange(e, index),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Choisir une r\\xE9f\\xE9rence\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 37\n                }, this), references.map((ref, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: ref,\n                  children: ref\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 41\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                style: {\n                  width: '100px',\n                  marginRight: '10px'\n                },\n                type: \"number\",\n                min: \"1\",\n                value: input.quantité,\n                onChange: e => handleQuantityChange(e, index),\n                placeholder: \"Quantit\\xE9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                style: {\n                  width: '100px',\n                  marginRight: '10px'\n                },\n                type: \"number\",\n                min: \"0\",\n                value: input.remise,\n                onChange: e => handleRemiseChange(e, index),\n                placeholder: \"Remise (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 33\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 29\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddInput,\n              children: \"Ajouter une r\\xE9f\\xE9rence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '20px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Total DT: \", totalPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Cr\\xE9er Facture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 9\n    }, this);\n  };\n}\n_s(CreateFactureVente, \"ewLuHcdaQmsKbdAelxpEC/CSDOo=\");\n_c = CreateFactureVente;\nexport default CreateFactureVente;\nvar _c;\n$RefreshReg$(_c, \"CreateFactureVente\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CreateFactureVente","onAddFVente","selectedFacture","_s","client","setClient","date","setDate","DT","setDT","telephone","setTelephone","references","setReferences","inputs","setInputs","refAr","price","quantité","remise","totalPrice","setTotalPrice","get","then","res","refArArray","data","map","article","catch","err","console","error","newInputs","ref","index","newTotal","calculateTotal","handleReferenceChange","e","value","target","handleQuantityChange","handleRemiseChange","handleAddInput","isEmpty","some","input","alert","reduce","acc","curr","handleSubmit","event","preventDefault","nonEmptyInputs","filter","invalidReference","includes","quantiteArray","remiseArray","forEach","push","post","log","window","location","reload","style","margin","justifyContent","children","display","flex","marginBottom","width","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","marginRight","idx","min","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureVente.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function CreateFactureVente({ onAddFVente, onDelete, selectedFacture }) {\r\n//     const [client, setClient] = useState('');\r\n//     const [date, setDate] = useState('');\r\n//     const [code, setCode] = useState('');\r\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//     const [references, setReferences] = useState([]);\r\n//     const [telephone, setTelephone] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/article')\r\n//             .then(res => {\r\n//                 setReferences(res.data.map(article => article.ref));\r\n//             })\r\n//             .catch(err => console.log('Error fetching articles:', err));\r\n//     }, []);\r\n\r\n//     const fetchPriceByReference = (reference, index) => {\r\n//         axios.get(`http://localhost:7777/factureVente/${reference}`) \r\n//             .then(res => {\r\n//                 const price = res.data.price;\r\n//                 const newInputs = [...inputs];\r\n//                 newInputs[index].price = price;\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.log('Error fetching price:', err));\r\n//     };\r\n\r\n//     const handleReferenceChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].refAr = value;\r\n//         setInputs(newInputs);\r\n//         fetchPriceByReference(value, index); \r\n//     };\r\n\r\n//     const handleRemiseChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].remise = value;\r\n//         setInputs(newInputs);\r\n//     };\r\n    \r\n//     const handleQuantityChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].quantité = value;\r\n\r\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//             .then(res => {\r\n//                 const availableQuantity = res.data.quantity;\r\n//                 const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n//                 if (remainingQuantity < 0) {\r\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//                     newInputs[index].quantité = availableQuantity;\r\n//                 }\r\n\r\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.error('Error fetching quantity:', err));\r\n\r\n//         // Recalculate total\r\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0);\r\n//         console.log(\"New Total:\", newTotal);\r\n//     };\r\n    \r\n//     const handleAddInput = () => {\r\n//         // Check if any previous input fields are empty\r\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n\r\n//         // If any previous input field is empty, display an alert\r\n//         if (isEmpty) {\r\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n//             return;\r\n//         }\r\n\r\n//         // If all previous input fields are filled, add a new input line\r\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n//     };\r\n\r\n//     const calculateTotal = () => {\r\n//         return inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité)/100) * (100 - curr.remise), 0);\r\n//     };\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n\r\n//         // Filter out empty inputs before checking for invalid references\r\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n//         if (invalidReference) {\r\n//             alert(\"Sélectionner une référence valide\");\r\n//             return;\r\n//         }\r\n\r\n//         const refArArray = [];\r\n//         const quantiteArray = [];\r\n//         const remiseArray = [];\r\n//         nonEmptyInputs.forEach(input => {\r\n//             refArArray.push(input.refAr);\r\n//             quantiteArray.push(input.quantité);\r\n//             remiseArray.push(input.remise);\r\n//         });\r\n\r\n//         const totalPrice = calculateTotal();\r\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//             client,\r\n//             date,\r\n//             code,\r\n//             refAr: refArArray,\r\n//             quantité: quantiteArray,\r\n//             remise: remiseArray,\r\n//             totalPrice\r\n//         })\r\n//             .then(res => {\r\n//                 console.log(res);\r\n//                 window.location.reload();\r\n//             })\r\n//             .catch(err => console.log('Error creating facture:', err))\r\n//     };\r\n\r\n//     return (\r\n//         <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n//             <div style={{ display: 'flex', flex: '1' }}>\r\n//                 <div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"text\"\r\n//                             id=\"client\"\r\n//                             value={client}\r\n//                             onChange={(e) => setClient(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"date\"\r\n//                             id=\"date\"\r\n//                             value={date}\r\n//                             onChange={(e) => setDate(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"code\">Code facture</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"text\"\r\n//                             id=\"code\"\r\n//                             value={code}\r\n//                             onChange={(e) => setCode(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"telephone\">Téléphone</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"text\"\r\n//                             id=\"telephone\"\r\n//                             value={telephone}\r\n//                             onChange={(e) => setTelephone(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <div>\r\n//                     <div>\r\n//                         {inputs.map((input, index) => (\r\n//     <div key={index} style={{ display: 'flex', marginBottom: '10px' }}>\r\n//         <div style={{ flex: '1', marginRight: '10px' }}>\r\n//             <label>Référence d'article</label>\r\n//             <input\r\n//                 list=\"references\"\r\n//                 style={{ width: '100%' }}\r\n//                 value={input.refAr}\r\n//                 onChange={(e) => handleReferenceChange(e, index)}\r\n//             />\r\n//             <datalist id=\"references\">\r\n//                 {references.map((reference, idx) => (\r\n//                     <option key={idx} value={reference} />\r\n//                 ))}\r\n//             </datalist>\r\n//         </div>\r\n//         <div style={{ flex: '1', marginRight: '10px' }}>\r\n//             <label>Prix vente TTC</label>\r\n//             <input\r\n//                 type=\"number\"\r\n//                 style={{ width: '100%' }}\r\n//                 value={input.price}\r\n//                 readOnly\r\n//             />\r\n//         </div>\r\n//         <div style={{ flex: '1', marginRight:'10px' }}>\r\n//             <label>Quantité</label>\r\n//             <input\r\n//                 type=\"number\"\r\n//                 style={{ width: '100%' }}\r\n//                 value={input.quantité}\r\n//                 onChange={(e) =>handleQuantityChange(e, index)}\r\n//             />\r\n//         </div>\r\n//         <div style={{ flex: '1' }}>\r\n//             <label>Remise</label>\r\n//             <input\r\n//                 type=\"number\"\r\n//                 style={{ width: '100%' }}\r\n//                 value={input.remise}\r\n//                 onChange={(e) => handleRemiseChange\r\n// (e, index)}\r\n//                                     />\r\n//                                 </div>\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                 </div>\r\n//                 <div>\r\n//                     <div>\r\n//                         <div style={{ display:\"inline-block\", marginBottom: '20px', textAlign: 'center'}}>\r\n//                             <button\r\n//                                 style={{ width: '200px', marginBottom: '10px' }}\r\n//                                 type=\"button\"\r\n//                                 onClick={handleAddInput}\r\n//                             >\r\n//                                 Ajouter\r\n//                             </button>\r\n//                             <button\r\n//                                 style={{ width: '200px', marginBottom: '10px' }}\r\n//                                 type=\"submit\"\r\n//                                 onClick={handleSubmit}\r\n//                             >\r\n//                                 Enregistrer\r\n//                             </button>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>    \r\n//             <div style={{ marginBottom: '20px' }}>\r\n//                 <label>Total</label>\r\n//                 <input\r\n//                     type=\"number\"\r\n//                     style={{ width: '100%' }}\r\n//                     value={calculateTotal()}\r\n//                     readOnly\r\n//                 />\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\n\r\n// **CreateFactureVente Component:**\r\n\r\n// ```javascript\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CreateFactureVente({ onAddFVente, selectedFacture }) {\r\n    const [client, setClient] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [DT, setDT] = useState('');\r\n    const [telephone, setTelephone] = useState('');\r\n    const [references, setReferences] = useState([]);\r\n    const [inputs, setInputs] = useState([{ refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // Fetch references\r\n        axios\r\n            .get('http://localhost:7777/article/')\r\n            .then((res) => {\r\n                const refArArray = res.data.map((article) => article.refAr);\r\n                setReferences(refArArray);\r\n            })\r\n            .catch((err) => console.error('Error fetching references:', err));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // If selectedFacture is provided, populate the form with its details\r\n        if (selectedFacture) {\r\n            const { client, date, DT, refAr, quantité, remise, telephone } = selectedFacture;\r\n            setClient(client || '');\r\n            setDate(date || '');\r\n            setDT(DT || '');\r\n            setTelephone(telephone || '');\r\n\r\n            const newInputs = refAr.map((ref, index) => ({\r\n                refAr: ref,\r\n                price: 0, // You may fetch the price from the server based on the reference\r\n                quantité: quantité[index] || '',\r\n                remise: remise[index] || 0,\r\n            }));\r\n            setInputs(newInputs);\r\n\r\n            // Recalculate total\r\n            const newTotal = calculateTotal(newInputs);\r\n            setTotalPrice(newTotal);\r\n        }\r\n    }, [selectedFacture]);\r\n\r\n    const handleReferenceChange = (e, index) => {\r\n        const { value } = e.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].refAr = value;\r\n        setInputs(newInputs);\r\n\r\n        // Fetch the price for the selected reference and update the input\r\n        // Example:\r\n        // axios.get(`http://localhost:7777/article/${value}`)\r\n        //     .then(res => {\r\n        //         const price = res.data.price;\r\n        //         newInputs[index].price = price;\r\n        //         setInputs(newInputs);\r\n        //     })\r\n        //     .catch(err => console.error('Error fetching price:', err));\r\n    // };\r\n\r\n    const handleQuantityChange = (e, index) => {\r\n        const { value } = e.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].quantité = value;\r\n        setInputs(newInputs);\r\n\r\n        // Recalculate total\r\n        const newTotal = calculateTotal(newInputs);\r\n        setTotalPrice(newTotal);\r\n    };\r\n\r\n    const handleRemiseChange = (e, index) => {\r\n        const { value } = e.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].remise = value;\r\n        setInputs(newInputs);\r\n\r\n        // Recalculate total\r\n        const newTotal = calculateTotal(newInputs);\r\n        setTotalPrice(newTotal);\r\n    };\r\n\r\n    const handleAddInput = () => {\r\n        // Check if any previous input fields are empty\r\n        const isEmpty = inputs.some((input) => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n\r\n        // If any previous input field is empty, display an alert\r\n        if (isEmpty) {\r\n            alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n            return;\r\n        }\r\n\r\n        // If all previous input fields are filled, add a new input line\r\n        setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n    };\r\n\r\n    const calculateTotal = (inputs) => {\r\n        if (!inputs) return 0; // Check if inputs array is defined\r\n        return inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Filter out empty inputs before checking for invalid references\r\n        const nonEmptyInputs = inputs.filter(\r\n            (input) => input.refAr !== '' && input.quantité !== '' && input.remise !== ''\r\n        );\r\n        const invalidReference = nonEmptyInputs.some((input) => !references.includes(input.refAr));\r\n\r\n        if (invalidReference) {\r\n            alert(\"Sélectionner une référence valide\");\r\n            return;\r\n        }\r\n\r\n        const refArArray = [];\r\n        const quantiteArray = [];\r\n        const remiseArray = [];\r\n        nonEmptyInputs.forEach((input) => {\r\n            refArArray.push(input.refAr);\r\n            quantiteArray.push(input.quantité);\r\n            remiseArray.push(input.remise);\r\n        });\r\n\r\n        const totalPrice = calculateTotal(nonEmptyInputs);\r\n        axios\r\n            .post('http://localhost:7777/factureVente/createFac/', {\r\n                client,\r\n                date,\r\n                DT,\r\n                refAr: refArArray,\r\n                quantité: quantiteArray,\r\n                remise: remiseArray,\r\n                totalPrice,\r\n            })\r\n            .then((res) => {\r\n                console.log(res);\r\n                window.location.reload();\r\n            })\r\n            .catch((err) => console.log('Error creating facture:', err));\r\n    };\r\n\r\n    return (\r\n        <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n            <div style={{ display: 'flex', flex: '1' }}>\r\n                <div>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <label style={{ width: '120px' }} htmlFor=\"client\">\r\n                            Nom du client\r\n                        </label>\r\n                        <input\r\n                            style={{ width: '200px' }}\r\n                            type=\"text\"\r\n                            id=\"client\"\r\n                            value={client}\r\n                            onChange={(e) => setClient(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <label style={{ width: '120px' }} htmlFor=\"date\">\r\n                            Date\r\n                        </label>\r\n                        <input\r\n                            style={{ width: '200px' }}\r\n                            type=\"date\"\r\n                            id=\"date\"\r\n                            value={date}\r\n                            onChange={(e) => setDate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div                     style={{ marginBottom: '20px' }}\r\n                    >\r\n                        <label style={{ width: '120px' }} htmlFor=\"DT\">\r\n                            DT\r\n                        </label>\r\n                        <input\r\n                            style={{ width: '200px' }}\r\n                            type=\"text\"\r\n                            id=\"DT\"\r\n                            value={DT}\r\n                            onChange={(e) => setDT(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <label style={{ width: '120px' }} htmlFor=\"telephone\">\r\n                            Téléphone\r\n                        </label>\r\n                        <input\r\n                            style={{ width: '200px' }}\r\n                            type=\"text\"\r\n                            id=\"telephone\"\r\n                            value={telephone}\r\n                            onChange={(e) => setTelephone(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <h4>Références:</h4>\r\n                        {inputs.map((input, index) => (\r\n                            <div key={index} style={{ marginBottom: '10px' }}>\r\n                                <select\r\n                                    style={{ width: '100px', marginRight: '10px' }}\r\n                                    value={input.refAr}\r\n                                    onChange={(e) => handleReferenceChange(e, index)}\r\n                                >\r\n                                    <option value=\"\">Choisir une référence</option>\r\n                                    {references.map((ref, idx) => (\r\n                                        <option key={idx} value={ref}>\r\n                                            {ref}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                                <input\r\n                                    style={{ width: '100px', marginRight: '10px' }}\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    value={input.quantité}\r\n                                    onChange={(e) => handleQuantityChange(e, index)}\r\n                                    placeholder=\"Quantité\"\r\n                                />\r\n                                <input\r\n                                    style={{ width: '100px', marginRight: '10px' }}\r\n                                    type=\"number\"\r\n                                    min=\"0\"\r\n                                    value={input.remise}\r\n                                    onChange={(e) => handleRemiseChange(e, index)}\r\n                                    placeholder=\"Remise (%)\"\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                        <button onClick={handleAddInput}>Ajouter une référence</button>\r\n                    </div>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <h4>Total DT: {totalPrice}</h4>\r\n                    </div>\r\n                    <button onClick={handleSubmit}>Créer Facture</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n}\r\n\r\nexport default CreateFactureVente;\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}