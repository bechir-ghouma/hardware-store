{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\CreateFactureVente.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import axios from 'axios';\n// import Modal from 'react-modal';\n\n// Modal.setAppElement('#root');\n\n// function CreateFactureVente({ onAddFVente, selectedFacture }) {\n//     const [client, setClient] = useState('');\n//     const [date, setDate] = useState('');\n//     const [DT, setDT] = useState('1.000');\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//     const [references, setReferences] = useState([]);\n//     const [clients, setClients] = useState([]);\n//     const [filteredClients, setFilteredClients] = useState([]);\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\n\n//     const remiseInputRef = useRef(null); // Ref for the Remise input field\n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/article')\n//             .then(res => {\n//                 setReferences(res.data.map(article => article.ref));\n//             })\n//             .catch(err => console.log('Error fetching articles:', err));\n//     }, []);\n\n//     useEffect(() => {\n//         if (selectedFacture) {\n//             setClient(selectedFacture.client || '');\n//             setDate(selectedFacture.date || '');\n//             setDT(selectedFacture.DT || '1.000');\n//             setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//             setModalIsOpen(true);\n//         }\n//     }, [selectedFacture]);\n\n//     const fetchPriceByReference = (reference, index) => {\n//         axios.get(`http://localhost:7777/factureVente/${reference}`)\n//             .then(res => {\n//                 const price = res.data.price;\n//                 const newInputs = [...inputs];\n//                 newInputs[index].price = price;\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.log('Error fetching price:', err));\n//     };\n\n//     const handleReferenceChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].refAr = value;\n//         setInputs(newInputs);\n//         fetchPriceByReference(value, index);\n//     };\n\n//     const handleRemiseChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].remise = value;\n//         setInputs(newInputs);\n//     };\n\n//     const handleQuantityChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].quantité = value;\n\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//             .then(res => {\n//                 const availableQuantity = res.data.quantity;\n//                 const remainingQuantity = availableQuantity - parseInt(value);\n\n//                 if (remainingQuantity < 0) {\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//                     newInputs[index].quantité = availableQuantity;\n//                 }\n\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.error('Error fetching quantity:', err));\n\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\n//         console.log(\"New Total:\", newTotal);\n//     };\n\n//     const handleAddInput = () => {\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n//         if (isEmpty) {\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n//             return;\n//         }\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\n//     };\n\n//     const calculateTotal = () => {\n//         if (!inputs) return 0; \n//         const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\n//         return total.toFixed(3); // Round to three decimal places\n//     };\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n\n//         // Filter out empty inputs before checking for invalid references\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//         if (invalidReference) {\n//             alert(\"Sélectionner une référence valide\");\n//             return;\n//         }\n\n//         const refArArray = [];\n//         const quantiteArray = [];\n//         const remiseArray = [];\n//         nonEmptyInputs.forEach(input => {\n//             refArArray.push(input.refAr);\n//             quantiteArray.push(input.quantité);\n//             remiseArray.push(input.remise);\n//         });\n\n//         const totalPrice = calculateTotal();\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\n//             client,\n//             date,\n//             DT,\n//             refAr: refArArray,\n//             quantité: quantiteArray,\n//             remise: remiseArray,\n//             totalPrice\n//         })\n//             .then(res => {\n//                 console.log(res);\n//                 window.location.reload();\n//             })\n//             .catch(err => console.log('Error creating facture:', err))\n//     };\n\n//     const handleKeyPress = (event) => {\n//         if (event.key === 'Enter') {\n//             handleAddInput();\n//         }\n//     };\n\n//     const handleClientChange = (e) => {\n//         const { value } = e.target;\n//         setClient(value);\n//         // Filter clients based on user input\n//         setFilteredClients(clients.filter(client => client.clName.toLowerCase().includes(value.toLowerCase())));\n//     };\n\n//     const handleClientSelect = (name) => {\n//         setClient(name);\n//         setFilteredClients([]);\n//     };\n\n//     return (\n//         <div style={{ margin: '20px', justifyContent: 'center' }}>\n//             <div style={{ display: 'flex', flex: '1' }}>\n//                 <div>\n//                 <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"text\"\n//                             id=\"code-client\"\n//                             name=\"code-client\"  \n//                         />\n//                     </div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"text\"\n//                             id=\"client\"\n//                             value={client}\n//                             onChange={handleClientChange}\n//                         />\n//                         {filteredClients.length > 0 && (\n//                             <ul style={{ listStyleType: 'none', padding: 0, margin: 0, position: 'absolute', zIndex: 1, backgroundColor: 'white', border: '1px solid #ccc', width: '200px' }}>\n//                                 {filteredClients.map((client, index) => (\n//                                     <li key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName)}>\n//                                         {client.clName}\n//                                     </li>\n//                                 ))}\n//                             </ul>\n//                         )}\n\n//                     </div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"date\"\n//                             id=\"date\"\n//                             value={date}\n//                             onChange={(e) => setDate(e.target.value)}\n//                         />\n//                     </div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"text\"\n//                             id=\"code\"\n//                             value={DT}\n//                             onChange={(e) => setDT(e.target.value)}\n//                             onBlur={handleQuantityChange} // Add onBlur event to trigger recalculation when \"Droit de timbre\" value changes\n//                         />\n//                     </div>\n//                 </div>\n//                 <div>\n//                     <div>\n//                         {inputs.map((input, index) => (\n//                             <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                                 <div style={{ flex: '1', marginRight: '10px' }}>\n//                                     <label>Référence d'article</label>\n//                                     <input\n//                                         list=\"references\"\n//                                         style={{ width: '100%' }}\n//                                         value={input.refAr}\n//                                         onChange={(e) => handleReferenceChange(e, index)}\n//                                     />\n//                                     <datalist id=\"references\">\n//                                         {references.map((reference, idx) => (\n//                                             <option key={idx} value={reference} />\n//                                         ))}\n//                                     </datalist>\n//                                 </div>\n//                                 <div style={{ flex: '1', marginRight: '10px' }}>\n//                                     <label>Prix vente TTC</label>\n//                                     <input\n//                                         type=\"number\"\n//                                         style={{ width: '100%' }}\n//                                         value={input.price}\n//                                         readOnly\n//                                     />\n//                                 </div>\n//                                 <div style={{ flex: '1', marginRight: '10px' }}>\n//                                     <label>Quantité</label>\n//                                     <input\n//                                         type=\"number\"\n//                                         style={{ width: '100%' }}\n//                                         value={input.quantité}\n//                                         onChange={(e) => handleQuantityChange(e, index)}\n//                                     />\n//                                 </div>\n//                                 <div style={{ display: 'flex', alignItems: 'center' }}>\n//                                     <div style={{ flex: '1' }}>\n//                                         <label>Remise</label>\n//                                         <input\n//                                             type=\"number\"\n//                                             style={{ width: '100%' }}\n//                                             value={input.remise}\n//                                             onChange={(e) => handleRemiseChange(e, index)}\n//                                             onKeyDown={handleKeyPress} // Call handleKeyPress on key press\n//                                             ref={remiseInputRef} // Set the ref for Remise input field\n//                                         />\n//                                     </div>\n//                                     <div style={{ marginLeft: '10px' }}>\n//                                         <button type=\"button\" onClick={handleAddInput}>+</button>\n//                                     </div>\n//                                 </div>\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </div>\n//                 <div>\n//                     <div>\n//                         <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\n//                             <button\n//                                 style={{ width: '200px', marginBottom: '10px' }}\n//                                 type=\"button\"\n//                                 onClick={handleAddInput}\n//                             >\n//                                 Ajouter\n//                             </button>\n//                             <button\n//                                 style={{ width: '200px', marginBottom: '10px' }}\n//                                 type=\"submit\"\n//                                 onClick={handleSubmit}\n//                             >\n//                                 Enregistrer\n//                             </button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//             <div style={{ marginBottom: '20px' }}>\n//                 <label>Total</label>\n//                 <input\n//                     type=\"text\" \n//                     style={{ width: '100%' }}\n//                     value={calculateTotal()}\n//                     readOnly\n//                 />\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default CreateFactureVente;\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateFactureVente({\n  selectedFacture\n}) {\n  _s();\n  const [clName, setClName] = useState('');\n  const [client_id, setClientCode] = useState('');\n  const [date, setDate] = useState('');\n  const [DT, setDT] = useState('1.000');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0,\n    remise: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [clients, setClients] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const remiseInputRef = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:7777/article').then(res => {\n      setReferences(res.data.map(article => ({\n        value: article.ref,\n        label: article.ref\n      })));\n    }).catch(err => console.log('Error fetching articles:', err));\n  }, []);\n  useEffect(() => {\n    axios.get('http://localhost:7777/clients').then(res => {\n      setClients(res.data.map(client => ({\n        value: client.clID,\n        label: client.clName\n      })));\n    }).catch(err => console.log('Error fetching clients:', err));\n  }, []);\n  useEffect(() => {\n    if (selectedFacture) {\n      setClName(selectedFacture.clName || '');\n      setClientCode(selectedFacture.client_id || '');\n      setDate(selectedFacture.date || '');\n      setDT(selectedFacture.DT || '1.000');\n      setInputs(selectedFacture.inputs || [{\n        refAr: '',\n        quantité: '',\n        price: 0,\n        remise: 0\n      }]);\n      setModalIsOpen(true);\n    }\n  }, [selectedFacture]);\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/factureVente/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log('Error fetching price:', err));\n  };\n  const handleReferenceChange = (selectedOption, index) => {\n    const newInputs = [...inputs];\n    newInputs[index].refAr = selectedOption ? selectedOption.value : '';\n    setInputs(newInputs);\n    if (selectedOption) {\n      fetchPriceByReference(selectedOption.value, index);\n    }\n  };\n  const handleRemiseChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].remise = value;\n    setInputs(newInputs);\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].quantité = value;\n    axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`).then(res => {\n      const availableQuantity = res.data.quantity;\n      const remainingQuantity = availableQuantity - parseInt(value);\n      if (remainingQuantity < 0) {\n        alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n        newInputs[index].quantité = availableQuantity;\n      }\n      const remisePrice = newInputs[index].price * (1 - newInputs[index].remise / 100);\n      newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n      setInputs(newInputs);\n    }).catch(err => console.error('Error fetching quantity:', err));\n    const newTotal = newInputs.reduce((acc, curr) => acc + curr.price * curr.quantité, 0) + parseFloat(DT);\n    console.log(\"New Total:\", newTotal);\n  };\n  const handleAddInput = () => {\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n    if (isEmpty) {\n      alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n      return;\n    }\n    setInputs([...inputs, {\n      refAr: '',\n      price: 0,\n      quantité: '',\n      remise: 0\n    }]);\n  };\n  const calculateTotal = () => {\n    if (!inputs) return 0;\n    const total = inputs.reduce((acc, curr) => acc + curr.price * curr.quantité / 100 * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\n    return total.toFixed(3); // Round to three decimal places\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Filter out empty inputs before checking for invalid references\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n    const invalidReference = nonEmptyInputs.some(input => !references.some(ref => ref.value === input.refAr));\n    if (invalidReference) {\n      alert(\"Sélectionner une référence valide\");\n      return;\n    }\n    const refArArray = [];\n    const quantiteArray = [];\n    const remiseArray = [];\n    nonEmptyInputs.forEach(input => {\n      refArArray.push(input.refAr);\n      quantiteArray.push(input.quantité);\n      remiseArray.push(input.remise);\n    });\n    const totalPrice = calculateTotal();\n    axios.post('http://localhost:7777/factureVente/createFac/', {\n      clName,\n      client_id,\n      date,\n      DT,\n      refAr: refArArray,\n      quantité: quantiteArray,\n      remise: remiseArray,\n      totalPrice\n    }).then(res => {\n      console.log(res);\n      window.location.reload();\n    }).catch(err => console.log('Error creating facture:', err));\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleAddInput();\n    }\n  };\n  const handleClientChange = selectedOption => {\n    setClName(selectedOption ? selectedOption.label : '');\n    setClientCode(selectedOption ? selectedOption.value : '');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flex: '1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"code-client\",\n            children: \"Code client:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"text\",\n            id: \"code-client\",\n            name: \"code-client\",\n            value: client_id // Display the client code\n            ,\n            onChange: e => setClientCode(e.target.value) // Allow typing in the client code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"client\",\n            children: \"Nom du client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: clients,\n            value: clients.find(client => client.value === client_id),\n            onChange: handleClientChange,\n            styles: {\n              menu: provided => ({\n                ...provided,\n                zIndex: 9999\n              })\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"date\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"date\",\n            id: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"DT\",\n            children: \"Droit de timbre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"text\",\n            id: \"code\",\n            value: DT,\n            onChange: e => setDT(e.target.value),\n            onBlur: handleQuantityChange // Add onBlur event to trigger recalculation when \"Droit de timbre\" value changes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: '1',\n                marginRight: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"R\\xE9f\\xE9rence d'article\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                options: references,\n                value: references.find(ref => ref.value === input.refAr),\n                onChange: selectedOption => handleReferenceChange(selectedOption, index),\n                styles: {\n                  menu: provided => ({\n                    ...provided,\n                    zIndex: 9999\n                  })\n                } // Ensure the dropdown menu appears on top\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: '1',\n                marginRight: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Prix vente TTC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                style: {\n                  width: '100%'\n                },\n                value: input.price,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: '1',\n                marginRight: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Quantit\\xE9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                style: {\n                  width: '100%'\n                },\n                value: input.quantité,\n                onChange: e => handleQuantityChange(e, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  flex: '1'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Remise\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  style: {\n                    width: '100%'\n                  },\n                  value: input.remise,\n                  onChange: e => handleRemiseChange(e, index),\n                  onKeyDown: handleKeyPress // Call handleKeyPress on key press\n                  ,\n                  ref: remiseInputRef // Set the ref for Remise input field\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: '10px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: handleAddInput,\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"inline-block\",\n              marginBottom: '20px',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                width: '200px',\n                marginBottom: '10px'\n              },\n              type: \"button\",\n              onClick: handleAddInput,\n              children: \"Ajouter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                width: '200px',\n                marginBottom: '10px'\n              },\n              type: \"submit\",\n              onClick: handleSubmit,\n              children: \"Enregistrer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Total\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: {\n          width: '100%'\n        },\n        value: calculateTotal(),\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 468,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateFactureVente, \"r+jbPmNpHLmJ03Gbk54cSvt2/tw=\");\n_c = CreateFactureVente;\nexport default CreateFactureVente;\nvar _c;\n$RefreshReg$(_c, \"CreateFactureVente\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Select","jsxDEV","_jsxDEV","CreateFactureVente","selectedFacture","_s","clName","setClName","client_id","setClientCode","date","setDate","DT","setDT","inputs","setInputs","refAr","quantité","price","remise","references","setReferences","clients","setClients","filteredClients","setFilteredClients","modalIsOpen","setModalIsOpen","remiseInputRef","get","then","res","data","map","article","value","ref","label","catch","err","console","log","client","clID","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","selectedOption","handleRemiseChange","event","target","handleQuantityChange","availableQuantity","quantity","remainingQuantity","parseInt","alert","remisePrice","parseFloat","toFixed","error","newTotal","reduce","acc","curr","handleAddInput","isEmpty","some","input","calculateTotal","total","handleSubmit","preventDefault","nonEmptyInputs","filter","invalidReference","refArArray","quantiteArray","remiseArray","forEach","push","totalPrice","post","window","location","reload","handleKeyPress","key","handleClientChange","style","margin","justifyContent","children","display","flex","marginBottom","width","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","onChange","e","position","options","find","styles","menu","provided","zIndex","onBlur","alignItems","marginRight","readOnly","onKeyDown","marginLeft","onClick","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureVente.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import axios from 'axios';\r\n// import Modal from 'react-modal';\r\n\r\n// Modal.setAppElement('#root');\r\n\r\n// function CreateFactureVente({ onAddFVente, selectedFacture }) {\r\n//     const [client, setClient] = useState('');\r\n//     const [date, setDate] = useState('');\r\n//     const [DT, setDT] = useState('1.000');\r\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//     const [references, setReferences] = useState([]);\r\n//     const [clients, setClients] = useState([]);\r\n//     const [filteredClients, setFilteredClients] = useState([]);\r\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n//     const remiseInputRef = useRef(null); // Ref for the Remise input field\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/article')\r\n//             .then(res => {\r\n//                 setReferences(res.data.map(article => article.ref));\r\n//             })\r\n//             .catch(err => console.log('Error fetching articles:', err));\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         if (selectedFacture) {\r\n//             setClient(selectedFacture.client || '');\r\n//             setDate(selectedFacture.date || '');\r\n//             setDT(selectedFacture.DT || '1.000');\r\n//             setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//             setModalIsOpen(true);\r\n//         }\r\n//     }, [selectedFacture]);\r\n\r\n\r\n//     const fetchPriceByReference = (reference, index) => {\r\n//         axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n//             .then(res => {\r\n//                 const price = res.data.price;\r\n//                 const newInputs = [...inputs];\r\n//                 newInputs[index].price = price;\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.log('Error fetching price:', err));\r\n//     };\r\n\r\n//     const handleReferenceChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].refAr = value;\r\n//         setInputs(newInputs);\r\n//         fetchPriceByReference(value, index);\r\n//     };\r\n\r\n//     const handleRemiseChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].remise = value;\r\n//         setInputs(newInputs);\r\n//     };\r\n\r\n//     const handleQuantityChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].quantité = value;\r\n\r\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//             .then(res => {\r\n//                 const availableQuantity = res.data.quantity;\r\n//                 const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n//                 if (remainingQuantity < 0) {\r\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//                     newInputs[index].quantité = availableQuantity;\r\n//                 }\r\n\r\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.error('Error fetching quantity:', err));\r\n\r\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\r\n//         console.log(\"New Total:\", newTotal);\r\n//     };\r\n\r\n//     const handleAddInput = () => {\r\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n//         if (isEmpty) {\r\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n//             return;\r\n//         }\r\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n//     };\r\n\r\n//     const calculateTotal = () => {\r\n//         if (!inputs) return 0; \r\n//         const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\r\n//         return total.toFixed(3); // Round to three decimal places\r\n//     };\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n\r\n//         // Filter out empty inputs before checking for invalid references\r\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n//         if (invalidReference) {\r\n//             alert(\"Sélectionner une référence valide\");\r\n//             return;\r\n//         }\r\n\r\n//         const refArArray = [];\r\n//         const quantiteArray = [];\r\n//         const remiseArray = [];\r\n//         nonEmptyInputs.forEach(input => {\r\n//             refArArray.push(input.refAr);\r\n//             quantiteArray.push(input.quantité);\r\n//             remiseArray.push(input.remise);\r\n//         });\r\n\r\n//         const totalPrice = calculateTotal();\r\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//             client,\r\n//             date,\r\n//             DT,\r\n//             refAr: refArArray,\r\n//             quantité: quantiteArray,\r\n//             remise: remiseArray,\r\n//             totalPrice\r\n//         })\r\n//             .then(res => {\r\n//                 console.log(res);\r\n//                 window.location.reload();\r\n//             })\r\n//             .catch(err => console.log('Error creating facture:', err))\r\n//     };\r\n\r\n//     const handleKeyPress = (event) => {\r\n//         if (event.key === 'Enter') {\r\n//             handleAddInput();\r\n//         }\r\n//     };\r\n\r\n//     const handleClientChange = (e) => {\r\n//         const { value } = e.target;\r\n//         setClient(value);\r\n//         // Filter clients based on user input\r\n//         setFilteredClients(clients.filter(client => client.clName.toLowerCase().includes(value.toLowerCase())));\r\n//     };\r\n    \r\n//     const handleClientSelect = (name) => {\r\n//         setClient(name);\r\n//         setFilteredClients([]);\r\n//     };\r\n\r\n//     return (\r\n//         <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n//             <div style={{ display: 'flex', flex: '1' }}>\r\n//                 <div>\r\n//                 <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"text\"\r\n//                             id=\"code-client\"\r\n//                             name=\"code-client\"  \r\n//                         />\r\n//                     </div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"text\"\r\n//                             id=\"client\"\r\n//                             value={client}\r\n//                             onChange={handleClientChange}\r\n//                         />\r\n//                         {filteredClients.length > 0 && (\r\n//                             <ul style={{ listStyleType: 'none', padding: 0, margin: 0, position: 'absolute', zIndex: 1, backgroundColor: 'white', border: '1px solid #ccc', width: '200px' }}>\r\n//                                 {filteredClients.map((client, index) => (\r\n//                                     <li key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName)}>\r\n//                                         {client.clName}\r\n//                                     </li>\r\n//                                 ))}\r\n//                             </ul>\r\n//                         )}\r\n\r\n//                     </div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"date\"\r\n//                             id=\"date\"\r\n//                             value={date}\r\n//                             onChange={(e) => setDate(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"text\"\r\n//                             id=\"code\"\r\n//                             value={DT}\r\n//                             onChange={(e) => setDT(e.target.value)}\r\n//                             onBlur={handleQuantityChange} // Add onBlur event to trigger recalculation when \"Droit de timbre\" value changes\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <div>\r\n//                     <div>\r\n//                         {inputs.map((input, index) => (\r\n//                             <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//                                 <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                                     <label>Référence d'article</label>\r\n//                                     <input\r\n//                                         list=\"references\"\r\n//                                         style={{ width: '100%' }}\r\n//                                         value={input.refAr}\r\n//                                         onChange={(e) => handleReferenceChange(e, index)}\r\n//                                     />\r\n//                                     <datalist id=\"references\">\r\n//                                         {references.map((reference, idx) => (\r\n//                                             <option key={idx} value={reference} />\r\n//                                         ))}\r\n//                                     </datalist>\r\n//                                 </div>\r\n//                                 <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                                     <label>Prix vente TTC</label>\r\n//                                     <input\r\n//                                         type=\"number\"\r\n//                                         style={{ width: '100%' }}\r\n//                                         value={input.price}\r\n//                                         readOnly\r\n//                                     />\r\n//                                 </div>\r\n//                                 <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                                     <label>Quantité</label>\r\n//                                     <input\r\n//                                         type=\"number\"\r\n//                                         style={{ width: '100%' }}\r\n//                                         value={input.quantité}\r\n//                                         onChange={(e) => handleQuantityChange(e, index)}\r\n//                                     />\r\n//                                 </div>\r\n//                                 <div style={{ display: 'flex', alignItems: 'center' }}>\r\n//                                     <div style={{ flex: '1' }}>\r\n//                                         <label>Remise</label>\r\n//                                         <input\r\n//                                             type=\"number\"\r\n//                                             style={{ width: '100%' }}\r\n//                                             value={input.remise}\r\n//                                             onChange={(e) => handleRemiseChange(e, index)}\r\n//                                             onKeyDown={handleKeyPress} // Call handleKeyPress on key press\r\n//                                             ref={remiseInputRef} // Set the ref for Remise input field\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div style={{ marginLeft: '10px' }}>\r\n//                                         <button type=\"button\" onClick={handleAddInput}>+</button>\r\n//                                     </div>\r\n//                                 </div>\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                 </div>\r\n//                 <div>\r\n//                     <div>\r\n//                         <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\r\n//                             <button\r\n//                                 style={{ width: '200px', marginBottom: '10px' }}\r\n//                                 type=\"button\"\r\n//                                 onClick={handleAddInput}\r\n//                             >\r\n//                                 Ajouter\r\n//                             </button>\r\n//                             <button\r\n//                                 style={{ width: '200px', marginBottom: '10px' }}\r\n//                                 type=\"submit\"\r\n//                                 onClick={handleSubmit}\r\n//                             >\r\n//                                 Enregistrer\r\n//                             </button>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//             <div style={{ marginBottom: '20px' }}>\r\n//                 <label>Total</label>\r\n//                 <input\r\n//                     type=\"text\" \r\n//                     style={{ width: '100%' }}\r\n//                     value={calculateTotal()}\r\n//                     readOnly\r\n//                 />\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\n\r\nfunction CreateFactureVente({ selectedFacture }) {\r\n    const [clName, setClName] = useState('');\r\n    const [client_id, setClientCode] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [DT, setDT] = useState('1.000');\r\n    const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n    const [references, setReferences] = useState([]);\r\n    const [clients, setClients] = useState([]);\r\n    const [filteredClients, setFilteredClients] = useState([]);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n    const remiseInputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7777/article')\r\n            .then(res => {\r\n                setReferences(res.data.map(article => ({ value: article.ref, label: article.ref })));\r\n            })\r\n            .catch(err => console.log('Error fetching articles:', err));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7777/clients')\r\n            .then(res => {\r\n                setClients(res.data.map(client => ({ value: client.clID, label: client.clName })));\r\n            })\r\n            .catch(err => console.log('Error fetching clients:', err));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedFacture) {\r\n            setClName(selectedFacture.clName || '');\r\n            setClientCode(selectedFacture.client_id || '');\r\n            setDate(selectedFacture.date || '');\r\n            setDT(selectedFacture.DT || '1.000');\r\n            setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n            setModalIsOpen(true);\r\n        }\r\n    }, [selectedFacture]);\r\n\r\n    const fetchPriceByReference = (reference, index) => {\r\n        axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n            .then(res => {\r\n                const price = res.data.price;\r\n                const newInputs = [...inputs];\r\n                newInputs[index].price = price;\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.log('Error fetching price:', err));\r\n    };\r\n\r\n    const handleReferenceChange = (selectedOption, index) => {\r\n        const newInputs = [...inputs];\r\n        newInputs[index].refAr = selectedOption ? selectedOption.value : '';\r\n        setInputs(newInputs);\r\n        if (selectedOption) {\r\n            fetchPriceByReference(selectedOption.value, index);\r\n        }\r\n    };\r\n\r\n    const handleRemiseChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].remise = value;\r\n        setInputs(newInputs);\r\n    };\r\n\r\n    const handleQuantityChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].quantité = value;\r\n\r\n        axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n            .then(res => {\r\n                const availableQuantity = res.data.quantity;\r\n                const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n                if (remainingQuantity < 0) {\r\n                    alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n                    newInputs[index].quantité = availableQuantity;\r\n                }\r\n\r\n                const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n                newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.error('Error fetching quantity:', err));\r\n\r\n        const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\r\n        console.log(\"New Total:\", newTotal);\r\n    };\r\n\r\n    const handleAddInput = () => {\r\n        const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n        if (isEmpty) {\r\n            alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n            return;\r\n        }\r\n        setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n    };\r\n\r\n    const calculateTotal = () => {\r\n        if (!inputs) return 0;\r\n        const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\r\n        return total.toFixed(3); // Round to three decimal places\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Filter out empty inputs before checking for invalid references\r\n        const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n        const invalidReference = nonEmptyInputs.some(input => !references.some(ref => ref.value === input.refAr));\r\n\r\n        if (invalidReference) {\r\n            alert(\"Sélectionner une référence valide\");\r\n            return;\r\n        }\r\n\r\n        const refArArray = [];\r\n        const quantiteArray = [];\r\n        const remiseArray = [];\r\n        nonEmptyInputs.forEach(input => {\r\n            refArArray.push(input.refAr);\r\n            quantiteArray.push(input.quantité);\r\n            remiseArray.push(input.remise);\r\n        });\r\n\r\n        const totalPrice = calculateTotal();\r\n        axios.post('http://localhost:7777/factureVente/createFac/', {\r\n            clName,\r\n            client_id,\r\n            date,\r\n            DT,\r\n            refAr: refArArray,\r\n            quantité: quantiteArray,\r\n            remise: remiseArray,\r\n            totalPrice\r\n        })\r\n            .then(res => {\r\n                console.log(res);\r\n                window.location.reload();\r\n            })\r\n            .catch(err => console.log('Error creating facture:', err))\r\n    };\r\n\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === 'Enter') {\r\n            handleAddInput();\r\n        }\r\n    };\r\n\r\n    const handleClientChange = (selectedOption) => {\r\n        setClName(selectedOption ? selectedOption.label : '');\r\n        setClientCode(selectedOption ? selectedOption.value : '');\r\n    };\r\n\r\n    return (\r\n        <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n            <div style={{ display: 'flex', flex: '1' }}>\r\n                <div>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\r\n                        <input\r\n                            style={{ width: '200px' }}\r\n                            type=\"text\"\r\n                            id=\"code-client\"\r\n                            name=\"code-client\"\r\n                            value={client_id} // Display the client code\r\n                            onChange={(e) => setClientCode(e.target.value)} // Allow typing in the client code\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginBottom: '20px', position: 'relative' }}>\r\n                        <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n                        <Select\r\n                            options={clients}\r\n                            value={clients.find(client => client.value === client_id)}\r\n                            onChange={handleClientChange}\r\n                            styles={{ menu: (provided) => ({ ...provided, zIndex: 9999 }) }}\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n                        <input\r\n                            style={{ width: '200px' }}\r\n                            type=\"date\"\r\n                            id=\"date\"\r\n                            value={date}\r\n                            onChange={(e) => setDate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\r\n                        <input\r\n                            style={{ width: '200px' }}\r\n                            type=\"text\"\r\n                            id=\"code\"\r\n                            value={DT}\r\n                            onChange={(e) => setDT(e.target.value)}\r\n                            onBlur={handleQuantityChange} // Add onBlur event to trigger recalculation when \"Droit de timbre\" value changes\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        {inputs.map((input, index) => (\r\n                            <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n                                <div style={{ flex: '1', marginRight: '10px' }}>\r\n                                    <label>Référence d'article</label>\r\n                                    <Select\r\n                                        options={references}\r\n                                        value={references.find(ref => ref.value === input.refAr)}\r\n                                        onChange={(selectedOption) => handleReferenceChange(selectedOption, index)}\r\n                                        styles={{ menu: (provided) => ({ ...provided, zIndex: 9999 }) }} // Ensure the dropdown menu appears on top\r\n                                    />\r\n                                </div>\r\n                                <div style={{ flex: '1', marginRight: '10px' }}>\r\n                                    <label>Prix vente TTC</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        style={{ width: '100%' }}\r\n                                        value={input.price}\r\n                                        readOnly\r\n                                    />\r\n                                </div>\r\n                                <div style={{ flex: '1', marginRight: '10px' }}>\r\n                                    <label>Quantité</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        style={{ width: '100%' }}\r\n                                        value={input.quantité}\r\n                                        onChange={(e) => handleQuantityChange(e, index)}\r\n                                    />\r\n                                </div>\r\n                                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                    <div style={{ flex: '1' }}>\r\n                                        <label>Remise</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            style={{ width: '100%' }}\r\n                                            value={input.remise}\r\n                                            onChange={(e) => handleRemiseChange(e, index)}\r\n                                            onKeyDown={handleKeyPress} // Call handleKeyPress on key press\r\n                                            ref={remiseInputRef} // Set the ref for Remise input field\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{ marginLeft: '10px' }}>\r\n                                        <button type=\"button\" onClick={handleAddInput}>+</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\r\n                            <button\r\n                                style={{ width: '200px', marginBottom: '10px' }}\r\n                                type=\"button\"\r\n                                onClick={handleAddInput}\r\n                            >\r\n                                Ajouter\r\n                            </button>\r\n                            <button\r\n                                style={{ width: '200px', marginBottom: '10px' }}\r\n                                type=\"submit\"\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                Enregistrer\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ marginBottom: '20px' }}>\r\n                <label>Total</label>\r\n                <input\r\n                    type=\"text\"\r\n                    style={{ width: '100%' }}\r\n                    value={calculateTotal()}\r\n                    readOnly\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateFactureVente;\r\n\r\n    \r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}