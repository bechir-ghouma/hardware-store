{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\CreateFactureVente.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function CreateFactureVente() {\n//     const [client, setClient] = useState('');\n//     const [date, setDate] = useState('');\n//     const [code, setCode] = useState('');\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0 }]);\n//     const [references, setReferences] = useState([]);\n//     const [telephone, setTelephone] = useState('');\n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/article')\n//             .then(res => {\n//                 setReferences(res.data.map(article => article.ref));\n//             })\n//             .catch(err => console.log(err));\n//     }, []);\n\n//     const fetchPriceByReference = (reference, index) => {\n//         axios.get(`http://localhost:7777/factureVente/${reference}`) \n//             .then(res => {\n//                 const price = res.data.price;\n//                 const newInputs = [...inputs];\n//                 newInputs[index].price = price;\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.log(err));\n//     };\n\n//     const handleReferenceChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].refAr = value;\n//         setInputs(newInputs);\n//         fetchPriceByReference(value, index); \n//     };\n\n//     const handleQuantityChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//             .then(res => {\n//                 const availableQuantity = res.data.quantity;\n\n//                 // Calculate the remaining quantity\n//                 const remainingQuantity = availableQuantity - parseInt(value);\n\n//                 if (remainingQuantity < 0) {\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//                     // Reset the quantity input field to the available quantity\n//                     newInputs[index].quantité = availableQuantity;\n//                 } else {\n//                     newInputs[index].quantité = value;\n//                 }\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.error(err));\n//     };\n\n//     const handleAddInput = () => {\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '' }]);\n//     };\n\n//     const calculateTotal = () => {\n//         return inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0);\n//     };\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n\n//         const invalidReference = inputs.some(input => !references.includes(input.refAr));\n//         if (invalidReference) {\n//             alert(\"Sélectionner une référence valide\");\n//             return; // Stop the submission process\n//         }\n\n//         const refArArray = [];\n//         const quantiteArray = [];\n//         inputs.forEach(input => {\n//             refArArray.push(input.refAr);\n//             quantiteArray.push(input.quantité);\n//         });\n\n//         const totalPrice = calculateTotal();\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\n//             client,\n//             date,\n//             code,\n//             refAr: refArArray,\n//             quantité: quantiteArray,\n//             totalPrice\n//         })\n//             .then(res => {\n//                 console.log(res);\n//                 // After successful posting, update the quantities in the article table\n//                 updateArticleQuantities(refArArray, quantiteArray);\n//                 window.location.reload();\n//             })\n//             .catch(err => console.log(err))\n//     };\n\n//     const updateArticleQuantities = (refArArray, quantiteArray) => {\n//         // Iterate over each article reference and its corresponding quantity\n//         refArArray.forEach((refAr, index) => {\n//             const updatedQuantity = parseInt(quantiteArray[index]);\n//             axios.put(`http://localhost:7777/article/${refAr}/updateQuantity`, {\n//                 updatedQuantity\n//             })\n//             .then(res => console.log(res))\n//             .catch(err => console.error(err));\n//         });\n//     };\n\n//     return (\n//         <div className='container mt-5'>\n//             <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Nom du client</label>\n//                         <input type='text' placeholder='Entrez le nom du client' className='form-control'\n//                             onChange={e => setClient(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Date</label>\n//                         <input type=\"date\" className='form-control'\n//                             onChange={e => setDate(e.target.value)}\n//                         />\n//                     </div>\n//                 </div>\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Code de la facture</label>\n//                         <input type='text' placeholder='Entrez le code de la facture' className='form-control'\n//                             onChange={e => setCode(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Téléphone</label>\n//                         <input\n//                             type=\"text\"\n//                             className='form-control'\n//                             placeholder=\"Entrez le numéro de téléphone\"\n//                             value={telephone}\n//                             onChange={(e) => setTelephone(e.target.value)}\n//                         />\n//                     </div>\n//                 </div>\n//                 {inputs.map((input, index) => (\n//                     <div className=\"row mb-3\" key={index}>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Référence d'article</label>\n//                             <input\n//                                 list=\"references\"\n//                                 className='form-control'\n//                                 placeholder=\"Select or type reference...\"\n//                                 value={input.refAr}\n//                                 onChange={(e) => handleReferenceChange(e, index)}\n//                             />\n//                             <datalist id=\"references\">\n//                                 {references.map((reference, idx) => (\n//                                     <option key={idx} value={reference} />\n//                                 ))}\n//                             </datalist>\n//                         </div>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Prix vente TTC</label>\n//                             <input type='number' placeholder=\"Prix d'article\" className='form-control'\n//                                 value={input.price} // Display the price\n//                                 readOnly // Make it read-only\n//                             />\n//                         </div>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Quantité</label>\n//                             <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\n//                                 value={input.quantité}\n//                                 onChange={(e) => handleQuantityChange(e, index)}\n//                             />\n//                         </div>\n//                     </div>\n//                 ))}\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Total</label>\n//                         <input type='number' placeholder='Total de la facture' className='form-control' value={calculateTotal()} readOnly />\n//                     </div>\n//                 </div>\n//                 <button type=\"button\" className='btn btn-success' onClick={handleAddInput}>Ajouter</button>\n//                 <button type=\"submit\" className='btn btn-primary'>Enregistrer</button>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default CreateFactureVente;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Ensure Bootstrap is included\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateFactureVente({\n  onAddFVente,\n  onDelete,\n  selectedFacture\n}) {\n  _s();\n  const [client, setClient] = useState('');\n  const [date, setDate] = useState('');\n  const [code, setCode] = useState('');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0,\n    remise: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [telephone, setTelephone] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:7777/article').then(res => setReferences(res.data.map(article => article.ref))).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    if (selectedFacture) {\n      setClient(selectedFacture.client || '');\n      setDate(selectedFacture.date || '');\n      setCode(selectedFacture.code || '');\n      setInputs(selectedFacture.inputs || [{\n        refAr: '',\n        quantité: '',\n        price: 0,\n        remise: 0\n      }]);\n      setTelephone(selectedFacture.telephone || '');\n    }\n  }, [selectedFacture]);\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/factureVente/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log(err));\n  };\n  const handleReferenceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n    fetchPriceByReference(value, index);\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`).then(res => {\n      const availableQuantity = res.data.quantity;\n      const remainingQuantity = availableQuantity - parseInt(value);\n      if (remainingQuantity < 0) {\n        alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n        newInputs[index].quantité = availableQuantity;\n      } else {\n        newInputs[index].quantité = value;\n      }\n      setInputs(newInputs);\n    }).catch(err => console.error(err));\n  };\n  const handleRemiseChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].remise = value;\n    setInputs(newInputs);\n  };\n  const handleAddInput = () => {\n    setInputs([...inputs, {\n      refAr: '',\n      price: 0,\n      quantité: '',\n      remise: 0\n    }]);\n  };\n  const calculateTotal = () => {\n    return inputs.reduce((acc, curr) => acc + curr.price * curr.quantité * (1 - curr.remise / 100), 0);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const invalidReference = inputs.some(input => !references.includes(input.refAr));\n    if (invalidReference) {\n      alert(\"Sélectionner une référence valide\");\n      return;\n    }\n    const refArArray = [];\n    const quantiteArray = [];\n    const remiseArray = [];\n    inputs.forEach(input => {\n      refArArray.push(input.refAr);\n      quantiteArray.push(input.quantité);\n      remiseArray.push(input.remise);\n    });\n    const totalPrice = calculateTotal();\n    axios.post('http://localhost:7777/factureVente/createFac/', {\n      client,\n      date,\n      code,\n      refAr: refArArray,\n      quantité: quantiteArray,\n      remise: remiseArray,\n      totalPrice\n    }).then(res => {\n      onAddFVente({\n        client,\n        date,\n        code,\n        refAr: refArArray,\n        quantité: quantiteArray,\n        remise: remiseArray,\n        totalPrice\n      });\n      updateArticleQuantities(refArArray, quantiteArray);\n      clearInputs();\n    }).catch(err => console.log(err));\n  };\n  const updateArticleQuantities = (refArArray, quantiteArray) => {\n    refArArray.forEach((refAr, index) => {\n      const updatedQuantity = parseInt(quantiteArray[index]);\n      axios.put(`http://localhost:7777/article/${refAr}/updateQuantity`, {\n        updatedQuantity\n      }).then(res => console.log(res)).catch(err => console.error(err));\n    });\n  };\n  const clearInputs = () => {\n    setClient('');\n    setDate('');\n    setCode('');\n    setInputs([{\n      refAr: '',\n      quantité: '',\n      price: 0,\n      remise: 0\n    }]);\n    setTelephone('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"client\",\n            children: \"Nom du client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            id: \"client\",\n            value: client,\n            onChange: e => setClient(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"date\",\n            id: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"code\",\n            children: \"Code de la facture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            id: \"code\",\n            value: code,\n            onChange: e => setCode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"telephone\",\n            children: \"T\\xE9l\\xE9phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            id: \"telephone\",\n            value: telephone,\n            onChange: e => setTelephone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this), inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `refAr-${index}`,\n            children: \"R\\xE9f\\xE9rence d'article\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            list: \"references\",\n            className: \"form-control\",\n            id: `refAr-${index}`,\n            value: input.refAr,\n            onChange: e => handleReferenceChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"references\",\n            children: references.map((reference, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: reference\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `price-${index}`,\n            children: \"Prix vente TTC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"number\",\n            id: `price-${index}`,\n            value: input.price,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `quantité-${index}`,\n            children: \"Quantit\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"number\",\n            id: `quantité-${index}`,\n            value: input.quantité,\n            onChange: e => handleQuantityChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `remise-${index}`,\n            children: \"Remise (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"number\",\n            id: `remise-${index}`,\n            value: input.remise,\n            onChange: e => handleRemiseChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"total\",\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"number\",\n            id: \"total\",\n            value: calculateTotal(),\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"button\",\n          onClick: handleAddInput,\n          children: \"Ajouter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          type: \"submit\",\n          children: \"Enregistrer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          type: \"button\",\n          onClick: () => {\n            if (selectedFacture) {\n              const confirmed = window.confirm(\"Êtes-vous sûr de vouloir supprimer cette facture ?\");\n              if (confirmed) {\n                onDelete(selectedFacture.id);\n                clearInputs();\n              }\n            } else {\n              console.log(\"No facture selected for deletion\");\n            }\n          },\n          children: \"Supprimer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          type: \"button\",\n          onClick: clearInputs,\n          children: \"Vider les champs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 345,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateFactureVente, \"x61W9B5ZYzJmYPBFiu9NS+TALpM=\");\n_c = CreateFactureVente;\nexport default CreateFactureVente;\nvar _c;\n$RefreshReg$(_c, \"CreateFactureVente\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CreateFactureVente","onAddFVente","onDelete","selectedFacture","_s","client","setClient","date","setDate","code","setCode","inputs","setInputs","refAr","quantité","price","remise","references","setReferences","telephone","setTelephone","get","then","res","data","map","article","ref","catch","err","console","log","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","event","value","target","handleQuantityChange","availableQuantity","quantity","remainingQuantity","parseInt","alert","error","handleRemiseChange","handleAddInput","calculateTotal","reduce","acc","curr","handleSubmit","preventDefault","invalidReference","some","input","includes","refArArray","quantiteArray","remiseArray","forEach","push","totalPrice","post","updateArticleQuantities","clearInputs","updatedQuantity","put","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","e","list","idx","readOnly","onClick","confirmed","window","confirm","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureVente.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function CreateFactureVente() {\r\n//     const [client, setClient] = useState('');\r\n//     const [date, setDate] = useState('');\r\n//     const [code, setCode] = useState('');\r\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0 }]);\r\n//     const [references, setReferences] = useState([]);\r\n//     const [telephone, setTelephone] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/article')\r\n//             .then(res => {\r\n//                 setReferences(res.data.map(article => article.ref));\r\n//             })\r\n//             .catch(err => console.log(err));\r\n//     }, []);\r\n\r\n//     const fetchPriceByReference = (reference, index) => {\r\n//         axios.get(`http://localhost:7777/factureVente/${reference}`) \r\n//             .then(res => {\r\n//                 const price = res.data.price;\r\n//                 const newInputs = [...inputs];\r\n//                 newInputs[index].price = price;\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.log(err));\r\n//     };\r\n\r\n//     const handleReferenceChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].refAr = value;\r\n//         setInputs(newInputs);\r\n//         fetchPriceByReference(value, index); \r\n//     };\r\n\r\n//     const handleQuantityChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n\r\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//             .then(res => {\r\n//                 const availableQuantity = res.data.quantity;\r\n\r\n//                 // Calculate the remaining quantity\r\n//                 const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n//                 if (remainingQuantity < 0) {\r\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//                     // Reset the quantity input field to the available quantity\r\n//                     newInputs[index].quantité = availableQuantity;\r\n//                 } else {\r\n//                     newInputs[index].quantité = value;\r\n//                 }\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.error(err));\r\n//     };\r\n\r\n//     const handleAddInput = () => {\r\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '' }]);\r\n//     };\r\n\r\n//     const calculateTotal = () => {\r\n//         return inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0);\r\n//     };\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n\r\n//         const invalidReference = inputs.some(input => !references.includes(input.refAr));\r\n//         if (invalidReference) {\r\n//             alert(\"Sélectionner une référence valide\");\r\n//             return; // Stop the submission process\r\n//         }\r\n\r\n//         const refArArray = [];\r\n//         const quantiteArray = [];\r\n//         inputs.forEach(input => {\r\n//             refArArray.push(input.refAr);\r\n//             quantiteArray.push(input.quantité);\r\n//         });\r\n\r\n//         const totalPrice = calculateTotal();\r\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//             client,\r\n//             date,\r\n//             code,\r\n//             refAr: refArArray,\r\n//             quantité: quantiteArray,\r\n//             totalPrice\r\n//         })\r\n//             .then(res => {\r\n//                 console.log(res);\r\n//                 // After successful posting, update the quantities in the article table\r\n//                 updateArticleQuantities(refArArray, quantiteArray);\r\n//                 window.location.reload();\r\n//             })\r\n//             .catch(err => console.log(err))\r\n//     };\r\n\r\n//     const updateArticleQuantities = (refArArray, quantiteArray) => {\r\n//         // Iterate over each article reference and its corresponding quantity\r\n//         refArArray.forEach((refAr, index) => {\r\n//             const updatedQuantity = parseInt(quantiteArray[index]);\r\n//             axios.put(`http://localhost:7777/article/${refAr}/updateQuantity`, {\r\n//                 updatedQuantity\r\n//             })\r\n//             .then(res => console.log(res))\r\n//             .catch(err => console.error(err));\r\n//         });\r\n//     };\r\n\r\n//     return (\r\n//         <div className='container mt-5'>\r\n//             <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Nom du client</label>\r\n//                         <input type='text' placeholder='Entrez le nom du client' className='form-control'\r\n//                             onChange={e => setClient(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Date</label>\r\n//                         <input type=\"date\" className='form-control'\r\n//                             onChange={e => setDate(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Code de la facture</label>\r\n//                         <input type='text' placeholder='Entrez le code de la facture' className='form-control'\r\n//                             onChange={e => setCode(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Téléphone</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             className='form-control'\r\n//                             placeholder=\"Entrez le numéro de téléphone\"\r\n//                             value={telephone}\r\n//                             onChange={(e) => setTelephone(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 {inputs.map((input, index) => (\r\n//                     <div className=\"row mb-3\" key={index}>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Référence d'article</label>\r\n//                             <input\r\n//                                 list=\"references\"\r\n//                                 className='form-control'\r\n//                                 placeholder=\"Select or type reference...\"\r\n//                                 value={input.refAr}\r\n//                                 onChange={(e) => handleReferenceChange(e, index)}\r\n//                             />\r\n//                             <datalist id=\"references\">\r\n//                                 {references.map((reference, idx) => (\r\n//                                     <option key={idx} value={reference} />\r\n//                                 ))}\r\n//                             </datalist>\r\n//                         </div>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Prix vente TTC</label>\r\n//                             <input type='number' placeholder=\"Prix d'article\" className='form-control'\r\n//                                 value={input.price} // Display the price\r\n//                                 readOnly // Make it read-only\r\n//                             />\r\n//                         </div>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Quantité</label>\r\n//                             <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\r\n//                                 value={input.quantité}\r\n//                                 onChange={(e) => handleQuantityChange(e, index)}\r\n//                             />\r\n//                         </div>\r\n//                     </div>\r\n//                 ))}\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Total</label>\r\n//                         <input type='number' placeholder='Total de la facture' className='form-control' value={calculateTotal()} readOnly />\r\n//                     </div>\r\n//                 </div>\r\n//                 <button type=\"button\" className='btn btn-success' onClick={handleAddInput}>Ajouter</button>\r\n//                 <button type=\"submit\" className='btn btn-primary'>Enregistrer</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Ensure Bootstrap is included\r\n\r\nfunction CreateFactureVente({ onAddFVente, onDelete, selectedFacture }) {\r\n    const [client, setClient] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [code, setCode] = useState('');\r\n    const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n    const [references, setReferences] = useState([]);\r\n    const [telephone, setTelephone] = useState('');\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7777/article')\r\n            .then(res => setReferences(res.data.map(article => article.ref)))\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedFacture) {\r\n            setClient(selectedFacture.client || '');\r\n            setDate(selectedFacture.date || '');\r\n            setCode(selectedFacture.code || '');\r\n            setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n            setTelephone(selectedFacture.telephone || '');\r\n        }\r\n    }, [selectedFacture]);\r\n\r\n    const fetchPriceByReference = (reference, index) => {\r\n        axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n            .then(res => {\r\n                const price = res.data.price;\r\n                const newInputs = [...inputs];\r\n                newInputs[index].price = price;\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    const handleReferenceChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].refAr = value;\r\n        setInputs(newInputs);\r\n        fetchPriceByReference(value, index);\r\n    };\r\n\r\n    const handleQuantityChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n\r\n        axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n            .then(res => {\r\n                const availableQuantity = res.data.quantity;\r\n                const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n                if (remainingQuantity < 0) {\r\n                    alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n                    newInputs[index].quantité = availableQuantity;\r\n                } else {\r\n                    newInputs[index].quantité = value;\r\n                }\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.error(err));\r\n    };\r\n\r\n    const handleRemiseChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].remise = value;\r\n        setInputs(newInputs);\r\n    };\r\n\r\n    const handleAddInput = () => {\r\n        setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n    };\r\n\r\n    const calculateTotal = () => {\r\n        return inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité * (1 - curr.remise / 100)), 0);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const invalidReference = inputs.some(input => !references.includes(input.refAr));\r\n        if (invalidReference) {\r\n            alert(\"Sélectionner une référence valide\");\r\n            return;\r\n        }\r\n\r\n        const refArArray = [];\r\n        const quantiteArray = [];\r\n        const remiseArray = [];\r\n        inputs.forEach(input => {\r\n            refArArray.push(input.refAr);\r\n            quantiteArray.push(input.quantité);\r\n            remiseArray.push(input.remise);\r\n        });\r\n\r\n        const totalPrice = calculateTotal();\r\n        axios.post('http://localhost:7777/factureVente/createFac/', {\r\n            client,\r\n            date,\r\n            code,\r\n            refAr: refArArray,\r\n            quantité: quantiteArray,\r\n            remise: remiseArray,\r\n            totalPrice\r\n        })\r\n            .then(res => {\r\n                onAddFVente({\r\n                    client,\r\n                    date,\r\n                    code,\r\n                    refAr: refArArray,\r\n                    quantité: quantiteArray,\r\n                    remise: remiseArray,\r\n                    totalPrice\r\n                });\r\n                updateArticleQuantities(refArArray, quantiteArray);\r\n                clearInputs();\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    const updateArticleQuantities = (refArArray, quantiteArray) => {\r\n        refArArray.forEach((refAr, index) => {\r\n            const updatedQuantity = parseInt(quantiteArray[index]);\r\n            axios.put(`http://localhost:7777/article/${refAr}/updateQuantity`, {\r\n                updatedQuantity\r\n            })\r\n            .then(res => console.log(res))\r\n            .catch(err => console.error(err));\r\n        });\r\n    };\r\n\r\n    const clearInputs = () => {\r\n        setClient('');\r\n        setDate('');\r\n        setCode('');\r\n        setInputs([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n        setTelephone('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"row mb-3\">\r\n                    <div className=\"col-md-6\">\r\n                        <label htmlFor=\"client\">Nom du client</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"client\"\r\n                            value={client}\r\n                            onChange={(e) => setClient(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <label htmlFor=\"date\">Date</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            id=\"date\"\r\n                            value={date}\r\n                            onChange={(e) => setDate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mb-3\">\r\n                    <div className=\"col-md-6\">\r\n                        <label htmlFor=\"code\">Code de la facture</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"code\"\r\n                            value={code}\r\n                            onChange={(e) => setCode(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <label htmlFor=\"telephone\">Téléphone</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"telephone\"\r\n                            value={telephone}\r\n                            onChange={(e) => setTelephone(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {inputs.map((input, index) => (\r\n                    <div key={index} className=\"row mb-3\">\r\n                        <div className=\"col-md-3\">\r\n                            <label htmlFor={`refAr-${index}`}>Référence d'article</label>\r\n                            <input\r\n                                list=\"references\"\r\n                                className=\"form-control\"\r\n                                id={`refAr-${index}`}\r\n                                value={input.refAr}\r\n                                onChange={(e) => handleReferenceChange(e, index)}\r\n                            />\r\n                            <datalist id=\"references\">\r\n                                {references.map((reference, idx) => (\r\n                                    <option key={idx} value={reference} />\r\n                                ))}\r\n                            </datalist>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <label htmlFor={`price-${index}`}>Prix vente TTC</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id={`price-${index}`}\r\n                                value={input.price}\r\n                                readOnly\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <label htmlFor={`quantité-${index}`}>Quantité</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id={`quantité-${index}`}\r\n                                value={input.quantité}\r\n                                onChange={(e) => handleQuantityChange(e, index)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <label htmlFor={`remise-${index}`}>Remise (%)</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id={`remise-${index}`}\r\n                                value={input.remise}\r\n                                onChange={(e) => handleRemiseChange(e, index)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n\r\n                <div className=\"row mb-3\">\r\n                    <div className=\"col-md-6\">\r\n                        <label htmlFor=\"total\">Total</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            id=\"total\"\r\n                            value={calculateTotal()}\r\n                            readOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <button className=\"btn btn-primary\" type=\"button\" onClick={handleAddInput}>Ajouter</button>\r\n                    <button className=\"btn btn-success\" type=\"submit\">Enregistrer</button>\r\n                    <button\r\n                        className=\"btn btn-danger\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            if (selectedFacture) {\r\n                                const confirmed = window.confirm(\"Êtes-vous sûr de vouloir supprimer cette facture ?\");\r\n                                if (confirmed) {\r\n                                    onDelete(selectedFacture.id);\r\n                                    clearInputs();\r\n                                }\r\n                            } else {\r\n                                console.log(\"No facture selected for deletion\");\r\n                            }\r\n                        }}\r\n                    >\r\n                        Supprimer\r\n                    </button>\r\n                    <button className=\"btn btn-secondary\" type=\"button\" onClick={clearInputs}>Vider les champs</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateFactureVente;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,kBAAkBA,CAAC;EAAEC,WAAW;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACpE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}