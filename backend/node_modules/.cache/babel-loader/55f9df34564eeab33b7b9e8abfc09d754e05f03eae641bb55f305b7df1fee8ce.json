{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function CreateFactureVente() {\n//     const [client, setClient] = useState('');\n//     const [date, setDate] = useState('');\n//     const [code, setCode] = useState('');\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0 }]);\n//     const [references, setReferences] = useState([]);\n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/references')\n//             .then(res => {\n//                 setReferences(res.data);\n//             })\n//             .catch(err => console.log(err));\n//     }, []);\n\n//     function handleSubmit(event) {\n//         event.preventDefault();\n//         const totalPrice = inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0);\n//         // axios.post('http://localhost:7777/factureVente/createFac/', {\n//         //     client,\n//         //     date,\n//         //     code,\n//         //     inputs,\n//         //     totalPrice \n//         // })\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\n//     client: client,\n//     date: date,\n//     code: code,\n//     refAr: inputs.map(input => input.refAr), // Extract refAr values from inputs\n//     quantité: inputs.map(input => input.quantité), // Extract quantité values from inputs\n//     totalPrice: totalPrice \n// })\n\n//         .then(res => {\n//             console.log(res);\n//             window.location.reload();\n//         })\n//         .catch(err => console.log(err))\n//     }\n\n//     function handleQuantityChange(event, index) {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].quantité = value;\n//         setInputs(newInputs);\n//     }\n\n//     function handleReferenceChange(event, index) {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].refAr = value;\n//         setInputs(newInputs);\n//     }\n\n//     function handlePriceChange(event, index) {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].price = value;\n//         setInputs(newInputs);\n//     }\n\n//     function handleAddInput() {\n//         setInputs([...inputs, { refAr: '', price: 0 , quantité: ''}]);\n//     }\n\n//     return (\n//         <div className='container mt-5'>\n//             <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Nom du client</label>\n//                         <input type='text' placeholder='Entrez le nom du client' className='form-control'\n//                             onChange={e => setClient(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Date</label>\n//                         <input type=\"date\" className='form-control'\n//                             onChange={e => setDate(e.target.value)}\n//                         />\n//                     </div>\n//                 </div>\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Code de la facture</label>\n//                         <input type='text' placeholder='Entrez le code de la facture' className='form-control'\n//                             onChange={e => setCode(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Référence d'article</label>\n//                         <input\n//                             list=\"references\"\n//                             className='form-control'\n//                             placeholder=\"Select or type reference...\"\n//                             value={inputs[0].refAr}\n//                             onChange={(e) => handleReferenceChange(e, 0)}\n//                         />\n//                         <datalist id=\"references\">\n//                             {references.map((reference, index) => (\n//                                 <option key={index} value={reference.refAr} />\n//                             ))}\n//                         </datalist>\n//                     </div>\n//                 </div>\n//                 {inputs.map((input, index) => (\n//                     <div className=\"row mb-3\" key={index}>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Référence d'article</label>\n//                             <input\n//                                 list=\"references\"\n//                                 className='form-control'\n//                                 placeholder=\"Select or type reference...\"\n//                                 value={input.refAr}\n//                                 onChange={(e) => handleReferenceChange(e, index)}\n//                             />\n//                             <datalist id=\"references\">\n//                                 {references.map((reference, idx) => (\n//                                     <option key={idx} value={reference.refAr} />\n//                                 ))}\n//                             </datalist>\n//                         </div>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Prix Article</label>\n//                             <input type='number' placeholder=\"Prix d'article\" className='form-control'\n//                                 value={input.price}\n//                                 onChange={(e) => handlePriceChange(e, index)}\n//                             />\n//                         </div>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Quantité</label>\n//                             <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\n//                                 value={input.quantité}\n//                                 onChange={(e) => handleQuantityChange(e, index)}\n//                             />\n//                         </div>\n//                     </div>\n//                 ))}\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Total</label>\n//                         <input type='number' placeholder='Total de la facture' className='form-control'\n//                             // value={inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0)}\n//                             // disabled\n//                         />\n//                     </div>\n//                 </div>\n//                 <button type=\"button\" className='btn btn-success' onClick={handleAddInput}>Ajouter</button>\n//                 <button type=\"submit\" className='btn btn-primary'>Enregistrer</button>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default CreateFactureVente;","map":{"version":3,"names":[],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureVente.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function CreateFactureVente() {\r\n//     const [client, setClient] = useState('');\r\n//     const [date, setDate] = useState('');\r\n//     const [code, setCode] = useState('');\r\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0 }]);\r\n//     const [references, setReferences] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/references')\r\n//             .then(res => {\r\n//                 setReferences(res.data);\r\n//             })\r\n//             .catch(err => console.log(err));\r\n//     }, []);\r\n\r\n//     function handleSubmit(event) {\r\n//         event.preventDefault();\r\n//         const totalPrice = inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0);\r\n//         // axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//         //     client,\r\n//         //     date,\r\n//         //     code,\r\n//         //     inputs,\r\n//         //     totalPrice \r\n//         // })\r\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//     client: client,\r\n//     date: date,\r\n//     code: code,\r\n//     refAr: inputs.map(input => input.refAr), // Extract refAr values from inputs\r\n//     quantité: inputs.map(input => input.quantité), // Extract quantité values from inputs\r\n//     totalPrice: totalPrice \r\n// })\r\n\r\n//         .then(res => {\r\n//             console.log(res);\r\n//             window.location.reload();\r\n//         })\r\n//         .catch(err => console.log(err))\r\n//     }\r\n\r\n//     function handleQuantityChange(event, index) {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].quantité = value;\r\n//         setInputs(newInputs);\r\n//     }\r\n\r\n//     function handleReferenceChange(event, index) {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].refAr = value;\r\n//         setInputs(newInputs);\r\n//     }\r\n\r\n//     function handlePriceChange(event, index) {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].price = value;\r\n//         setInputs(newInputs);\r\n//     }\r\n\r\n//     function handleAddInput() {\r\n//         setInputs([...inputs, { refAr: '', price: 0 , quantité: ''}]);\r\n//     }\r\n\r\n//     return (\r\n//         <div className='container mt-5'>\r\n//             <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Nom du client</label>\r\n//                         <input type='text' placeholder='Entrez le nom du client' className='form-control'\r\n//                             onChange={e => setClient(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Date</label>\r\n//                         <input type=\"date\" className='form-control'\r\n//                             onChange={e => setDate(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Code de la facture</label>\r\n//                         <input type='text' placeholder='Entrez le code de la facture' className='form-control'\r\n//                             onChange={e => setCode(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Référence d'article</label>\r\n//                         <input\r\n//                             list=\"references\"\r\n//                             className='form-control'\r\n//                             placeholder=\"Select or type reference...\"\r\n//                             value={inputs[0].refAr}\r\n//                             onChange={(e) => handleReferenceChange(e, 0)}\r\n//                         />\r\n//                         <datalist id=\"references\">\r\n//                             {references.map((reference, index) => (\r\n//                                 <option key={index} value={reference.refAr} />\r\n//                             ))}\r\n//                         </datalist>\r\n//                     </div>\r\n//                 </div>\r\n//                 {inputs.map((input, index) => (\r\n//                     <div className=\"row mb-3\" key={index}>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Référence d'article</label>\r\n//                             <input\r\n//                                 list=\"references\"\r\n//                                 className='form-control'\r\n//                                 placeholder=\"Select or type reference...\"\r\n//                                 value={input.refAr}\r\n//                                 onChange={(e) => handleReferenceChange(e, index)}\r\n//                             />\r\n//                             <datalist id=\"references\">\r\n//                                 {references.map((reference, idx) => (\r\n//                                     <option key={idx} value={reference.refAr} />\r\n//                                 ))}\r\n//                             </datalist>\r\n//                         </div>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Prix Article</label>\r\n//                             <input type='number' placeholder=\"Prix d'article\" className='form-control'\r\n//                                 value={input.price}\r\n//                                 onChange={(e) => handlePriceChange(e, index)}\r\n//                             />\r\n//                         </div>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Quantité</label>\r\n//                             <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\r\n//                                 value={input.quantité}\r\n//                                 onChange={(e) => handleQuantityChange(e, index)}\r\n//                             />\r\n//                         </div>\r\n//                     </div>\r\n//                 ))}\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Total</label>\r\n//                         <input type='number' placeholder='Total de la facture' className='form-control'\r\n//                             // value={inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0)}\r\n//                             // disabled\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <button type=\"button\" className='btn btn-success' onClick={handleAddInput}>Ajouter</button>\r\n//                 <button type=\"submit\" className='btn btn-primary'>Enregistrer</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}