{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\CreateFactureVente.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React, { useState, useEffect, useRef } from 'react';\n// import axios from 'axios';\n\n// function CreateFactureVente({ selectedFacture }) {\n//     const [clName, setClName] = useState('');\n//     const [client_id, setClientCode] = useState('');\n//     const [date, setDate] = useState('');\n//     const [DT, setDT] = useState('1.000');\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//     const [references, setReferences] = useState([]);\n//     const [filteredClients, setFilteredClients] = useState([]);\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\n\n//     const remiseInputRef = useRef(null); \n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/article')\n//             .then(res => {\n//                 setReferences(res.data.map(article => article.ref));\n//             })\n//             .catch(err => console.log('Error fetching articles:', err));\n//     }, []);\n\n//     useEffect(() => {\n//         if (selectedFacture) {\n//             console.log('Selected Facture in CreateFactureVente:', selectedFacture); // Debug log\n//             setClName(selectedFacture.clName || '');\n//             setClientCode(selectedFacture.client_id || '');\n//             setDate(selectedFacture.date || '');\n//             setDT(selectedFacture.DT || '1.000');\n//             setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//         }\n//     }, [selectedFacture]);\n\n//     const fetchPriceByReference = (reference, index) => {\n//         axios.get(`http://localhost:7777/factureVente/${reference}`)\n//             .then(res => {\n//                 const price = res.data.price;\n//                 const newInputs = [...inputs];\n//                 newInputs[index].price = price;\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.log('Error fetching price:', err));\n//     };\n\n//     const handleReferenceChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].refAr = value;\n//         setInputs(newInputs);\n//         fetchPriceByReference(value, index);\n//     };\n\n//     const handleRemiseChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].remise = value;\n//         setInputs(newInputs);\n//     };\n\n//     const handleQuantityChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].quantité = value;\n\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//             .then(res => {\n//                 const availableQuantity = res.data.quantity;\n//                 const remainingQuantity = availableQuantity - parseInt(value);\n\n//                 if (remainingQuantity < 0) {\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//                     newInputs[index].quantité = availableQuantity;\n//                 }\n\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.error('Error fetching quantity:', err));\n\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\n//         console.log(\"New Total:\", newTotal);\n//     };\n\n//     const handleAddInput = () => {\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n//         if (isEmpty) {\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n//             return;\n//         }\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\n//     };\n\n//     const calculateTotal = () => {\n//         if (!inputs) return 0; \n//         const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\n//         return total.toFixed(3); // Round to three decimal places\n//     };\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//         if (invalidReference) {\n//             alert(\"Sélectionner une référence valide\");\n//             return;\n//         }\n\n//         const totalPrice = calculateTotal();\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\n//             clName,\n//             client_id,\n//             date,\n//             DT,\n//             refAr: nonEmptyInputs.map(input => input.refAr),\n//             quantité: nonEmptyInputs.map(input => input.quantité),\n//             remise: nonEmptyInputs.map(input => input.remise),\n//             totalPrice\n//         })\n//         .then(res => {\n//             console.log(res);\n//             window.location.reload();\n//         })\n//         .catch(err => console.log('Error creating facture:', err));\n//     };\n\n//     const handleKeyPress = (event) => {\n//         if (event.key === 'Enter') {\n//             handleAddInput();\n//         }\n//     };\n\n//     const handleClientSelect = (name, code) => {\n//         setClName(name);\n//         setClientCode(code);\n//         setFilteredClients([]);\n//     };\n\n//     const handleClientChange = (e) => {\n//         const { value } = e.target;\n//         setClName(value);\n\n//         // Fetch filtered clients from the server\n//         axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//             .then(res => {\n//                 setFilteredClients(res.data);\n//             })\n//             .catch(err => console.log('Error fetching clients:', err));\n\n//         // Retrieve the client code based on the entered client name\n//         axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//             .then(res => {\n//                 if (res.data.length > 0) {\n//                     // Assuming the client code is stored in res.data[0].clID\n//                     setClientCode(res.data[0].clID);\n//                 } else {\n//                     // Clear the client code if no matching client is found\n//                     setClientCode('');\n//                 }\n//             })\n//             .catch(err => console.log('Error fetching client code:', err));\n//     };\n// const handleClientBlur = () => {\n//     // Clear the filtered clients list when the input field loses focus\n//     setFilteredClients([]);\n// };\n// const handleClientCodeChange = (e) => {\n//     const { value } = e.target;\n//     setClientCode(value);\n\n//     // Fetch client name based on the entered code\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\n//         .then(res => {\n//             if (res.data.length > 0) {\n//                 // Assuming the client name is stored in res.data[0].clName\n//                 setClName(res.data[0].clName);\n//             } else {\n//                 // Clear the client name if no matching client is found\n//                 setClName('');\n//             }\n//         })\n//         .catch(err => console.log('Error fetching client name:', err));\n// };\n\n// return (\n//     <div style={{ margin: '20px', justifyContent: 'center' }}>\n//         <div style={{ display: 'flex', flex: '1' }}>\n//             <div>\n//                 <div style={{ marginBottom: '20px' }}>\n//                     <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\n//                     <input\n// style={{ width: '200px' }}\n// type=\"text\"\n// id=\"code-client\"\n// name=\"code-client\"\n// value={client_id} // Display the client code\n// onChange={handleClientCodeChange} // Fetch and display client name based on code\n// />\n\n//                 </div>\n//                 <div style={{ marginBottom: '20px', position: 'relative' }}>\n//                     <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\n//                     <input\n//                         style={{ width: '200px' }}\n//                         type=\"text\"\n//                         id=\"client\"\n//                         value={clName}\n//                         onChange={handleClientChange}\n//                         onBlur={handleClientBlur} // Add onBlur event to clear filtered clients list\n//                     />\n//                     {filteredClients.length > 0 && (\n//                         <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\n//                             {filteredClients.map((client, index) => (\n//                                 <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\n//                                     {client.clName}\n//                                 </div>\n//                             ))}\n//                         </div>\n//                     )}\n//                 </div>\n//                 <div style={{ marginBottom: '20px' }}>\n//                     <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\n//                     <input\n//                         style={{ width: '200px' }}\n//                         type=\"date\"\n//                         id=\"date\"\n//                         value={date}\n//                         onChange={(e) => setDate(e.target.value)}\n//                     />\n//                 </div>\n//                 <div style={{ marginBottom: '20px' }}>\n//                     <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\n//                     <input\n//                         style={{ width: '200px' }}\n//                         type=\"text\"\n//                         id=\"code\"\n//                         value={DT}\n//                         onChange={(e) => setDT(e.target.value)}\n//                         onBlur={handleQuantityChange} // Add onBlur event to trigger recalculation when \"Droit de timbre\" value changes\n//                     />\n//                 </div>\n//             </div>\n//             <div>\n//                 <div>\n//                     {inputs.map((input, index) => (\n//                         <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                             <div style={{ flex: '1', marginRight: '10px' }}>\n//                                 <label>Référence d'article</label>\n//                                 <input\n//                                     list=\"references\"\n//                                     style={{ width: '100%' }}\n//                                     value={input.refAr}\n//                                     onChange={(e) => handleReferenceChange(e, index)}\n//                                 />\n//                                 <datalist id=\"references\">\n//                                     {references.map((reference, idx) => (\n//                                         <option key={idx} value={reference} />\n//                                     ))}\n//                                 </datalist>\n//                             </div>\n//                             <div style={{ flex: '1', marginRight: '10px' }}>\n//                                 <label>Prix vente TTC</label>\n//                                 <input\n//                                     type=\"number\"\n//                                     style={{ width: '100%' }}\n//                                     value={input.price}\n//                                     readOnly\n//                                 />\n//                             </div>\n//                             <div style={{ flex: '1', marginRight: '10px' }}>\n//                                 <label>Quantité</label>\n//                                 <input\n//                                     type=\"number\"\n//                                     style={{ width: '100%' }}\n//                                     value={input.quantité}\n//                                     onChange={(e) => handleQuantityChange(e, index)}\n//                                 />\n//                             </div>\n//                             <div style={{ display: 'flex', alignItems: 'center' }}>\n//                                 <div style={{ flex: '1' }}>\n//                                     <label>Remise</label>\n//                                     <input\n//                                         type=\"number\"\n//                                         style={{ width: '100%' }}\n//                                         value={input.remise}\n//                                         onChange={(e) => handleRemiseChange(e, index)}\n//                                         onKeyDown={handleKeyPress} // Call handleKeyPress on key press\n//                                         ref={remiseInputRef} // Set the ref for Remise input field\n//                                     />\n//                                 </div>\n//                                 <div style={{ marginLeft: '10px' }}>\n//                                     <button type=\"button\" onClick={handleAddInput}>+</button>\n//                                 </div>\n//                             </div>\n//                         </div>\n//                     ))}\n//                 </div>\n//             </div>\n//             <div>\n//                 <div>\n//                     <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\n//                         <button\n//                             style={{ width: '200px', marginBottom: '10px' }}\n//                             type=\"button\"\n//                             onClick={handleAddInput}\n//                         >\n//                             Ajouter\n//                         </button>\n//                         <button\n//                             style={{ width: '200px', marginBottom: '10px' }}\n//                             type=\"submit\"\n//                             onClick={handleSubmit}\n//                         >\n//                             Enregistrer\n//                         </button><br />\n//                         <button\n//                             style={{ width: '200px', marginBottom: '10px' }}\n//                             type=\"button\"\n//                         >\n//                             Supprimer\n//                         </button>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//         <div style={{ marginBottom: '20px' }}>\n//             <label>Total</label>\n//             <input\n//                 type=\"text\" \n//                 style={{ width: '100%' }}\n//                 value={calculateTotal()}\n//                 readOnly\n//             />\n//         </div>\n//     </div>\n// );\n// }\n\n// export default CreateFactureVente;\nfunction CreateFactureVente({\n  selectedFacture\n}) {\n  _s();\n  const [clName, setClName] = useState('');\n  const [client_id, setClientCode] = useState('');\n  const [date, setDate] = useState('');\n  const [DT, setDT] = useState('1.000');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0,\n    remise: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const remiseInputRef = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:7777/article').then(res => {\n      setReferences(res.data.map(article => article.ref));\n    }).catch(err => console.log('Error fetching articles:', err));\n  }, []);\n  useEffect(() => {\n    if (selectedFacture) {\n      console.log('Selected Facture in CreateFactureVente:', selectedFacture); // Debug log\n      setClName(selectedFacture.clName || '');\n      setClientCode(selectedFacture.client_id || '');\n      setDate(selectedFacture.date || '');\n      setDT(selectedFacture.DT || '1.000');\n      setInputs(selectedFacture.inputs || [{\n        refAr: '',\n        quantité: '',\n        price: 0,\n        remise: 0\n      }]);\n    }\n  }, [selectedFacture]);\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/factureVente/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log('Error fetching price:', err));\n  };\n  const handleReferenceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n    fetchPriceByReference(value, index);\n  };\n  const handleRemiseChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].remise = value;\n    setInputs(newInputs);\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].quantité = value;\n    axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`).then(res => {\n      const availableQuantity = res.data.quantity;\n      const remainingQuantity = availableQuantity - parseInt(value);\n      if (remainingQuantity < 0) {\n        alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n        newInputs[index].quantité = availableQuantity;\n      }\n      const remisePrice = newInputs[index].price * (1 - newInputs[index].remise / 100);\n      newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n      setInputs(newInputs);\n    }).catch(err => console.error('Error fetching quantity:', err));\n    const newTotal = newInputs.reduce((acc, curr) => acc + curr.price * curr.quantité, 0) + parseFloat(DT);\n    console.log(\"New Total:\", newTotal);\n  };\n  const handleAddInput = () => {\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n    if (isEmpty) {\n      alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n      return;\n    }\n    setInputs([...inputs, {\n      refAr: '',\n      price: 0,\n      quantité: '',\n      remise: 0\n    }]);\n  };\n  const calculateTotal = () => {\n    if (!inputs) return 0;\n    const total = inputs.reduce((acc, curr) => acc + curr.price * curr.quantité / 100 * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\n    return total.toFixed(3); // Round to three decimal places\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n    if (invalidReference) {\n      alert(\"Sélectionner une référence valide\");\n      return;\n    }\n    const totalPrice = calculateTotal();\n    axios.post('http://localhost:7777/factureVente/createFac/', {\n      clName,\n      client_id,\n      date,\n      DT,\n      refAr: nonEmptyInputs.map(input => input.refAr),\n      quantité: nonEmptyInputs.map(input => input.quantité),\n      remise: nonEmptyInputs.map(input => input.remise),\n      totalPrice\n    }).then(res => {\n      console.log(res);\n      window.location.reload();\n    }).catch(err => console.log('Error creating facture:', err));\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleAddInput();\n    }\n  };\n  const handleClientSelect = (name, code) => {\n    setClName(name);\n    setClientCode(code);\n    setFilteredClients([]);\n  };\n  const handleClientChange = e => {\n    const {\n      value\n    } = e.target;\n    setClName(value);\n    axios.get(`http://localhost:7777/clients/search?name=${value}`).then(res => {\n      setFilteredClients(res.data);\n    }).catch(err => console.log('Error fetching clients:', err));\n    axios.get(`http://localhost:7777/clients/search?name=${value}`).then(res => {\n      if (res.data.length > 0) {\n        setClientCode(res.data[0].clID);\n      } else {\n        setClientCode('');\n      }\n    }).catch(err => console.log('Error fetching client code:', err));\n  };\n  const handleClientBlur = () => {\n    setFilteredClients([]);\n  };\n  const handleClientCodeChange = e => {\n    const {\n      value\n    } = e.target;\n    setClientCode(value);\n    axios.get(`http://localhost:7777/clients/search?id=${value}`).then(res => {\n      if (res.data.length > 0) {\n        setClName(res.data[0].clName);\n      } else {\n        setClName('');\n      }\n    }).catch(err => console.log('Error fetching client name:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cr\\xE9er une Facture de Vente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"clName\",\n          children: \"Nom du client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"clName\",\n          value: clName,\n          onChange: handleClientChange,\n          onBlur: handleClientBlur,\n          className: \"form-control\",\n          list: \"clientList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"clientList\",\n          children: filteredClients.map(client => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: client.clName\n          }, client.clID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"clientCode\",\n          children: \"Code Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"clientCode\",\n          value: client_id,\n          onChange: handleClientCodeChange,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"DT\",\n          children: \"DT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"DT\",\n          value: DT,\n          onChange: e => setDT(e.target.value),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 17\n      }, this), inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `refAr-${index}`,\n            children: \"R\\xE9f\\xE9rence Article\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: `refAr-${index}`,\n            value: input.refAr,\n            onChange: event => handleReferenceChange(event, index),\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `quantité-${index}`,\n            children: \"Quantit\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: `quantité-${index}`,\n            value: input.quantité,\n            onChange: event => handleQuantityChange(event, index),\n            className: \"form-control\",\n            min: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-md-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `remise-${index}`,\n            children: \"Remise (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: `remise-${index}`,\n            value: input.remise,\n            onChange: event => handleRemiseChange(event, index),\n            className: \"form-control\",\n            min: \"0\",\n            ref: remiseInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-md-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `price-${index}`,\n            children: \"Prix\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: `price-${index}`,\n            value: input.price,\n            className: \"form-control\",\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleAddInput,\n          className: \"btn btn-secondary\",\n          children: \"Ajouter une ligne\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"totalPrice\",\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"totalPrice\",\n          value: calculateTotal(),\n          readOnly: true,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Soumettre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 525,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateFactureVente, \"NerleMNO+MryuD1pDId+sWbE0Rc=\");\n_c = CreateFactureVente;\nexport default CreateFactureVente;\nvar _c;\n$RefreshReg$(_c, \"CreateFactureVente\");","map":{"version":3,"names":["CreateFactureVente","selectedFacture","_s","clName","setClName","useState","client_id","setClientCode","date","setDate","DT","setDT","inputs","setInputs","refAr","quantité","price","remise","references","setReferences","filteredClients","setFilteredClients","modalIsOpen","setModalIsOpen","remiseInputRef","useRef","useEffect","axios","get","then","res","data","map","article","ref","catch","err","console","log","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","event","value","target","handleRemiseChange","handleQuantityChange","availableQuantity","quantity","remainingQuantity","parseInt","alert","remisePrice","parseFloat","toFixed","error","newTotal","reduce","acc","curr","handleAddInput","isEmpty","some","input","calculateTotal","total","handleSubmit","preventDefault","nonEmptyInputs","filter","invalidReference","includes","totalPrice","post","window","location","reload","handleKeyPress","key","handleClientSelect","name","code","handleClientChange","e","length","clID","handleClientBlur","handleClientCodeChange","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","onBlur","list","client","min","readOnly","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureVente.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function CreateFactureVente({ selectedFacture }) {\r\n//     const [clName, setClName] = useState('');\r\n//     const [client_id, setClientCode] = useState('');\r\n//     const [date, setDate] = useState('');\r\n//     const [DT, setDT] = useState('1.000');\r\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//     const [references, setReferences] = useState([]);\r\n//     const [filteredClients, setFilteredClients] = useState([]);\r\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n//     const remiseInputRef = useRef(null); \r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/article')\r\n//             .then(res => {\r\n//                 setReferences(res.data.map(article => article.ref));\r\n//             })\r\n//             .catch(err => console.log('Error fetching articles:', err));\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         if (selectedFacture) {\r\n//             console.log('Selected Facture in CreateFactureVente:', selectedFacture); // Debug log\r\n//             setClName(selectedFacture.clName || '');\r\n//             setClientCode(selectedFacture.client_id || '');\r\n//             setDate(selectedFacture.date || '');\r\n//             setDT(selectedFacture.DT || '1.000');\r\n//             setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//         }\r\n//     }, [selectedFacture]);\r\n    \r\n\r\n//     const fetchPriceByReference = (reference, index) => {\r\n//         axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n//             .then(res => {\r\n//                 const price = res.data.price;\r\n//                 const newInputs = [...inputs];\r\n//                 newInputs[index].price = price;\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.log('Error fetching price:', err));\r\n//     };\r\n\r\n//     const handleReferenceChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].refAr = value;\r\n//         setInputs(newInputs);\r\n//         fetchPriceByReference(value, index);\r\n//     };\r\n\r\n//     const handleRemiseChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].remise = value;\r\n//         setInputs(newInputs);\r\n//     };\r\n\r\n//     const handleQuantityChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].quantité = value;\r\n\r\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//             .then(res => {\r\n//                 const availableQuantity = res.data.quantity;\r\n//                 const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n//                 if (remainingQuantity < 0) {\r\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//                     newInputs[index].quantité = availableQuantity;\r\n//                 }\r\n\r\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.error('Error fetching quantity:', err));\r\n            \r\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\r\n//         console.log(\"New Total:\", newTotal);\r\n//     };\r\n\r\n//     const handleAddInput = () => {\r\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n//         if (isEmpty) {\r\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n//             return;\r\n//         }\r\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n//     };\r\n\r\n//     const calculateTotal = () => {\r\n//         if (!inputs) return 0; \r\n//         const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\r\n//         return total.toFixed(3); // Round to three decimal places\r\n//     };\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n    \r\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n    \r\n//         if (invalidReference) {\r\n//             alert(\"Sélectionner une référence valide\");\r\n//             return;\r\n//         }\r\n    \r\n//         const totalPrice = calculateTotal();\r\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//             clName,\r\n//             client_id,\r\n//             date,\r\n//             DT,\r\n//             refAr: nonEmptyInputs.map(input => input.refAr),\r\n//             quantité: nonEmptyInputs.map(input => input.quantité),\r\n//             remise: nonEmptyInputs.map(input => input.remise),\r\n//             totalPrice\r\n//         })\r\n//         .then(res => {\r\n//             console.log(res);\r\n//             window.location.reload();\r\n//         })\r\n//         .catch(err => console.log('Error creating facture:', err));\r\n//     };\r\n    \r\n    \r\n\r\n//     const handleKeyPress = (event) => {\r\n//         if (event.key === 'Enter') {\r\n//             handleAddInput();\r\n//         }\r\n//     };\r\n\r\n//     const handleClientSelect = (name, code) => {\r\n//         setClName(name);\r\n//         setClientCode(code);\r\n//         setFilteredClients([]);\r\n//     };\r\n\r\n//     const handleClientChange = (e) => {\r\n//         const { value } = e.target;\r\n//         setClName(value);\r\n\r\n//         // Fetch filtered clients from the server\r\n//         axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//             .then(res => {\r\n//                 setFilteredClients(res.data);\r\n//             })\r\n//             .catch(err => console.log('Error fetching clients:', err));\r\n\r\n//         // Retrieve the client code based on the entered client name\r\n//         axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//             .then(res => {\r\n//                 if (res.data.length > 0) {\r\n//                     // Assuming the client code is stored in res.data[0].clID\r\n//                     setClientCode(res.data[0].clID);\r\n//                 } else {\r\n//                     // Clear the client code if no matching client is found\r\n//                     setClientCode('');\r\n//                 }\r\n//             })\r\n//             .catch(err => console.log('Error fetching client code:', err));\r\n//     };\r\n// const handleClientBlur = () => {\r\n//     // Clear the filtered clients list when the input field loses focus\r\n//     setFilteredClients([]);\r\n// };\r\n// const handleClientCodeChange = (e) => {\r\n//     const { value } = e.target;\r\n//     setClientCode(value);\r\n\r\n//     // Fetch client name based on the entered code\r\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\r\n//         .then(res => {\r\n//             if (res.data.length > 0) {\r\n//                 // Assuming the client name is stored in res.data[0].clName\r\n//                 setClName(res.data[0].clName);\r\n//             } else {\r\n//                 // Clear the client name if no matching client is found\r\n//                 setClName('');\r\n//             }\r\n//         })\r\n//         .catch(err => console.log('Error fetching client name:', err));\r\n// };\r\n\r\n// return (\r\n//     <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n//         <div style={{ display: 'flex', flex: '1' }}>\r\n//             <div>\r\n//                 <div style={{ marginBottom: '20px' }}>\r\n//                     <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\r\n//                     <input\r\n// style={{ width: '200px' }}\r\n// type=\"text\"\r\n// id=\"code-client\"\r\n// name=\"code-client\"\r\n// value={client_id} // Display the client code\r\n// onChange={handleClientCodeChange} // Fetch and display client name based on code\r\n// />\r\n\r\n//                 </div>\r\n//                 <div style={{ marginBottom: '20px', position: 'relative' }}>\r\n//                     <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n//                     <input\r\n//                         style={{ width: '200px' }}\r\n//                         type=\"text\"\r\n//                         id=\"client\"\r\n//                         value={clName}\r\n//                         onChange={handleClientChange}\r\n//                         onBlur={handleClientBlur} // Add onBlur event to clear filtered clients list\r\n//                     />\r\n//                     {filteredClients.length > 0 && (\r\n//                         <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\r\n//                             {filteredClients.map((client, index) => (\r\n//                                 <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\r\n//                                     {client.clName}\r\n//                                 </div>\r\n//                             ))}\r\n//                         </div>\r\n//                     )}\r\n//                 </div>\r\n//                 <div style={{ marginBottom: '20px' }}>\r\n//                     <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n//                     <input\r\n//                         style={{ width: '200px' }}\r\n//                         type=\"date\"\r\n//                         id=\"date\"\r\n//                         value={date}\r\n//                         onChange={(e) => setDate(e.target.value)}\r\n//                     />\r\n//                 </div>\r\n//                 <div style={{ marginBottom: '20px' }}>\r\n//                     <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\r\n//                     <input\r\n//                         style={{ width: '200px' }}\r\n//                         type=\"text\"\r\n//                         id=\"code\"\r\n//                         value={DT}\r\n//                         onChange={(e) => setDT(e.target.value)}\r\n//                         onBlur={handleQuantityChange} // Add onBlur event to trigger recalculation when \"Droit de timbre\" value changes\r\n//                     />\r\n//                 </div>\r\n//             </div>\r\n//             <div>\r\n//                 <div>\r\n//                     {inputs.map((input, index) => (\r\n//                         <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//                             <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                                 <label>Référence d'article</label>\r\n//                                 <input\r\n//                                     list=\"references\"\r\n//                                     style={{ width: '100%' }}\r\n//                                     value={input.refAr}\r\n//                                     onChange={(e) => handleReferenceChange(e, index)}\r\n//                                 />\r\n//                                 <datalist id=\"references\">\r\n//                                     {references.map((reference, idx) => (\r\n//                                         <option key={idx} value={reference} />\r\n//                                     ))}\r\n//                                 </datalist>\r\n//                             </div>\r\n//                             <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                                 <label>Prix vente TTC</label>\r\n//                                 <input\r\n//                                     type=\"number\"\r\n//                                     style={{ width: '100%' }}\r\n//                                     value={input.price}\r\n//                                     readOnly\r\n//                                 />\r\n//                             </div>\r\n//                             <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                                 <label>Quantité</label>\r\n//                                 <input\r\n//                                     type=\"number\"\r\n//                                     style={{ width: '100%' }}\r\n//                                     value={input.quantité}\r\n//                                     onChange={(e) => handleQuantityChange(e, index)}\r\n//                                 />\r\n//                             </div>\r\n//                             <div style={{ display: 'flex', alignItems: 'center' }}>\r\n//                                 <div style={{ flex: '1' }}>\r\n//                                     <label>Remise</label>\r\n//                                     <input\r\n//                                         type=\"number\"\r\n//                                         style={{ width: '100%' }}\r\n//                                         value={input.remise}\r\n//                                         onChange={(e) => handleRemiseChange(e, index)}\r\n//                                         onKeyDown={handleKeyPress} // Call handleKeyPress on key press\r\n//                                         ref={remiseInputRef} // Set the ref for Remise input field\r\n//                                     />\r\n//                                 </div>\r\n//                                 <div style={{ marginLeft: '10px' }}>\r\n//                                     <button type=\"button\" onClick={handleAddInput}>+</button>\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             </div>\r\n//             <div>\r\n//                 <div>\r\n//                     <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\r\n//                         <button\r\n//                             style={{ width: '200px', marginBottom: '10px' }}\r\n//                             type=\"button\"\r\n//                             onClick={handleAddInput}\r\n//                         >\r\n//                             Ajouter\r\n//                         </button>\r\n//                         <button\r\n//                             style={{ width: '200px', marginBottom: '10px' }}\r\n//                             type=\"submit\"\r\n//                             onClick={handleSubmit}\r\n//                         >\r\n//                             Enregistrer\r\n//                         </button><br />\r\n//                         <button\r\n//                             style={{ width: '200px', marginBottom: '10px' }}\r\n//                             type=\"button\"\r\n//                         >\r\n//                             Supprimer\r\n//                         </button>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//         <div style={{ marginBottom: '20px' }}>\r\n//             <label>Total</label>\r\n//             <input\r\n//                 type=\"text\" \r\n//                 style={{ width: '100%' }}\r\n//                 value={calculateTotal()}\r\n//                 readOnly\r\n//             />\r\n//         </div>\r\n//     </div>\r\n// );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\nfunction CreateFactureVente({ selectedFacture }) {\r\n    const [clName, setClName] = useState('');\r\n    const [client_id, setClientCode] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [DT, setDT] = useState('1.000');\r\n    const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n    const [references, setReferences] = useState([]);\r\n    const [filteredClients, setFilteredClients] = useState([]);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n    const remiseInputRef = useRef(null); \r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7777/article')\r\n            .then(res => {\r\n                setReferences(res.data.map(article => article.ref));\r\n            })\r\n            .catch(err => console.log('Error fetching articles:', err));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedFacture) {\r\n            console.log('Selected Facture in CreateFactureVente:', selectedFacture); // Debug log\r\n            setClName(selectedFacture.clName || '');\r\n            setClientCode(selectedFacture.client_id || '');\r\n            setDate(selectedFacture.date || '');\r\n            setDT(selectedFacture.DT || '1.000');\r\n            setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n        }\r\n    }, [selectedFacture]);\r\n\r\n    const fetchPriceByReference = (reference, index) => {\r\n        axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n            .then(res => {\r\n                const price = res.data.price;\r\n                const newInputs = [...inputs];\r\n                newInputs[index].price = price;\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.log('Error fetching price:', err));\r\n    };\r\n\r\n    const handleReferenceChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].refAr = value;\r\n        setInputs(newInputs);\r\n        fetchPriceByReference(value, index);\r\n    };\r\n\r\n    const handleRemiseChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].remise = value;\r\n        setInputs(newInputs);\r\n    };\r\n\r\n    const handleQuantityChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].quantité = value;\r\n\r\n        axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n            .then(res => {\r\n                const availableQuantity = res.data.quantity;\r\n                const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n                if (remainingQuantity < 0) {\r\n                    alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n                    newInputs[index].quantité = availableQuantity;\r\n                }\r\n\r\n                const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n                newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.error('Error fetching quantity:', err));\r\n            \r\n        const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\r\n        console.log(\"New Total:\", newTotal);\r\n    };\r\n\r\n    const handleAddInput = () => {\r\n        const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n        if (isEmpty) {\r\n            alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n            return;\r\n        }\r\n        setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n    };\r\n\r\n    const calculateTotal = () => {\r\n        if (!inputs) return 0; \r\n        const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\r\n        return total.toFixed(3); // Round to three decimal places\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n    \r\n        const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n        const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n    \r\n        if (invalidReference) {\r\n            alert(\"Sélectionner une référence valide\");\r\n            return;\r\n        }\r\n    \r\n        const totalPrice = calculateTotal();\r\n        axios.post('http://localhost:7777/factureVente/createFac/', {\r\n            clName,\r\n            client_id,\r\n            date,\r\n            DT,\r\n            refAr: nonEmptyInputs.map(input => input.refAr),\r\n            quantité: nonEmptyInputs.map(input => input.quantité),\r\n            remise: nonEmptyInputs.map(input => input.remise),\r\n            totalPrice\r\n        })\r\n        .then(res => {\r\n            console.log(res);\r\n            window.location.reload();\r\n        })\r\n        .catch(err => console.log('Error creating facture:', err));\r\n    };\r\n\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === 'Enter') {\r\n            handleAddInput();\r\n        }\r\n    };\r\n\r\n    const handleClientSelect = (name, code) => {\r\n        setClName(name);\r\n        setClientCode(code);\r\n        setFilteredClients([]);\r\n    };\r\n\r\n    const handleClientChange = (e) => {\r\n        const { value } = e.target;\r\n        setClName(value);\r\n\r\n        axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n            .then(res => {\r\n                setFilteredClients(res.data);\r\n            })\r\n            .catch(err => console.log('Error fetching clients:', err));\r\n\r\n        axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n            .then(res => {\r\n                if (res.data.length > 0) {\r\n                    setClientCode(res.data[0].clID);\r\n                } else {\r\n                    setClientCode('');\r\n                }\r\n            })\r\n            .catch(err => console.log('Error fetching client code:', err));\r\n    };\r\n\r\n    const handleClientBlur = () => {\r\n        setFilteredClients([]);\r\n    };\r\n\r\n    const handleClientCodeChange = (e) => {\r\n        const { value } = e.target;\r\n        setClientCode(value);\r\n\r\n        axios.get(`http://localhost:7777/clients/search?id=${value}`)\r\n            .then(res => {\r\n                if (res.data.length > 0) {\r\n                    setClName(res.data[0].clName);\r\n                } else {\r\n                    setClName('');\r\n                }\r\n            })\r\n            .catch(err => console.log('Error fetching client name:', err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container my-4\">\r\n            <h2>Créer une Facture de Vente</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"clName\">Nom du client</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"clName\"\r\n                        value={clName}\r\n                        onChange={handleClientChange}\r\n                        onBlur={handleClientBlur}\r\n                        className=\"form-control\"\r\n                        list=\"clientList\"\r\n                    />\r\n                    <datalist id=\"clientList\">\r\n                        {filteredClients.map((client) => (\r\n                            <option key={client.clID} value={client.clName} />\r\n                        ))}\r\n                    </datalist>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"clientCode\">Code Client</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"clientCode\"\r\n                        value={client_id}\r\n                        onChange={handleClientCodeChange}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"date\">Date</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"date\"\r\n                        value={date}\r\n                        onChange={(e) => setDate(e.target.value)}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"DT\">DT</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"DT\"\r\n                        value={DT}\r\n                        onChange={(e) => setDT(e.target.value)}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n                {inputs.map((input, index) => (\r\n                    <div key={index} className=\"form-row align-items-center\">\r\n                        <div className=\"form-group col-md-3\">\r\n                            <label htmlFor={`refAr-${index}`}>Référence Article</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id={`refAr-${index}`}\r\n                                value={input.refAr}\r\n                                onChange={(event) => handleReferenceChange(event, index)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-md-3\">\r\n                            <label htmlFor={`quantité-${index}`}>Quantité</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id={`quantité-${index}`}\r\n                                value={input.quantité}\r\n                                onChange={(event) => handleQuantityChange(event, index)}\r\n                                className=\"form-control\"\r\n                                min=\"1\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-md-2\">\r\n                            <label htmlFor={`remise-${index}`}>Remise (%)</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id={`remise-${index}`}\r\n                                value={input.remise}\r\n                                onChange={(event) => handleRemiseChange(event, index)}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                ref={remiseInputRef}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-md-2\">\r\n                            <label htmlFor={`price-${index}`}>Prix</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id={`price-${index}`}\r\n                                value={input.price}\r\n                                className=\"form-control\"\r\n                                readOnly\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                <div className=\"form-group\">\r\n                    <button type=\"button\" onClick={handleAddInput} className=\"btn btn-secondary\">\r\n                        Ajouter une ligne\r\n                    </button>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"totalPrice\">Total</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"totalPrice\"\r\n                        value={calculateTotal()}\r\n                        readOnly\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Soumettre</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateFactureVente;\r\n"],"mappings":";;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,kBAAkBA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACC,SAAS,EAAEC,aAAa,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACK,EAAE,EAAEC,KAAK,CAAC,GAAGN,QAAQ,CAAC,OAAO,CAAC;EACrC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC;IAAES,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,CAAC,CAAC;EACxF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMmB,cAAc,GAAGC,MAAM,CAAC,IAAI,CAAC;EAEnCC,SAAS,CAAC,MAAM;IACZC,KAAK,CAACC,GAAG,CAAC,+BAA+B,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAI;MACTX,aAAa,CAACW,GAAG,CAACC,IAAI,CAACC,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,GAAG,CAAC,CAAC;IACvD,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,GAAG,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACZ,IAAIzB,eAAe,EAAE;MACjBoC,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAErC,eAAe,CAAC,CAAC,CAAC;MACzEG,SAAS,CAACH,eAAe,CAACE,MAAM,IAAI,EAAE,CAAC;MACvCI,aAAa,CAACN,eAAe,CAACK,SAAS,IAAI,EAAE,CAAC;MAC9CG,OAAO,CAACR,eAAe,CAACO,IAAI,IAAI,EAAE,CAAC;MACnCG,KAAK,CAACV,eAAe,CAACS,EAAE,IAAI,OAAO,CAAC;MACpCG,SAAS,CAACZ,eAAe,CAACW,MAAM,IAAI,CAAC;QAAEE,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC,CAAC,CAAC;IAC3F;EACJ,CAAC,EAAE,CAAChB,eAAe,CAAC,CAAC;EAErB,MAAMsC,qBAAqB,GAAGA,CAACC,SAAS,EAAEC,KAAK,KAAK;IAChDd,KAAK,CAACC,GAAG,CAAE,sCAAqCY,SAAU,EAAC,CAAC,CACvDX,IAAI,CAACC,GAAG,IAAI;MACT,MAAMd,KAAK,GAAGc,GAAG,CAACC,IAAI,CAACf,KAAK;MAC5B,MAAM0B,SAAS,GAAG,CAAC,GAAG9B,MAAM,CAAC;MAC7B8B,SAAS,CAACD,KAAK,CAAC,CAACzB,KAAK,GAAGA,KAAK;MAC9BH,SAAS,CAAC6B,SAAS,CAAC;IACxB,CAAC,CAAC,CACDP,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,GAAG,CAAC,CAAC;EAChE,CAAC;EAED,MAAMO,qBAAqB,GAAGA,CAACC,KAAK,EAAEH,KAAK,KAAK;IAC5C,MAAM;MAAEI;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9B,MAAMJ,SAAS,GAAG,CAAC,GAAG9B,MAAM,CAAC;IAC7B8B,SAAS,CAACD,KAAK,CAAC,CAAC3B,KAAK,GAAG+B,KAAK;IAC9BhC,SAAS,CAAC6B,SAAS,CAAC;IACpBH,qBAAqB,CAACM,KAAK,EAAEJ,KAAK,CAAC;EACvC,CAAC;EAED,MAAMM,kBAAkB,GAAGA,CAACH,KAAK,EAAEH,KAAK,KAAK;IACzC,MAAM;MAAEI;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9B,MAAMJ,SAAS,GAAG,CAAC,GAAG9B,MAAM,CAAC;IAC7B8B,SAAS,CAACD,KAAK,CAAC,CAACxB,MAAM,GAAG4B,KAAK;IAC/BhC,SAAS,CAAC6B,SAAS,CAAC;EACxB,CAAC;EAED,MAAMM,oBAAoB,GAAGA,CAACJ,KAAK,EAAEH,KAAK,KAAK;IAC3C,MAAM;MAAEI;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9B,MAAMJ,SAAS,GAAG,CAAC,GAAG9B,MAAM,CAAC;IAC7B8B,SAAS,CAACD,KAAK,CAAC,CAAC1B,QAAQ,GAAG8B,KAAK;IAEjClB,KAAK,CAACC,GAAG,CAAE,iCAAgCc,SAAS,CAACD,KAAK,CAAC,CAAC3B,KAAM,WAAU,CAAC,CACxEe,IAAI,CAACC,GAAG,IAAI;MACT,MAAMmB,iBAAiB,GAAGnB,GAAG,CAACC,IAAI,CAACmB,QAAQ;MAC3C,MAAMC,iBAAiB,GAAGF,iBAAiB,GAAGG,QAAQ,CAACP,KAAK,CAAC;MAE7D,IAAIM,iBAAiB,GAAG,CAAC,EAAE;QACvBE,KAAK,CAAE,+DAA8DJ,iBAAkB,wBAAuB,CAAC;QAC/GP,SAAS,CAACD,KAAK,CAAC,CAAC1B,QAAQ,GAAGkC,iBAAiB;MACjD;MAEA,MAAMK,WAAW,GAAGZ,SAAS,CAACD,KAAK,CAAC,CAACzB,KAAK,IAAI,CAAC,GAAI0B,SAAS,CAACD,KAAK,CAAC,CAACxB,MAAM,GAAG,GAAI,CAAC;MAClFyB,SAAS,CAACD,KAAK,CAAC,CAACzB,KAAK,GAAGuC,UAAU,CAACD,WAAW,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;MAC3D3C,SAAS,CAAC6B,SAAS,CAAC;IACxB,CAAC,CAAC,CACDP,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACoB,KAAK,CAAC,0BAA0B,EAAErB,GAAG,CAAC,CAAC;IAEjE,MAAMsB,QAAQ,GAAGhB,SAAS,CAACiB,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAIC,IAAI,CAAC7C,KAAK,GAAG6C,IAAI,CAAC9C,QAAS,EAAE,CAAC,CAAC,GAAGwC,UAAU,CAAC7C,EAAE,CAAC;IACxG2B,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEoB,QAAQ,CAAC;EACvC,CAAC;EAED,MAAMI,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,OAAO,GAAGnD,MAAM,CAACoD,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACnD,KAAK,KAAK,EAAE,IAAImD,KAAK,CAAClD,QAAQ,KAAK,EAAE,IAAIkD,KAAK,CAAChD,MAAM,KAAK,EAAE,CAAC;IACxG,IAAI8C,OAAO,EAAE;MACTV,KAAK,CAAC,6FAA6F,CAAC;MACpG;IACJ;IACAxC,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE;MAAEE,KAAK,EAAE,EAAE;MAAEE,KAAK,EAAE,CAAC;MAAED,QAAQ,EAAE,EAAE;MAAEE,MAAM,EAAE;IAAE,CAAC,CAAC,CAAC;EAC5E,CAAC;EAED,MAAMiD,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACtD,MAAM,EAAE,OAAO,CAAC;IACrB,MAAMuD,KAAK,GAAGvD,MAAM,CAAC+C,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAKC,IAAI,CAAC7C,KAAK,GAAG6C,IAAI,CAAC9C,QAAQ,GAAI,GAAG,IAAK,GAAG,GAAG8C,IAAI,CAAC5C,MAAM,CAAC,EAAE,CAAC,CAAC,GAAGsC,UAAU,CAAC7C,EAAE,CAAC,CAAC,CAAC;IAClI,OAAOyD,KAAK,CAACX,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMY,YAAY,GAAIxB,KAAK,IAAK;IAC5BA,KAAK,CAACyB,cAAc,CAAC,CAAC;IAEtB,MAAMC,cAAc,GAAG1D,MAAM,CAAC2D,MAAM,CAACN,KAAK,IAAIA,KAAK,CAACnD,KAAK,KAAK,EAAE,IAAImD,KAAK,CAAClD,QAAQ,KAAK,EAAE,IAAIkD,KAAK,CAAChD,MAAM,KAAK,EAAE,CAAC;IACjH,MAAMuD,gBAAgB,GAAGF,cAAc,CAACN,IAAI,CAACC,KAAK,IAAI,CAAC/C,UAAU,CAACuD,QAAQ,CAACR,KAAK,CAACnD,KAAK,CAAC,CAAC;IAExF,IAAI0D,gBAAgB,EAAE;MAClBnB,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACJ;IAEA,MAAMqB,UAAU,GAAGR,cAAc,CAAC,CAAC;IACnCvC,KAAK,CAACgD,IAAI,CAAC,+CAA+C,EAAE;MACxDxE,MAAM;MACNG,SAAS;MACTE,IAAI;MACJE,EAAE;MACFI,KAAK,EAAEwD,cAAc,CAACtC,GAAG,CAACiC,KAAK,IAAIA,KAAK,CAACnD,KAAK,CAAC;MAC/CC,QAAQ,EAAEuD,cAAc,CAACtC,GAAG,CAACiC,KAAK,IAAIA,KAAK,CAAClD,QAAQ,CAAC;MACrDE,MAAM,EAAEqD,cAAc,CAACtC,GAAG,CAACiC,KAAK,IAAIA,KAAK,CAAChD,MAAM,CAAC;MACjDyD;IACJ,CAAC,CAAC,CACD7C,IAAI,CAACC,GAAG,IAAI;MACTO,OAAO,CAACC,GAAG,CAACR,GAAG,CAAC;MAChB8C,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC5B,CAAC,CAAC,CACD3C,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,GAAG,CAAC,CAAC;EAC9D,CAAC;EAED,MAAM2C,cAAc,GAAInC,KAAK,IAAK;IAC9B,IAAIA,KAAK,CAACoC,GAAG,KAAK,OAAO,EAAE;MACvBlB,cAAc,CAAC,CAAC;IACpB;EACJ,CAAC;EAED,MAAMmB,kBAAkB,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;IACvC/E,SAAS,CAAC8E,IAAI,CAAC;IACf3E,aAAa,CAAC4E,IAAI,CAAC;IACnB9D,kBAAkB,CAAC,EAAE,CAAC;EAC1B,CAAC;EAED,MAAM+D,kBAAkB,GAAIC,CAAC,IAAK;IAC9B,MAAM;MAAExC;IAAM,CAAC,GAAGwC,CAAC,CAACvC,MAAM;IAC1B1C,SAAS,CAACyC,KAAK,CAAC;IAEhBlB,KAAK,CAACC,GAAG,CAAE,6CAA4CiB,KAAM,EAAC,CAAC,CAC1DhB,IAAI,CAACC,GAAG,IAAI;MACTT,kBAAkB,CAACS,GAAG,CAACC,IAAI,CAAC;IAChC,CAAC,CAAC,CACDI,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,GAAG,CAAC,CAAC;IAE9DT,KAAK,CAACC,GAAG,CAAE,6CAA4CiB,KAAM,EAAC,CAAC,CAC1DhB,IAAI,CAACC,GAAG,IAAI;MACT,IAAIA,GAAG,CAACC,IAAI,CAACuD,MAAM,GAAG,CAAC,EAAE;QACrB/E,aAAa,CAACuB,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACwD,IAAI,CAAC;MACnC,CAAC,MAAM;QACHhF,aAAa,CAAC,EAAE,CAAC;MACrB;IACJ,CAAC,CAAC,CACD4B,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,GAAG,CAAC,CAAC;EACtE,CAAC;EAED,MAAMoD,gBAAgB,GAAGA,CAAA,KAAM;IAC3BnE,kBAAkB,CAAC,EAAE,CAAC;EAC1B,CAAC;EAED,MAAMoE,sBAAsB,GAAIJ,CAAC,IAAK;IAClC,MAAM;MAAExC;IAAM,CAAC,GAAGwC,CAAC,CAACvC,MAAM;IAC1BvC,aAAa,CAACsC,KAAK,CAAC;IAEpBlB,KAAK,CAACC,GAAG,CAAE,2CAA0CiB,KAAM,EAAC,CAAC,CACxDhB,IAAI,CAACC,GAAG,IAAI;MACT,IAAIA,GAAG,CAACC,IAAI,CAACuD,MAAM,GAAG,CAAC,EAAE;QACrBlF,SAAS,CAAC0B,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC5B,MAAM,CAAC;MACjC,CAAC,MAAM;QACHC,SAAS,CAAC,EAAE,CAAC;MACjB;IACJ,CAAC,CAAC,CACD+B,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,GAAG,CAAC,CAAC;EACtE,CAAC;EAED,oBACIsD,OAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BF,OAAA;MAAAE,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCN,OAAA;MAAMO,QAAQ,EAAE7B,YAAa;MAAAwB,QAAA,gBACzBF,OAAA;QAAKC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBF,OAAA;UAAOQ,OAAO,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7CN,OAAA;UACIS,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,QAAQ;UACXvD,KAAK,EAAE1C,MAAO;UACdkG,QAAQ,EAAEjB,kBAAmB;UAC7BkB,MAAM,EAAEd,gBAAiB;UACzBG,SAAS,EAAC,cAAc;UACxBY,IAAI,EAAC;QAAY;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eACFN,OAAA;UAAUU,EAAE,EAAC,YAAY;UAAAR,QAAA,EACpBxE,eAAe,CAACY,GAAG,CAAEwE,MAAM,iBACxBd,OAAA;YAA0B7C,KAAK,EAAE2D,MAAM,CAACrG;UAAO,GAAlCqG,MAAM,CAACjB,IAAI;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAyB,CACpD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACNN,OAAA;QAAKC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBF,OAAA;UAAOQ,OAAO,EAAC,YAAY;UAAAN,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/CN,OAAA;UACIS,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,YAAY;UACfvD,KAAK,EAAEvC,SAAU;UACjB+F,QAAQ,EAAEZ,sBAAuB;UACjCE,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNN,OAAA;QAAKC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBF,OAAA;UAAOQ,OAAO,EAAC,MAAM;UAAAN,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClCN,OAAA;UACIS,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,MAAM;UACTvD,KAAK,EAAErC,IAAK;UACZ6F,QAAQ,EAAGhB,CAAC,IAAK5E,OAAO,CAAC4E,CAAC,CAACvC,MAAM,CAACD,KAAK,CAAE;UACzC8C,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNN,OAAA;QAAKC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBF,OAAA;UAAOQ,OAAO,EAAC,IAAI;UAAAN,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9BN,OAAA;UACIS,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,IAAI;UACPvD,KAAK,EAAEnC,EAAG;UACV2F,QAAQ,EAAGhB,CAAC,IAAK1E,KAAK,CAAC0E,CAAC,CAACvC,MAAM,CAACD,KAAK,CAAE;UACvC8C,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,EACLpF,MAAM,CAACoB,GAAG,CAAC,CAACiC,KAAK,EAAExB,KAAK,kBACrBiD,OAAA;QAAiBC,SAAS,EAAC,6BAA6B;QAAAC,QAAA,gBACpDF,OAAA;UAAKC,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAChCF,OAAA;YAAOQ,OAAO,EAAG,SAAQzD,KAAM,EAAE;YAAAmD,QAAA,EAAC;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC3DN,OAAA;YACIS,IAAI,EAAC,MAAM;YACXC,EAAE,EAAG,SAAQ3D,KAAM,EAAE;YACrBI,KAAK,EAAEoB,KAAK,CAACnD,KAAM;YACnBuF,QAAQ,EAAGzD,KAAK,IAAKD,qBAAqB,CAACC,KAAK,EAAEH,KAAK,CAAE;YACzDkD,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNN,OAAA;UAAKC,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAChCF,OAAA;YAAOQ,OAAO,EAAG,YAAWzD,KAAM,EAAE;YAAAmD,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrDN,OAAA;YACIS,IAAI,EAAC,QAAQ;YACbC,EAAE,EAAG,YAAW3D,KAAM,EAAE;YACxBI,KAAK,EAAEoB,KAAK,CAAClD,QAAS;YACtBsF,QAAQ,EAAGzD,KAAK,IAAKI,oBAAoB,CAACJ,KAAK,EAAEH,KAAK,CAAE;YACxDkD,SAAS,EAAC,cAAc;YACxBc,GAAG,EAAC;UAAG;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNN,OAAA;UAAKC,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAChCF,OAAA;YAAOQ,OAAO,EAAG,UAASzD,KAAM,EAAE;YAAAmD,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrDN,OAAA;YACIS,IAAI,EAAC,QAAQ;YACbC,EAAE,EAAG,UAAS3D,KAAM,EAAE;YACtBI,KAAK,EAAEoB,KAAK,CAAChD,MAAO;YACpBoF,QAAQ,EAAGzD,KAAK,IAAKG,kBAAkB,CAACH,KAAK,EAAEH,KAAK,CAAE;YACtDkD,SAAS,EAAC,cAAc;YACxBc,GAAG,EAAC,GAAG;YACPvE,GAAG,EAAEV;UAAe;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNN,OAAA;UAAKC,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAChCF,OAAA;YAAOQ,OAAO,EAAG,SAAQzD,KAAM,EAAE;YAAAmD,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC9CN,OAAA;YACIS,IAAI,EAAC,QAAQ;YACbC,EAAE,EAAG,SAAQ3D,KAAM,EAAE;YACrBI,KAAK,EAAEoB,KAAK,CAACjD,KAAM;YACnB2E,SAAS,EAAC,cAAc;YACxBe,QAAQ;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA,GA3CAvD,KAAK;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA4CV,CACR,CAAC,eACFN,OAAA;QAAKC,SAAS,EAAC,YAAY;QAAAC,QAAA,eACvBF,OAAA;UAAQS,IAAI,EAAC,QAAQ;UAACQ,OAAO,EAAE7C,cAAe;UAAC6B,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAE7E;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACNN,OAAA;QAAKC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBF,OAAA;UAAOQ,OAAO,EAAC,YAAY;UAAAN,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzCN,OAAA;UACIS,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,YAAY;UACfvD,KAAK,EAAEqB,cAAc,CAAC,CAAE;UACxBwC,QAAQ;UACRf,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNN,OAAA;QAAQS,IAAI,EAAC,QAAQ;QAACR,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAAC9F,EAAA,CAvSQF,kBAAkB;AAAA4G,EAAA,GAAlB5G,kBAAkB;AAyS3B,eAAeA,kBAAkB;AAAC,IAAA4G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}