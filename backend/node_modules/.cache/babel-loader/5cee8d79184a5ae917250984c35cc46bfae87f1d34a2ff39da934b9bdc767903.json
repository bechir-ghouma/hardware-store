{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\Cfvbscfa.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import axios from 'axios';\n\n// function Cfvbscfa({ selectedFacture }) {\n//   const [clName, setClName] = useState('');\n//   const [client_id, setClientCode] = useState('');\n//   const [date, setDate] = useState('');\n//   const [DT, setDT] = useState('1.000');\n//   const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//   const [references, setReferences] = useState([]);\n//   const [filteredClients, setFilteredClients] = useState([]);\n\n//   const remiseInputRef = useRef(null);\n\n//   useEffect(() => {\n//     axios.get('http://localhost:7777/articlesbsvcf')\n//       .then(res => {\n//         console.log('Fetched Articles:', res.data);\n//         const parsedArticles = res.data;\n//         setReferences(parsedArticles.map(article => article.refAr));\n//         setInputs(parsedArticles);\n//       })\n//       .catch(err => console.log('Error fetching articles:', err));\n//   }, []);\n\n//   useEffect(() => {\n//     if (selectedFacture) {\n//       console.log('Selected Facture in CreateFactureVente:', selectedFacture);\n//       setClName(selectedFacture.clName || '');\n//       setClientCode(selectedFacture.client_id || '');\n//       setDate(selectedFacture.date || '');\n//       setDT(selectedFacture.DT || '1.000');\n//       setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//     }\n//   }, [selectedFacture]);\n\n//   const fetchPriceByReference = (reference, index) => {\n//     axios.get(`http://localhost:7777/cfvbscf/${reference}`)\n//       .then(res => {\n//         const price = res.data.price;\n//         const newInputs = [...inputs];\n//         newInputs[index].price = price;\n//         setInputs(newInputs);\n//       })\n//       .catch(err => console.log('Error fetching price:', err));\n//   };\n\n//   const handleReferenceChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].refAr = value;\n//     setInputs(newInputs);\n//     fetchPriceByReference(value, index);\n//   };\n\n//   const handleRemiseChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].remise = value;\n//     setInputs(newInputs);\n//   };\n\n//   const handleQuantityChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].quantité = value;\n\n//     if (!isNaN(value) && value !== '') {\n//       axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//         .then(res => {\n//           const availableQuantity = res.data.quantity;\n//           const remainingQuantity = availableQuantity - parseInt(value);\n\n//           if (remainingQuantity < 0) {\n//             alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//             newInputs[index].quantité = availableQuantity; \n//           }\n\n//           setInputs(newInputs);\n//         })\n//         .catch(err => console.error('Error fetching quantity:', err));\n//     } else {\n//       alert('Veuillez entrer une quantité valide.');\n//     }\n//   };\n\n//   const handleAddInput = () => {\n//     const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n//     if (isEmpty) {\n//       alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n//       return;\n//     }\n//     setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\n//   };\n\n//   const calculateTotal = () => {\n//     if (!inputs) return 0;\n//     const total = inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité) * (1 - (curr.remise / 100)), 0) + parseFloat(DT);\n//     return total.toFixed(3);\n//   };\n\n// const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//     if (invalidReference) {\n//       alert(\"Sélectionner une référence valide\");\n//       return;\n//     }\n\n//     const refArArray = nonEmptyInputs.map(input => ({\n//       refAr: input.refAr,\n//       price: input.price,\n//       quantité: input.quantité,\n//       remise: input.remise\n//     }));\n\n//     const totalPrice = calculateTotal();\n//     try {\n//       console.log('Submitting data:', {\n//         clName,\n//         client_id,\n//         date,\n//         DT,\n//         refAr: refArArray,\n//         totalPrice\n//       });\n\n//       const res = await axios.post('http://localhost:7777/cfvbscf/', {\n//         clName,\n//         client_id,\n//         date,\n//         DT,\n//         refAr: refArArray,\n//         totalPrice\n//       });\n\n//       console.log('Response:', res.data);\n//       handleClear(); \n//       window.location.reload();\n//     } catch (err) {\n//       console.error('Error creating facture:', err.response ? err.response.data : err);\n//     }\n//   };\n\n//   const handleKeyPress = (event) => {\n//     if (event.key === 'Enter') {\n//       handleAddInput();\n//     }\n//   };\n\n//   const handleClientSelect = (name, code) => {\n//     setClName(name);\n//     setClientCode(code);\n//     setFilteredClients([]);\n//   };\n\n//   const handleClientChange = (e) => {\n//     const { value } = e.target;\n//     setClName(value);\n\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//       .then(res => {\n//         setFilteredClients(res.data);\n//       })\n//       .catch(err => console.log('Error fetching clients:', err));\n\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//       .then(res => {\n//         if (res.data.length > 0) {\n//           setClientCode(res.data[0].clID);\n//         } else {\n//           setClientCode('');\n//         }\n//       })\n//       .catch(err => console.log('Error fetching client code:', err));\n//   };\n\n//   const handleClientBlur = () => {\n//     setFilteredClients([]);\n//   };\n\n//   const handleClientCodeChange = (e) => {\n//     const { value } = e.target;\n//     setClientCode(value);\n\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\n//       .then(res => {\n//         if (res.data.length > 0) {\n//           setClName(res.data[0].clName);\n//         } else {\n//           setClName('');\n//         }\n//       })\n//       .catch(err => console.log('Error fetching client name:', err));\n//   };\n\n//   const handleUpdate = async (event) => {\n//     event.preventDefault();\n\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//     if (invalidReference) {\n//       alert(\"Sélectionner une référence valide\");\n//       return;\n//     }\n\n//     const refArArray = nonEmptyInputs.map(input => ({\n//       refAr: input.refAr,\n//       price: input.price,\n//       quantité: input.quantité,\n//       remise: input.remise\n//     }));\n\n//     const totalPrice = calculateTotal();\n//     try {\n//       const res = await axios.put(`http://localhost:7777/cfvbscf/update/${selectedFacture.id}`, {\n//         clName,\n//         client_id,\n//         date,\n//         DT,\n//         articles: refArArray,\n//         totalPrice\n//       });\n//       console.log(res.data);\n//       window.location.reload();\n//     } catch (err) {\n//       console.log('Error updating facture:', err);\n//     }\n//   };\n\n//   const handleClear = () => {\n//     setClName('');\n//     setClientCode('');\n//     setDate('');\n//     setDT('1.000');\n//     setInputs([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//   };\n\n//   return (\n//     <div style={{ margin: '20px', display: 'flex', flexDirection: 'column', alignItems: 'center', fontFamily: 'Arial, sans-serif', backgroundColor: '#f9f9f9', padding: '20px', borderRadius: '8px', boxShadow: '0 2px 4px rgba(0,0,0,0.1)' }}>\n//       <h2 style={{ marginBottom: '20px' }}>{selectedFacture ? 'Modifier Facture Vente' : 'Créer Facture Vente'}</h2>\n//       <form onSubmit={selectedFacture ? handleUpdate : handleSubmit} style={{ width: '100%', maxWidth: '600px' }}>\n//         <div style={{ marginBottom: '15px' }}>\n//           <label style={{ display: 'block', marginBottom: '5px' }}>Nom du client:</label>\n//           <input\n//             type=\"text\"\n//             value={clName}\n//             onChange={handleClientChange}\n//             onBlur={handleClientBlur}\n//             style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd', marginBottom: '5px' }}\n//           />\n//           {filteredClients.length > 0 && (\n//             <ul style={{ listStyleType: 'none', padding: '0', margin: '0', border: '1px solid #ddd', borderRadius: '4px', maxHeight: '100px', overflowY: 'auto' }}>\n//               {filteredClients.map(client => (\n//                 <li key={client.clID} onClick={() => handleClientSelect(client.clName, client.clID)} style={{ padding: '8px', cursor: 'pointer', backgroundColor: '#fff', borderBottom: '1px solid #ddd' }}>\n//                   {client.clName}\n//                 </li>\n//               ))}\n//             </ul>\n//           )}\n//         </div>\n//         <div style={{ marginBottom: '15px' }}>\n//           <label style={{ display: 'block', marginBottom: '5px' }}>Code client:</label>\n//           <input\n//             type=\"text\"\n//             value={client_id}\n//             onChange={handleClientCodeChange}\n//             style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\n//           />\n//         </div>\n//         <div style={{ marginBottom: '15px' }}>\n//           <label style={{ display: 'block', marginBottom: '5px' }}>Date:</label>\n//           <input\n//             type=\"date\"\n//             value={date}\n//             onChange={e => setDate(e.target.value)}\n//             style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\n//           />\n//         </div>\n//         <div style={{ marginBottom: '15px' }}>\n//           <label style={{ display: 'block', marginBottom: '5px' }}>DT:</label>\n//           <input\n//             type=\"text\"\n//             value={DT}\n//             onChange={e => setDT(e.target.value)}\n//             style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\n//           />\n//         </div>\n//         <table style={{ width: '100%', borderCollapse: 'collapse', marginBottom: '15px' }}>\n//           <thead>\n//             <tr>\n//               <th style={{ padding: '8px', border: '1px solid #ddd', backgroundColor: '#f1f1f1' }}>Référence Article</th>\n//               <th style={{ padding: '8px', border: '1px solid #ddd', backgroundColor: '#f1f1f1' }}>Quantité</th>\n//               <th style={{ padding: '8px', border: '1px solid #ddd', backgroundColor: '#f1f1f1' }}>Prix</th>\n//               <th style={{ padding: '8px', border: '1px solid #ddd', backgroundColor: '#f1f1f1' }}>Remise</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {inputs.map((input, index) => (\n//               <tr key={index}>\n//                 <td style={{ padding: '8px', border: '1px solid #ddd' }}>\n//                   <input\n//                     type=\"text\"\n//                     value={input.refAr}\n//                     onChange={e => handleReferenceChange(e, index)}\n//                     style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\n//                   />\n//                 </td>\n//                 <td style={{ padding: '8px', border: '1px solid #ddd' }}>\n//                   <input\n//                     type=\"text\"\n//                     value={input.quantité}\n//                     onChange={e => handleQuantityChange(e, index)}\n//                     style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\n//                   />\n//                 </td>\n//                 <td style={{ padding: '8px', border: '1px solid #ddd' }}>\n//                   <input\n//                     type=\"text\"\n//                     value={input.price}\n//                     readOnly\n//                     style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd', backgroundColor: '#f9f9f9' }}\n//                   />\n//                 </td>\n//                 <td style={{ padding: '8px', border: '1px solid #ddd' }}>\n//                   <input\n//                     type=\"text\"\n//                     value={input.remise}\n//                     onChange={e => handleRemiseChange(e, index)}\n//                     ref={remiseInputRef}\n//                     onKeyPress={handleKeyPress}\n//                     style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\n//                   />\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//         <button type=\"button\" onClick={handleAddInput} style={{ padding: '10px 20px', borderRadius: '4px', border: 'none', backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', marginBottom: '15px' }}>\n//           Ajouter une ligne\n//         </button>\n//         <p style={{ fontSize: '16px', fontWeight: 'bold' }}>Total: {calculateTotal()} DT</p>\n//         <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n//           <button type=\"submit\" style={{ padding: '10px 20px', borderRadius: '4px', border: 'none', backgroundColor: '#28a745', color: '#fff', cursor: 'pointer' }}>\n//             {selectedFacture ? 'Mettre à jour la facture' : 'Créer la facture'}\n//           </button>\n//           {/* <button type=\"button\" onClick={handleClear} style={{ padding: '10px 20px', borderRadius: '4px', border: 'none', backgroundColor: '#dc3545', color: '#fff', cursor: 'pointer' }}>\n//             Effacer\n//           </button> */}\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default Cfvbscfa;\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cfvbscfa({\n  selectedFacture\n}) {\n  _s();\n  const [clName, setClName] = useState('');\n  const [client_id, setClientCode] = useState('');\n  const [date, setDate] = useState('');\n  const [DT, setDT] = useState('1.000');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0,\n    remise: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const [articles, setArticles] = useState([]);\n  const [filteredArticles, setFilteredArticles] = useState([]);\n  const remiseInputRef = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:7777/articlesbsvcf').then(res => {\n      console.log('Fetched Articles:', res.data);\n      const parsedArticles = res.data;\n      setArticles(parsedArticles);\n      setReferences(parsedArticles.map(article => article.refAr));\n    }).catch(err => console.log('Error fetching articles:', err));\n  }, []);\n  useEffect(() => {\n    if (selectedFacture) {\n      console.log('Selected Facture in CreateFactureVente:', selectedFacture);\n      setClName(selectedFacture.clName || '');\n      setClientCode(selectedFacture.client_id || '');\n      setDate(selectedFacture.date || '');\n      setDT(selectedFacture.DT || '1.000');\n      setInputs(selectedFacture.articles || [{\n        refAr: '',\n        quantité: '',\n        price: 0,\n        remise: 0\n      }]);\n    }\n  }, [selectedFacture]);\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/cfvbscf/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log('Error fetching price:', err));\n  };\n  const handleReferenceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n    fetchPriceByReference(value, index);\n  };\n  const handleRemiseChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].remise = value;\n    setInputs(newInputs);\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].quantité = value;\n    if (!isNaN(value) && value !== '') {\n      axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`).then(res => {\n        const availableQuantity = res.data.quantity;\n        const remainingQuantity = availableQuantity - parseInt(value);\n        if (remainingQuantity < 0) {\n          alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n          newInputs[index].quantité = availableQuantity;\n        }\n        setInputs(newInputs);\n      }).catch(err => console.error('Error fetching quantity:', err));\n    } else {\n      alert('Veuillez entrer une quantité valide.');\n    }\n  };\n  const handleAddInput = () => {\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n    if (isEmpty) {\n      alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n      return;\n    }\n    setInputs([...inputs, {\n      refAr: '',\n      price: 0,\n      quantité: '',\n      remise: 0\n    }]);\n  };\n  const calculateTotal = () => {\n    if (!inputs) return 0;\n    const total = inputs.reduce((acc, curr) => acc + curr.price * curr.quantité * (1 - curr.remise / 100), 0) + parseFloat(DT);\n    return total.toFixed(3);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n    if (invalidReference) {\n      alert(\"Sélectionner une référence valide\");\n      return;\n    }\n    const refArArray = nonEmptyInputs.map(input => ({\n      refAr: input.refAr,\n      price: input.price,\n      quantité: input.quantité,\n      remise: input.remise\n    }));\n    const totalPrice = calculateTotal();\n    try {\n      console.log('Submitting data:', {\n        clName,\n        client_id,\n        date,\n        DT,\n        refAr: refArArray,\n        totalPrice\n      });\n      const res = await axios.post('http://localhost:7777/cfvbscf/', {\n        clName,\n        client_id,\n        date,\n        DT,\n        refAr: refArArray,\n        totalPrice\n      });\n      console.log('Response:', res.data);\n      handleClear();\n      window.location.reload();\n    } catch (err) {\n      console.error('Error creating facture:', err.response ? err.response.data : err);\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleAddInput();\n    }\n  };\n  const handleClientSelect = (name, code) => {\n    setClName(name);\n    setClientCode(code);\n    setFilteredClients([]);\n  };\n  const handleClientChange = e => {\n    const {\n      value\n    } = e.target;\n    setClName(value);\n    axios.get(`http://localhost:7777/clients/search?name=${value}`).then(res => {\n      setFilteredClients(res.data);\n    }).catch(err => console.log('Error fetching clients:', err));\n    axios.get(`http://localhost:7777/clients/search?name=${value}`).then(res => {\n      if (res.data.length > 0) {\n        setClientCode(res.data[0].clID);\n      } else {\n        setClientCode('');\n      }\n    }).catch(err => console.log('Error fetching client code:', err));\n\n    // Filter articles based on client name\n    const filtered = articles.filter(article => article.clName && article.clName.toLowerCase().includes(value.toLowerCase()));\n    setFilteredArticles(filtered);\n  };\n  const handleClientBlur = () => {\n    setFilteredClients([]);\n  };\n  const handleClientCodeChange = e => {\n    const {\n      value\n    } = e.target;\n    setClientCode(value);\n    axios.get(`http://localhost:7777/clients/search?id=${value}`).then(res => {\n      if (res.data.length > 0) {\n        setClName(res.data[0].clName);\n      } else {\n        setClName('');\n      }\n    }).catch(err => console.log('Error fetching client name:', err));\n\n    // Filter articles based on client code\n    const filtered = articles.filter(article => article.client_id && article.client_id.toLowerCase().includes(value.toLowerCase()));\n    setFilteredArticles(filtered);\n  };\n  const handleUpdate = async event => {\n    event.preventDefault();\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n    if (invalidReference) {\n      alert(\"Sélectionner une référence valide\");\n      return;\n    }\n    const refArArray = nonEmptyInputs.map(input => ({\n      refAr: input.refAr,\n      price: input.price,\n      quantité: input.quantité,\n      remise: input.remise\n    }));\n    const totalPrice = calculateTotal();\n    try {\n      const res = await axios.put(`http://localhost:7777/cfvbscf/update/${selectedFacture.id}`, {\n        clName,\n        client_id,\n        date,\n        DT,\n        articles: refArArray,\n        totalPrice\n      });\n      console.log(res.data);\n      window.location.reload();\n    } catch (err) {\n      console.log('Error updating facture:', err);\n    }\n  };\n  const handleClear = () => {\n    setClName('');\n    setClientCode('');\n    setDate('');\n    setDT('1.000');\n    setInputs([{\n      refAr: '',\n      quantité: '',\n      price: 0,\n      remise: 0\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      fontFamily: 'Arial, sans-serif',\n      backgroundColor: '#f9f9f9',\n      padding: '20px',\n      borderRadius: '8px',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: \"Cr\\xE9ation Facture Vente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: selectedFacture ? handleUpdate : handleSubmit,\n      style: {\n        width: '100%',\n        maxWidth: '800px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '48%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"clName\",\n            style: {\n              display: 'block',\n              marginBottom: '5px'\n            },\n            children: \"Nom Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"clName\",\n            value: clName,\n            onChange: handleClientChange,\n            onBlur: handleClientBlur,\n            style: {\n              width: '100%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ccc'\n            },\n            list: \"clientSuggestions\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"clientSuggestions\",\n            children: filteredClients.map((client, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: client.clName,\n              onClick: () => handleClientSelect(client.clName, client.clID)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '48%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"clientCode\",\n            style: {\n              display: 'block',\n              marginBottom: '5px'\n            },\n            children: \"Code Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"clientCode\",\n            value: client_id,\n            onChange: handleClientCodeChange,\n            style: {\n              width: '100%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ccc'\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '48%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            style: {\n              display: 'block',\n              marginBottom: '5px'\n            },\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value),\n            style: {\n              width: '100%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ccc'\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '48%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"DT\",\n            style: {\n              display: 'block',\n              marginBottom: '5px'\n            },\n            children: \"DT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"DT\",\n            value: DT,\n            onChange: e => setDT(e.target.value),\n            style: {\n              width: '100%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ccc'\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px'\n          },\n          children: \"Articles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 11\n        }, this), inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input.refAr,\n            onChange: e => handleReferenceChange(e, index),\n            placeholder: \"R\\xE9f\\xE9rence\",\n            list: \"articleReferences\",\n            style: {\n              width: '24%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ccc'\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"articleReferences\",\n            children: references.map((reference, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: reference\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: input.price,\n            placeholder: \"Prix\",\n            readOnly: true,\n            style: {\n              width: '24%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ccc'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: input.quantité,\n            onChange: e => handleQuantityChange(e, index),\n            placeholder: \"Quantit\\xE9\",\n            style: {\n              width: '24%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ccc'\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: input.remise,\n            onChange: e => handleRemiseChange(e, index),\n            placeholder: \"Remise (%)\",\n            style: {\n              width: '24%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ccc'\n            },\n            required: true,\n            onKeyDown: handleKeyPress,\n            ref: remiseInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleAddInput,\n          style: {\n            padding: '8px 12px',\n            borderRadius: '4px',\n            backgroundColor: '#007bff',\n            color: '#fff',\n            border: 'none',\n            cursor: 'pointer'\n          },\n          children: \"Ajouter une ligne\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"total\",\n          style: {\n            display: 'block',\n            marginBottom: '5px'\n          },\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"total\",\n          value: calculateTotal(),\n          readOnly: true,\n          style: {\n            width: '100%',\n            padding: '8px',\n            borderRadius: '4px',\n            border: '1px solid #ccc'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: '10px 15px',\n          borderRadius: '4px',\n          backgroundColor: '#28a745',\n          color: '#fff',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        children: selectedFacture ? 'Mettre à jour' : 'Soumettre'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 620,\n    columnNumber: 5\n  }, this);\n}\n_s(Cfvbscfa, \"ZugdmU/lPKqhCIz/plZYouv5w44=\");\n_c = Cfvbscfa;\nexport default Cfvbscfa;\nvar _c;\n$RefreshReg$(_c, \"Cfvbscfa\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Cfvbscfa","selectedFacture","_s","clName","setClName","client_id","setClientCode","date","setDate","DT","setDT","inputs","setInputs","refAr","quantité","price","remise","references","setReferences","filteredClients","setFilteredClients","articles","setArticles","filteredArticles","setFilteredArticles","remiseInputRef","get","then","res","console","log","data","parsedArticles","map","article","catch","err","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","event","value","target","handleRemiseChange","handleQuantityChange","isNaN","availableQuantity","quantity","remainingQuantity","parseInt","alert","error","handleAddInput","isEmpty","some","input","calculateTotal","total","reduce","acc","curr","parseFloat","toFixed","handleSubmit","preventDefault","nonEmptyInputs","filter","invalidReference","includes","refArArray","totalPrice","post","handleClear","window","location","reload","response","handleKeyPress","key","handleClientSelect","name","code","handleClientChange","e","length","clID","filtered","toLowerCase","handleClientBlur","handleClientCodeChange","handleUpdate","put","id","style","margin","display","flexDirection","alignItems","fontFamily","backgroundColor","padding","borderRadius","boxShadow","children","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","width","maxWidth","justifyContent","htmlFor","type","onChange","onBlur","border","list","required","client","onClick","placeholder","readOnly","onKeyDown","ref","color","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/Cfvbscfa.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function Cfvbscfa({ selectedFacture }) {\r\n//   const [clName, setClName] = useState('');\r\n//   const [client_id, setClientCode] = useState('');\r\n//   const [date, setDate] = useState('');\r\n//   const [DT, setDT] = useState('1.000');\r\n//   const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//   const [references, setReferences] = useState([]);\r\n//   const [filteredClients, setFilteredClients] = useState([]);\r\n\r\n//   const remiseInputRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     axios.get('http://localhost:7777/articlesbsvcf')\r\n//       .then(res => {\r\n//         console.log('Fetched Articles:', res.data);\r\n//         const parsedArticles = res.data;\r\n//         setReferences(parsedArticles.map(article => article.refAr));\r\n//         setInputs(parsedArticles);\r\n//       })\r\n//       .catch(err => console.log('Error fetching articles:', err));\r\n//   }, []);\r\n  \r\n//   useEffect(() => {\r\n//     if (selectedFacture) {\r\n//       console.log('Selected Facture in CreateFactureVente:', selectedFacture);\r\n//       setClName(selectedFacture.clName || '');\r\n//       setClientCode(selectedFacture.client_id || '');\r\n//       setDate(selectedFacture.date || '');\r\n//       setDT(selectedFacture.DT || '1.000');\r\n//       setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//     }\r\n//   }, [selectedFacture]);\r\n\r\n//   const fetchPriceByReference = (reference, index) => {\r\n//     axios.get(`http://localhost:7777/cfvbscf/${reference}`)\r\n//       .then(res => {\r\n//         const price = res.data.price;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].price = price;\r\n//         setInputs(newInputs);\r\n//       })\r\n//       .catch(err => console.log('Error fetching price:', err));\r\n//   };\r\n\r\n//   const handleReferenceChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].refAr = value;\r\n//     setInputs(newInputs);\r\n//     fetchPriceByReference(value, index);\r\n//   };\r\n\r\n//   const handleRemiseChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].remise = value;\r\n//     setInputs(newInputs);\r\n//   };\r\n\r\n//   const handleQuantityChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].quantité = value;\r\n\r\n//     if (!isNaN(value) && value !== '') {\r\n//       axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//         .then(res => {\r\n//           const availableQuantity = res.data.quantity;\r\n//           const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n//           if (remainingQuantity < 0) {\r\n//             alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//             newInputs[index].quantité = availableQuantity; \r\n//           }\r\n\r\n//           setInputs(newInputs);\r\n//         })\r\n//         .catch(err => console.error('Error fetching quantity:', err));\r\n//     } else {\r\n//       alert('Veuillez entrer une quantité valide.');\r\n//     }\r\n//   };\r\n\r\n//   const handleAddInput = () => {\r\n//     const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n//     if (isEmpty) {\r\n//       alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n//       return;\r\n//     }\r\n//     setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n//   };\r\n\r\n//   const calculateTotal = () => {\r\n//     if (!inputs) return 0;\r\n//     const total = inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité) * (1 - (curr.remise / 100)), 0) + parseFloat(DT);\r\n//     return total.toFixed(3);\r\n//   };\r\n\r\n// const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n  \r\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n  \r\n//     if (invalidReference) {\r\n//       alert(\"Sélectionner une référence valide\");\r\n//       return;\r\n//     }\r\n  \r\n//     const refArArray = nonEmptyInputs.map(input => ({\r\n//       refAr: input.refAr,\r\n//       price: input.price,\r\n//       quantité: input.quantité,\r\n//       remise: input.remise\r\n//     }));\r\n  \r\n//     const totalPrice = calculateTotal();\r\n//     try {\r\n//       console.log('Submitting data:', {\r\n//         clName,\r\n//         client_id,\r\n//         date,\r\n//         DT,\r\n//         refAr: refArArray,\r\n//         totalPrice\r\n//       });\r\n  \r\n//       const res = await axios.post('http://localhost:7777/cfvbscf/', {\r\n//         clName,\r\n//         client_id,\r\n//         date,\r\n//         DT,\r\n//         refAr: refArArray,\r\n//         totalPrice\r\n//       });\r\n  \r\n//       console.log('Response:', res.data);\r\n//       handleClear(); \r\n//       window.location.reload();\r\n//     } catch (err) {\r\n//       console.error('Error creating facture:', err.response ? err.response.data : err);\r\n//     }\r\n//   };\r\n  \r\n\r\n//   const handleKeyPress = (event) => {\r\n//     if (event.key === 'Enter') {\r\n//       handleAddInput();\r\n//     }\r\n//   };\r\n\r\n//   const handleClientSelect = (name, code) => {\r\n//     setClName(name);\r\n//     setClientCode(code);\r\n//     setFilteredClients([]);\r\n//   };\r\n\r\n//   const handleClientChange = (e) => {\r\n//     const { value } = e.target;\r\n//     setClName(value);\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//       .then(res => {\r\n//         setFilteredClients(res.data);\r\n//       })\r\n//       .catch(err => console.log('Error fetching clients:', err));\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//       .then(res => {\r\n//         if (res.data.length > 0) {\r\n//           setClientCode(res.data[0].clID);\r\n//         } else {\r\n//           setClientCode('');\r\n//         }\r\n//       })\r\n//       .catch(err => console.log('Error fetching client code:', err));\r\n//   };\r\n\r\n//   const handleClientBlur = () => {\r\n//     setFilteredClients([]);\r\n//   };\r\n\r\n//   const handleClientCodeChange = (e) => {\r\n//     const { value } = e.target;\r\n//     setClientCode(value);\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\r\n//       .then(res => {\r\n//         if (res.data.length > 0) {\r\n//           setClName(res.data[0].clName);\r\n//         } else {\r\n//           setClName('');\r\n//         }\r\n//       })\r\n//       .catch(err => console.log('Error fetching client name:', err));\r\n//   };\r\n\r\n//   const handleUpdate = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n//     if (invalidReference) {\r\n//       alert(\"Sélectionner une référence valide\");\r\n//       return;\r\n//     }\r\n\r\n//     const refArArray = nonEmptyInputs.map(input => ({\r\n//       refAr: input.refAr,\r\n//       price: input.price,\r\n//       quantité: input.quantité,\r\n//       remise: input.remise\r\n//     }));\r\n\r\n//     const totalPrice = calculateTotal();\r\n//     try {\r\n//       const res = await axios.put(`http://localhost:7777/cfvbscf/update/${selectedFacture.id}`, {\r\n//         clName,\r\n//         client_id,\r\n//         date,\r\n//         DT,\r\n//         articles: refArArray,\r\n//         totalPrice\r\n//       });\r\n//       console.log(res.data);\r\n//       window.location.reload();\r\n//     } catch (err) {\r\n//       console.log('Error updating facture:', err);\r\n//     }\r\n//   };\r\n  \r\n//   const handleClear = () => {\r\n//     setClName('');\r\n//     setClientCode('');\r\n//     setDate('');\r\n//     setDT('1.000');\r\n//     setInputs([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ margin: '20px', display: 'flex', flexDirection: 'column', alignItems: 'center', fontFamily: 'Arial, sans-serif', backgroundColor: '#f9f9f9', padding: '20px', borderRadius: '8px', boxShadow: '0 2px 4px rgba(0,0,0,0.1)' }}>\r\n//       <h2 style={{ marginBottom: '20px' }}>{selectedFacture ? 'Modifier Facture Vente' : 'Créer Facture Vente'}</h2>\r\n//       <form onSubmit={selectedFacture ? handleUpdate : handleSubmit} style={{ width: '100%', maxWidth: '600px' }}>\r\n//         <div style={{ marginBottom: '15px' }}>\r\n//           <label style={{ display: 'block', marginBottom: '5px' }}>Nom du client:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={clName}\r\n//             onChange={handleClientChange}\r\n//             onBlur={handleClientBlur}\r\n//             style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd', marginBottom: '5px' }}\r\n//           />\r\n//           {filteredClients.length > 0 && (\r\n//             <ul style={{ listStyleType: 'none', padding: '0', margin: '0', border: '1px solid #ddd', borderRadius: '4px', maxHeight: '100px', overflowY: 'auto' }}>\r\n//               {filteredClients.map(client => (\r\n//                 <li key={client.clID} onClick={() => handleClientSelect(client.clName, client.clID)} style={{ padding: '8px', cursor: 'pointer', backgroundColor: '#fff', borderBottom: '1px solid #ddd' }}>\r\n//                   {client.clName}\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           )}\r\n//         </div>\r\n//         <div style={{ marginBottom: '15px' }}>\r\n//           <label style={{ display: 'block', marginBottom: '5px' }}>Code client:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={client_id}\r\n//             onChange={handleClientCodeChange}\r\n//             style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\r\n//           />\r\n//         </div>\r\n//         <div style={{ marginBottom: '15px' }}>\r\n//           <label style={{ display: 'block', marginBottom: '5px' }}>Date:</label>\r\n//           <input\r\n//             type=\"date\"\r\n//             value={date}\r\n//             onChange={e => setDate(e.target.value)}\r\n//             style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\r\n//           />\r\n//         </div>\r\n//         <div style={{ marginBottom: '15px' }}>\r\n//           <label style={{ display: 'block', marginBottom: '5px' }}>DT:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={DT}\r\n//             onChange={e => setDT(e.target.value)}\r\n//             style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\r\n//           />\r\n//         </div>\r\n//         <table style={{ width: '100%', borderCollapse: 'collapse', marginBottom: '15px' }}>\r\n//           <thead>\r\n//             <tr>\r\n//               <th style={{ padding: '8px', border: '1px solid #ddd', backgroundColor: '#f1f1f1' }}>Référence Article</th>\r\n//               <th style={{ padding: '8px', border: '1px solid #ddd', backgroundColor: '#f1f1f1' }}>Quantité</th>\r\n//               <th style={{ padding: '8px', border: '1px solid #ddd', backgroundColor: '#f1f1f1' }}>Prix</th>\r\n//               <th style={{ padding: '8px', border: '1px solid #ddd', backgroundColor: '#f1f1f1' }}>Remise</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {inputs.map((input, index) => (\r\n//               <tr key={index}>\r\n//                 <td style={{ padding: '8px', border: '1px solid #ddd' }}>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     value={input.refAr}\r\n//                     onChange={e => handleReferenceChange(e, index)}\r\n//                     style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\r\n//                   />\r\n//                 </td>\r\n//                 <td style={{ padding: '8px', border: '1px solid #ddd' }}>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     value={input.quantité}\r\n//                     onChange={e => handleQuantityChange(e, index)}\r\n//                     style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\r\n//                   />\r\n//                 </td>\r\n//                 <td style={{ padding: '8px', border: '1px solid #ddd' }}>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     value={input.price}\r\n//                     readOnly\r\n//                     style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd', backgroundColor: '#f9f9f9' }}\r\n//                   />\r\n//                 </td>\r\n//                 <td style={{ padding: '8px', border: '1px solid #ddd' }}>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     value={input.remise}\r\n//                     onChange={e => handleRemiseChange(e, index)}\r\n//                     ref={remiseInputRef}\r\n//                     onKeyPress={handleKeyPress}\r\n//                     style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\r\n//                   />\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//         <button type=\"button\" onClick={handleAddInput} style={{ padding: '10px 20px', borderRadius: '4px', border: 'none', backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', marginBottom: '15px' }}>\r\n//           Ajouter une ligne\r\n//         </button>\r\n//         <p style={{ fontSize: '16px', fontWeight: 'bold' }}>Total: {calculateTotal()} DT</p>\r\n//         <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n//           <button type=\"submit\" style={{ padding: '10px 20px', borderRadius: '4px', border: 'none', backgroundColor: '#28a745', color: '#fff', cursor: 'pointer' }}>\r\n//             {selectedFacture ? 'Mettre à jour la facture' : 'Créer la facture'}\r\n//           </button>\r\n//           {/* <button type=\"button\" onClick={handleClear} style={{ padding: '10px 20px', borderRadius: '4px', border: 'none', backgroundColor: '#dc3545', color: '#fff', cursor: 'pointer' }}>\r\n//             Effacer\r\n//           </button> */}\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Cfvbscfa;\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Cfvbscfa({ selectedFacture }) {\r\n  const [clName, setClName] = useState('');\r\n  const [client_id, setClientCode] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [DT, setDT] = useState('1.000');\r\n  const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n  const [references, setReferences] = useState([]);\r\n  const [filteredClients, setFilteredClients] = useState([]);\r\n  const [articles, setArticles] = useState([]);\r\n  const [filteredArticles, setFilteredArticles] = useState([]);\r\n\r\n  const remiseInputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:7777/articlesbsvcf')\r\n      .then(res => {\r\n        console.log('Fetched Articles:', res.data);\r\n        const parsedArticles = res.data;\r\n        setArticles(parsedArticles);\r\n        setReferences(parsedArticles.map(article => article.refAr));\r\n      })\r\n      .catch(err => console.log('Error fetching articles:', err));\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    if (selectedFacture) {\r\n      console.log('Selected Facture in CreateFactureVente:', selectedFacture);\r\n      setClName(selectedFacture.clName || '');\r\n      setClientCode(selectedFacture.client_id || '');\r\n      setDate(selectedFacture.date || '');\r\n      setDT(selectedFacture.DT || '1.000');\r\n      setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n    }\r\n  }, [selectedFacture]);\r\n\r\n  const fetchPriceByReference = (reference, index) => {\r\n    axios.get(`http://localhost:7777/cfvbscf/${reference}`)\r\n      .then(res => {\r\n        const price = res.data.price;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].price = price;\r\n        setInputs(newInputs);\r\n      })\r\n      .catch(err => console.log('Error fetching price:', err));\r\n  };\r\n\r\n  const handleReferenceChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].refAr = value;\r\n    setInputs(newInputs);\r\n    fetchPriceByReference(value, index);\r\n  };\r\n\r\n  const handleRemiseChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].remise = value;\r\n    setInputs(newInputs);\r\n  };\r\n\r\n  const handleQuantityChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].quantité = value;\r\n\r\n    if (!isNaN(value) && value !== '') {\r\n      axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n        .then(res => {\r\n          const availableQuantity = res.data.quantity;\r\n          const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n          if (remainingQuantity < 0) {\r\n            alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n            newInputs[index].quantité = availableQuantity; \r\n          }\r\n\r\n          setInputs(newInputs);\r\n        })\r\n        .catch(err => console.error('Error fetching quantity:', err));\r\n    } else {\r\n      alert('Veuillez entrer une quantité valide.');\r\n    }\r\n  };\r\n\r\n  const handleAddInput = () => {\r\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n    if (isEmpty) {\r\n      alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n      return;\r\n    }\r\n    setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n  };\r\n\r\n  const calculateTotal = () => {\r\n    if (!inputs) return 0;\r\n    const total = inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité) * (1 - (curr.remise / 100)), 0) + parseFloat(DT);\r\n    return total.toFixed(3);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n  \r\n    if (invalidReference) {\r\n      alert(\"Sélectionner une référence valide\");\r\n      return;\r\n    }\r\n  \r\n    const refArArray = nonEmptyInputs.map(input => ({\r\n      refAr: input.refAr,\r\n      price: input.price,\r\n      quantité: input.quantité,\r\n      remise: input.remise\r\n    }));\r\n  \r\n    const totalPrice = calculateTotal();\r\n    try {\r\n      console.log('Submitting data:', {\r\n        clName,\r\n        client_id,\r\n        date,\r\n        DT,\r\n        refAr: refArArray,\r\n        totalPrice\r\n      });\r\n  \r\n      const res = await axios.post('http://localhost:7777/cfvbscf/', {\r\n        clName,\r\n        client_id,\r\n        date,\r\n        DT,\r\n        refAr: refArArray,\r\n        totalPrice\r\n      });\r\n  \r\n      console.log('Response:', res.data);\r\n      handleClear(); \r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.error('Error creating facture:', err.response ? err.response.data : err);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleAddInput();\r\n    }\r\n  };\r\n\r\n  const handleClientSelect = (name, code) => {\r\n    setClName(name);\r\n    setClientCode(code);\r\n    setFilteredClients([]);\r\n  };\r\n\r\n  const handleClientChange = (e) => {\r\n    const { value } = e.target;\r\n    setClName(value);\r\n\r\n    axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n      .then(res => {\r\n        setFilteredClients(res.data);\r\n      })\r\n      .catch(err => console.log('Error fetching clients:', err));\r\n\r\n    axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n      .then(res => {\r\n        if (res.data.length > 0) {\r\n          setClientCode(res.data[0].clID);\r\n        } else {\r\n          setClientCode('');\r\n        }\r\n      })\r\n      .catch(err => console.log('Error fetching client code:', err));\r\n\r\n    // Filter articles based on client name\r\n    const filtered = articles.filter(article =>\r\n      article.clName && article.clName.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n    setFilteredArticles(filtered);\r\n  };\r\n\r\n  const handleClientBlur = () => {\r\n    setFilteredClients([]);\r\n  };\r\n\r\n  const handleClientCodeChange = (e) => {\r\n    const { value } = e.target;\r\n    setClientCode(value);\r\n\r\n    axios.get(`http://localhost:7777/clients/search?id=${value}`)\r\n      .then(res => {\r\n        if (res.data.length > 0) {\r\n          setClName(res.data[0].clName);\r\n        } else {\r\n          setClName('');\r\n        }\r\n      })\r\n      .catch(err => console.log('Error fetching client name:', err));\r\n\r\n    // Filter articles based on client code\r\n    const filtered = articles.filter(article =>\r\n      article.client_id && article.client_id.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n    setFilteredArticles(filtered);\r\n  };\r\n\r\n  const handleUpdate = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n    if (invalidReference) {\r\n      alert(\"Sélectionner une référence valide\");\r\n      return;\r\n    }\r\n\r\n    const refArArray = nonEmptyInputs.map(input => ({\r\n      refAr: input.refAr,\r\n      price: input.price,\r\n      quantité: input.quantité,\r\n      remise: input.remise\r\n    }));\r\n\r\n    const totalPrice = calculateTotal();\r\n    try {\r\n      const res = await axios.put(`http://localhost:7777/cfvbscf/update/${selectedFacture.id}`, {\r\n        clName,\r\n        client_id,\r\n        date,\r\n        DT,\r\n        articles: refArArray,\r\n        totalPrice\r\n      });\r\n      console.log(res.data);\r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.log('Error updating facture:', err);\r\n    }\r\n  };\r\n  \r\n  const handleClear = () => {\r\n    setClName('');\r\n    setClientCode('');\r\n    setDate('');\r\n    setDT('1.000');\r\n    setInputs([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: '20px', display: 'flex', flexDirection: 'column', alignItems: 'center', fontFamily: 'Arial, sans-serif', backgroundColor: '#f9f9f9', padding: '20px', borderRadius: '8px', boxShadow: '0 2px 4px rgba(0,0,0,0.1)' }}>\r\n      <h2 style={{ marginBottom: '20px' }}>Création Facture Vente</h2>\r\n      <form onSubmit={selectedFacture ? handleUpdate : handleSubmit} style={{ width: '100%', maxWidth: '800px' }}>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>\r\n          <div style={{ width: '48%' }}>\r\n            <label htmlFor=\"clName\" style={{ display: 'block', marginBottom: '5px' }}>Nom Client</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"clName\"\r\n              value={clName}\r\n              onChange={handleClientChange}\r\n              onBlur={handleClientBlur}\r\n              style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\r\n              list=\"clientSuggestions\"\r\n              required\r\n            />\r\n            <datalist id=\"clientSuggestions\">\r\n              {filteredClients.map((client, index) => (\r\n                <option key={index} value={client.clName} onClick={() => handleClientSelect(client.clName, client.clID)} />\r\n              ))}\r\n            </datalist>\r\n          </div>\r\n          <div style={{ width: '48%' }}>\r\n            <label htmlFor=\"clientCode\" style={{ display: 'block', marginBottom: '5px' }}>Code Client</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"clientCode\"\r\n              value={client_id}\r\n              onChange={handleClientCodeChange}\r\n              style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>\r\n          <div style={{ width: '48%' }}>\r\n            <label htmlFor=\"date\" style={{ display: 'block', marginBottom: '5px' }}>Date</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"date\"\r\n              value={date}\r\n              onChange={e => setDate(e.target.value)}\r\n              style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\r\n              required\r\n            />\r\n          </div>\r\n          <div style={{ width: '48%' }}>\r\n            <label htmlFor=\"DT\" style={{ display: 'block', marginBottom: '5px' }}>DT</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"DT\"\r\n              value={DT}\r\n              onChange={e => setDT(e.target.value)}\r\n              style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <div style={{ marginBottom: '10px' }}>\r\n          <label style={{ display: 'block', marginBottom: '5px' }}>Articles</label>\r\n          {inputs.map((input, index) => (\r\n            <div key={index} style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>\r\n              <input\r\n                type=\"text\"\r\n                value={input.refAr}\r\n                onChange={e => handleReferenceChange(e, index)}\r\n                placeholder=\"Référence\"\r\n                list=\"articleReferences\"\r\n                style={{ width: '24%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\r\n                required\r\n              />\r\n              <datalist id=\"articleReferences\">\r\n                {references.map((reference, index) => (\r\n                  <option key={index} value={reference} />\r\n                ))}\r\n              </datalist>\r\n              <input\r\n                type=\"number\"\r\n                value={input.price}\r\n                placeholder=\"Prix\"\r\n                readOnly\r\n                style={{ width: '24%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                value={input.quantité}\r\n                onChange={e => handleQuantityChange(e, index)}\r\n                placeholder=\"Quantité\"\r\n                style={{ width: '24%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\r\n                required\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                value={input.remise}\r\n                onChange={e => handleRemiseChange(e, index)}\r\n                placeholder=\"Remise (%)\"\r\n                style={{ width: '24%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\r\n                required\r\n                onKeyDown={handleKeyPress}\r\n                ref={remiseInputRef}\r\n              />\r\n            </div>\r\n          ))}\r\n          <button type=\"button\" onClick={handleAddInput} style={{ padding: '8px 12px', borderRadius: '4px', backgroundColor: '#007bff', color: '#fff', border: 'none', cursor: 'pointer' }}>\r\n            Ajouter une ligne\r\n          </button>\r\n        </div>\r\n        <div style={{ marginBottom: '10px' }}>\r\n          <label htmlFor=\"total\" style={{ display: 'block', marginBottom: '5px' }}>Total</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"total\"\r\n            value={calculateTotal()}\r\n            readOnly\r\n            style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" style={{ padding: '10px 15px', borderRadius: '4px', backgroundColor: '#28a745', color: '#fff', border: 'none', cursor: 'pointer' }}>\r\n          {selectedFacture ? 'Mettre à jour' : 'Soumettre'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cfvbscfa;\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}