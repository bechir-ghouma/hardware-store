{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\Cfvbscf.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import axios from 'axios';\n\n// function Cfvbscf({ selectedFacture }) {\n//   const [clName, setClName] = useState('');\n//   const [client_id, setClientCode] = useState('');\n//   const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//   const [references, setReferences] = useState([]);\n//   const [filteredClients, setFilteredClients] = useState([]);\n\n//   const remiseInputRef = useRef(null);\n\n//   useEffect(() => {\n//     axios.get('http://localhost:7777/article')\n//       .then(res => {\n//         setReferences(res.data.map(article => article.ref));\n//       })\n//       .catch(err => console.log('Error fetching articles:', err));\n//   }, []);\n\n//   useEffect(() => {\n//     if (selectedFacture) {\n//       console.log('Selected Facture in CreateFactureVente:', selectedFacture);\n//       setClName(selectedFacture.clName || '');\n//       setClientCode(selectedFacture.client_id || '');\n//       setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//     }\n//   }, [selectedFacture]);\n\n//   const fetchPriceByReference = (reference, index) => {\n//     axios.get(`http://localhost:7777/factureVente/${reference}`)\n//       .then(res => {\n//         const price = res.data.price;\n//         const newInputs = [...inputs];\n//         newInputs[index].price = price;\n//         setInputs(newInputs);\n//       })\n//       .catch(err => console.log('Error fetching price:', err));\n//   };\n\n//   const handleReferenceChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].refAr = value;\n//     setInputs(newInputs);\n//     fetchPriceByReference(value, index);\n//   };\n\n//   const handleRemiseChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].remise = value;\n//     setInputs(newInputs);\n//   };\n\n//   const handleQuantityChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].quantité = value;\n\n//     if (!isNaN(value) && value !== '') {\n//       axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//         .then(res => {\n//           const availableQuantity = res.data.quantity;\n//           const remainingQuantity = availableQuantity - parseInt(value);\n\n//           if (remainingQuantity < 0) {\n//             alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//             newInputs[index].quantité = availableQuantity; // Setting the input quantity to available quantity\n//           }\n\n//           setInputs(newInputs);\n//         })\n//         .catch(err => console.error('Error fetching quantity:', err));\n//     } else {\n//       // Handle case where value is not a valid number\n//       alert('Veuillez entrer une quantité valide.');\n//     }\n//   };\n\n//   const handleAddInput = () => {\n//     const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n//     if (isEmpty) {\n//       alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n//       return;\n//     }\n//     setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\n//   };\n\n//   const calculateTotal = () => {\n//     if (!inputs) return 0;\n//     const total = inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité) * (1 - (curr.remise / 100)), 0);\n//     return total.toFixed(3);\n//   };\n\n//   const updateStock = async (inputs) => {\n//     try {\n//       for (const input of inputs) {\n//         if (!isNaN(input.quantité) && input.quantité !== '') {\n//           const response = await axios.put(`http://localhost:7777/article/${input.refAr}/updateStock`, { quantity: input.quantité });\n//           console.log(`Stock updated for ${input.refAr}:`, response.data);\n//         }\n//       }\n//     } catch (error) {\n//       console.error('Error updating stock:', error);\n//     }\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//     if (invalidReference) {\n//       alert(\"Sélectionner une référence valide\");\n//       return;\n//     }\n\n//     const refArArray = nonEmptyInputs.map(input => ({\n//       refAr: input.refAr,\n//       price: input.price,\n//       quantité: input.quantité,\n//       remise: input.remise\n//     }));\n\n//     const totalPrice = calculateTotal();\n//     try {\n//       const res = await axios.post('http://localhost:7777/factureVente/cfvbscf/', {\n//         clName,\n//         client_id: client_id || 0, // Provide default value if client_id is empty\n//         refAr: refArArray,\n//         totalPrice\n//       });\n//       console.log(res.data);\n//       await updateStock(refArArray);\n//       window.location.reload();\n//     } catch (err) {\n//       console.log('Error creating facture:', err);\n//     }\n//   };\n\n//   const handleUpdate = async (event) => {\n//     event.preventDefault();\n\n//     if (!selectedFacture || !selectedFacture.id) {\n//       alert(\"No facture selected for update.\");\n//       return;\n//     }\n\n//     console.log('Selected Facture ID:', selectedFacture.id);\n\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//     if (invalidReference) {\n//       alert(\"Sélectionner une référence valide\");\n//       return;\n//     }\n\n//     const refArArray = nonEmptyInputs.map(input => ({\n//       refAr: input.refAr,\n//       price: input.price,\n//       quantité: input.quantité,\n//       remise: input.remise\n//     }));\n\n//     const totalPrice = calculateTotal();\n//     try {\n//       const res = await axios.put(`http://localhost:7777/factureVente/update/${selectedFacture.id}`, {\n//         clName,\n//         client_id: client_id || 0, // Provide default value if client_id is empty\n//         articles: refArArray,\n//         totalPrice: totalPrice || 0 // Provide default value if totalPrice is empty\n//       });\n//       console.log(res.data);\n//       await updateStock(refArArray);\n//       window.location.reload();\n//     } catch (err) {\n//       console.log('Error updating facture:', err);\n//     }\n//   };\n\n//   const handleKeyPress = (event) => {\n//     if (event.key === 'Enter') {\n//       handleAddInput();\n//     }\n//   };\n\n//   const handleClientSelect = (name, code) => {\n//     setClName(name);\n//     setClientCode(code);\n//     setFilteredClients([]);\n//   };\n\n//   const handleClientChange = (e) => {\n//     const { value } = e.target;\n//     setClName(value);\n\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//       .then(res => {\n//         setFilteredClients(res.data);\n//       })\n//       .catch(err => console.log('Error fetching clients:', err));\n\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//       .then(res => {\n//         if (res.data.length > 0) {\n//           setClientCode(res.data[0].clID);\n//         } else {\n//           setClientCode('');\n//         }\n//       })\n//       .catch(err => console.log('Error fetching client code:', err));\n//   };\n\n//   const handleClientBlur = () => {\n//     setFilteredClients([]);\n//   };\n\n//   const handleClientCodeChange = (e) => {\n//     const { value } = e.target;\n//     setClientCode(value);\n\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\n//       .then(res => {\n//         if (res.data.length > 0) {\n//           setClName(res.data[0].clName);\n//         } else {\n//           setClName('');\n//         }\n//       })\n//       .catch(err => console.log('Error fetching client name:', err));\n//   };\n\n//   const handleClear = () => {\n//     setClName('');\n//     setClientCode('');\n//     setInputs([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//   };\n\n// return (\n//   <div style={{ margin: '20px', justifyContent: 'center' }}>\n//     <div style={{ display: 'flex', flex: '1' }}>\n//       <div>\n//         <div style={{ marginBottom: '20px' }}>\n//           <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\n//           <input\n//             style={{ width: '200px' }}\n//             type=\"text\"\n//             id=\"code-client\"\n//             name=\"code-client\"\n//             value={client_id}\n//             onChange={handleClientCodeChange}\n//           />\n//         </div>\n//         <div style={{ marginBottom: '20px', position: 'relative' }}>\n//           <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\n//           <input\n//             style={{ width: '200px' }}\n//             type=\"text\"\n//             id=\"client\"\n//             value={clName}\n//             onChange={handleClientChange}\n//             onBlur={handleClientBlur}\n//           />\n//           {filteredClients.length > 0 && (\n//             <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\n//               {filteredClients.map((client, index) => (\n//                 <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\n//                   {client.clName}\n//                 </div>\n//               ))}\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//       <div>\n//         {inputs.map((input, index) => (\n//           <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//             <div style={{ flex: '1', marginRight: '10px' }}>\n//               <label>Référence d'article</label>\n//               <input\n//                 list=\"references\"\n//                 style={{ width: '100%' }}\n//                 value={input.refAr}\n//                 onChange={(e) => handleReferenceChange(e, index)}\n//               />\n//               <datalist id=\"references\">\n//                 {references.map((reference, idx) => (\n//                   <option key={idx} value={reference} />\n//                 ))}\n//               </datalist>\n//             </div>\n//             <div style={{ flex: '1', marginRight: '10px' }}>\n//               <label>Prix vente TTC</label>\n//               <input\n//                 type=\"number\"\n//                 style={{ width: '100%' }}\n//                 value={input.price}\n//                 readOnly\n//               />\n//             </div>\n//             <div style={{ flex: '1', marginRight: '10px' }}>\n//               <label>Quantité</label>\n//               <input\n//                 type=\"number\"\n//                 style={{ width: '100%' }}\n//                 value={input.quantité}\n//                 onChange={(e) => handleQuantityChange(e, index)}\n//               />\n//             </div>\n//             <div style={{ display: 'flex', alignItems: 'center' }}>\n//               <div style={{ flex: '1' }}>\n//                 <label>Remise</label>\n//                 <input\n//                   type=\"number\"\n//                   style={{ width: '100%' }}\n//                   value={input.remise}\n//                   onChange={(e) => handleRemiseChange(e, index)}\n//                   onKeyDown={handleKeyPress}\n//                   ref={remiseInputRef}\n//                 />\n//               </div>\n//               <div style={{ marginLeft: '10px' }}>\n//                 <button type=\"button\" onClick={handleAddInput}>+</button>\n//               </div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       <div>\n//         <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\n//           <button\n//             style={{ width: '200px', marginBottom: '10px' }}\n//             type=\"button\"\n//             onClick={handleSubmit}\n//           >\n//             Ajouter\n//           </button>\n//           <button\n//             style={{ width: '200px', marginBottom: '10px' }}\n//             type=\"submit\"\n//             onClick={handleUpdate}\n//           >\n//             {selectedFacture ? 'Mettre à jour' : 'Enregistrer'}\n//           </button><br />\n//           <button\n//             style={{ width: '200px', marginBottom: '10px' }}\n//             type=\"button\"\n//             onClick={handleClear}\n//           >\n//             Vider les champs\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//     <div style={{ marginBottom: '20px' }}>\n//       <label>Total</label>\n//       <input\n//         style={{ width: '100%' }}\n//         value={calculateTotal()}\n//         readOnly\n//       />\n//     </div>\n//   </div>\n// );\n// }\n\n// export default Cfvbscf;\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cfvbscf({\n  selectedFacture\n}) {\n  _s();\n  const [clName, setClName] = useState('');\n  const [client_id, setClientCode] = useState('');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0,\n    remise: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const remiseInputRef = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:7777/article').then(res => {\n      setReferences(res.data.map(article => article.ref));\n    }).catch(err => console.log('Error fetching articles:', err));\n  }, []);\n  useEffect(() => {\n    if (selectedFacture) {\n      console.log('Selected Facture in CreateFactureVente:', selectedFacture);\n      setClName(selectedFacture.clName || '');\n      setClientCode(selectedFacture.client_id || '');\n      setInputs(selectedFacture.articles || [{\n        refAr: '',\n        quantité: '',\n        price: 0,\n        remise: 0\n      }]);\n    }\n  }, [selectedFacture]);\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/factureVente/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log('Error fetching price:', err));\n  };\n  const handleReferenceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n    fetchPriceByReference(value, index);\n  };\n  const handleRemiseChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].remise = value;\n    setInputs(newInputs);\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].quantité = value;\n    if (!isNaN(value) && value !== '') {\n      axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`).then(res => {\n        const availableQuantity = res.data.quantity;\n        const remainingQuantity = availableQuantity - parseInt(value);\n        if (remainingQuantity < 0) {\n          alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n          newInputs[index].quantité = availableQuantity; // Setting the input quantity to available quantity\n        }\n        setInputs(newInputs);\n      }).catch(err => console.error('Error fetching quantity:', err));\n    } else {\n      // Handle case where value is not a valid number\n      alert('Veuillez entrer une quantité valide.');\n    }\n  };\n  const handleAddInput = () => {\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n    if (isEmpty) {\n      alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n      return;\n    }\n    setInputs([...inputs, {\n      refAr: '',\n      price: 0,\n      quantité: '',\n      remise: 0\n    }]);\n  };\n  const calculateTotal = () => {\n    if (!inputs) return 0;\n    const total = inputs.reduce((acc, curr) => acc + curr.price * curr.quantité * (1 - curr.remise / 100), 0);\n    return total.toFixed(3);\n  };\n  const updateStock = async inputs => {\n    try {\n      for (const input of inputs) {\n        if (!isNaN(input.quantité) && input.quantité !== '') {\n          const response = await axios.put(`http://localhost:7777/article/${input.refAr}/updateStock`, {\n            quantity: input.quantité\n          });\n          console.log(`Stock updated for ${input.refAr}:`, response.data);\n        }\n      }\n    } catch (error) {\n      console.error('Error updating stock:', error);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n    if (invalidReference) {\n      alert(\"Sélectionner une référence valide\");\n      return;\n    }\n    const refArArray = nonEmptyInputs.map(input => ({\n      refAr: input.refAr,\n      price: input.price,\n      quantité: input.quantité,\n      remise: input.remise\n    }));\n    const totalPrice = calculateTotal();\n    try {\n      const res = await axios.post('http://localhost:7777/factureVente/cfvbscf/', {\n        clName,\n        client_id: client_id || 0,\n        // Provide default value if client_id is empty\n        refAr: refArArray,\n        totalPrice\n      });\n      console.log(res.data);\n      await updateStock(refArArray);\n      window.location.reload();\n    } catch (err) {\n      console.log('Error creating facture:', err);\n    }\n  };\n\n  // const handleUpdate = async (event) => {\n  //   event.preventDefault();\n\n  //   if (!selectedFacture || !selectedFacture.id) {\n  //     alert(\"No facture selected for update.\");\n  //     return;\n  //   }\n\n  //   console.log('Selected Facture ID:', selectedFacture.id);\n\n  //   const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n  //   const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n  //   if (invalidReference) {\n  //     alert(\"Sélectionner une référence valide\");\n  //     return;\n  //   }\n\n  //   const refArArray = nonEmptyInputs.map(input => ({\n  //     refAr: input.refAr,\n  //     price: input.price,\n  //     quantité: input.quantité,\n  //     remise: input.remise\n  //   }));\n\n  //   const totalPrice = calculateTotal();\n  //   try {\n  //     const res = await axios.put(`http://localhost:7777/factureVente/update/${selectedFacture.id}`, {\n  //       clName,\n  //       client_id: client_id || 0, // Provide default value if client_id is empty\n  //       articles: refArArray,\n  //       totalPrice: totalPrice || 0 // Provide default value if totalPrice is empty\n  //     });\n  //     console.log(res.data);\n  //     await updateStock(refArArray);\n  //     window.location.reload();\n  //   } catch (err) {\n  //     console.log('Error updating facture:', err);\n  //   }\n  // };\n  const handleUpdate = async event => {\n    event.preventDefault();\n    if (!selectedFacture || !selectedFacture.id) {\n      alert(\"No facture selected for update.\");\n      return;\n    }\n    console.log('Selected Facture ID:', selectedFacture.id);\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n    if (invalidReference) {\n      alert(\"Sélectionner une référence valide\");\n      return;\n    }\n    const refArArray = nonEmptyInputs.map(input => ({\n      refAr: input.refAr,\n      price: input.price,\n      quantité: input.quantité,\n      remise: input.remise\n    }));\n    const totalPrice = calculateTotal();\n    try {\n      const res = await axios.put(`http://localhost:7777/factureVente/update/${selectedFacture.id}`, {\n        clName,\n        client_id: client_id || 0,\n        // Provide default value if client_id is empty\n        articles: refArArray,\n        totalPrice: totalPrice || 0 // Provide default value if totalPrice is empty\n      });\n      console.log(res.data);\n      if (res.status === 200) {\n        await updateStock(refArArray);\n        alert(\"Facture updated successfully\");\n        // Optionally, you can also update the local state instead of reloading the entire window\n        // window.location.reload();\n      } else {\n        alert('Error updating facture');\n        console.log('Error:', res.data);\n      }\n    } catch (err) {\n      console.log('Error updating facture:', err);\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleAddInput();\n    }\n  };\n  const handleClientSelect = (name, code) => {\n    setClName(name);\n    setClientCode(code);\n    setFilteredClients([]);\n  };\n  const handleClientChange = e => {\n    const {\n      value\n    } = e.target;\n    setClName(value);\n    axios.get(`http://localhost:7777/clients/search?name=${value}`).then(res => {\n      setFilteredClients(res.data);\n    }).catch(err => console.log('Error fetching clients:', err));\n    axios.get(`http://localhost:7777/clients/search?name=${value}`).then(res => {\n      if (res.data.length > 0) {\n        setClientCode(res.data[0].clID);\n      } else {\n        setClientCode('');\n      }\n    }).catch(err => console.log('Error fetching client code:', err));\n  };\n  const handleClientBlur = () => {\n    setFilteredClients([]);\n  };\n  const handleClientCodeChange = e => {\n    const {\n      value\n    } = e.target;\n    setClientCode(value);\n    axios.get(`http://localhost:7777/clients/search?id=${value}`).then(res => {\n      if (res.data.length > 0) {\n        setClName(res.data[0].clName);\n      } else {\n        setClName('');\n      }\n    }).catch(err => console.log('Error fetching client name:', err));\n  };\n  const handleClear = () => {\n    setClName('');\n    setClientCode('');\n    setInputs([{\n      refAr: '',\n      quantité: '',\n      price: 0,\n      remise: 0\n    }]);\n  };\n\n  //   return (\n  //     <div style={{ margin: '20px', justifyContent: 'center' }}>\n  //       <div style={{ display: 'flex', flex: '1' }}>\n  //         <div>\n  //           <div style={{ marginBottom: '20px', width: '300px', display: 'flex' }}>\n  //             <input\n  //               list=\"client-list\"\n  //               type=\"text\"\n  //               className=\"form-control\"\n  //               value={clName}\n  //               onChange={handleClientChange}\n  //               onBlur={handleClientBlur}\n  //               placeholder=\"Nom de Client\"\n  //               style={{ marginRight: '10px' }}\n  //             />\n  //             <datalist id=\"client-list\">\n  //               {filteredClients.map((client) => (\n  //                 <option key={client.clID} value={client.clName} onClick={() => handleClientSelect(client.clName, client.clID)}>\n  //                   {client.clName}\n  //                 </option>\n  //               ))}\n  //             </datalist>\n  //             <input\n  //               type=\"number\"\n  //               className=\"form-control\"\n  //               value={client_id}\n  //               onChange={handleClientCodeChange}\n  //               placeholder=\"Code client\"\n  //             />\n  //           </div>\n\n  //           {inputs.map((input, index) => (\n  //             <div key={index} className=\"form-group\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginBottom: '10px' }}>\n  //               <select\n  //                 className=\"form-control\"\n  //                 style={{ marginRight: '10px', width: '150px' }}\n  //                 value={input.refAr}\n  //                 onChange={(event) => handleReferenceChange(event, index)}\n  //               >\n  //                 <option value=\"\">Référence d'article</option>\n  //                 {references.map((reference) => (\n  //                   <option key={reference} value={reference}>{reference}</option>\n  //                 ))}\n  //               </select>\n  //               <input\n  //                 type=\"number\"\n  //                 className=\"form-control\"\n  //                 placeholder=\"Quantité\"\n  //                 style={{ marginRight: '10px', width: '100px' }}\n  //                 value={input.quantité}\n  //                 onChange={(event) => handleQuantityChange(event, index)}\n  //               />\n  //               <input\n  //                 type=\"number\"\n  //                 className=\"form-control\"\n  //                 placeholder=\"Remise (%)\"\n  //                 style={{ marginRight: '10px', width: '100px' }}\n  //                 value={input.remise}\n  //                 ref={remiseInputRef}\n  //                 onChange={(event) => handleRemiseChange(event, index)}\n  //               />\n  //               <input\n  //                 type=\"number\"\n  //                 className=\"form-control\"\n  //                 placeholder=\"Prix\"\n  //                 style={{ marginRight: '10px', width: '100px' }}\n  //                 value={input.price}\n  //                 disabled\n  //               />\n  //             </div>\n  //           ))}\n  //           <button type=\"button\" className=\"btn btn-primary\" onClick={handleAddInput}>Ajouter une ligne</button>\n  //         </div>\n  //       </div>\n  //       <div style={{ marginTop: '20px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n  //         <h3>Total: {calculateTotal()} DT</h3>\n  //         <button className=\"btn btn-success\" onClick={handleSubmit}>Enregistrer</button>\n  //         <button className=\"btn btn-warning\" onClick={handleUpdate}>Mettre à jour</button>\n  //         <button className=\"btn btn-danger\" onClick={handleClear}>Annuler</button>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flex: '1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"code-client\",\n            children: \"Code client:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"text\",\n            id: \"code-client\",\n            name: \"code-client\",\n            value: client_id,\n            onChange: handleClientCodeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"client\",\n            children: \"Nom du client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"text\",\n            id: \"client\",\n            value: clName,\n            onChange: handleClientChange,\n            onBlur: handleClientBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 11\n          }, this), filteredClients.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: '100%',\n              left: 0,\n              backgroundColor: 'white',\n              border: '1px solid #ccc',\n              width: '100%'\n            },\n            children: filteredClients.map((client, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '5px',\n                cursor: 'pointer'\n              },\n              onClick: () => handleClientSelect(client.clName, client.clID),\n              children: client.clName\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1',\n              marginRight: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"R\\xE9f\\xE9rence d'article\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              list: \"references\",\n              style: {\n                width: '100%'\n              },\n              value: input.refAr,\n              onChange: e => handleReferenceChange(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n              id: \"references\",\n              children: references.map((reference, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: reference\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1',\n              marginRight: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Prix vente TTC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              style: {\n                width: '100%'\n              },\n              value: input.price,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1',\n              marginRight: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Quantit\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              style: {\n                width: '100%'\n              },\n              value: input.quantité,\n              onChange: e => handleQuantityChange(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: '1'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Remise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                style: {\n                  width: '100%'\n                },\n                value: input.remise,\n                onChange: e => handleRemiseChange(e, index),\n                onKeyDown: handleKeyPress,\n                ref: remiseInputRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 819,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleAddInput,\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 829,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\",\n            marginBottom: '20px',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: '200px',\n              marginBottom: '10px'\n            },\n            type: \"button\",\n            onClick: handleSubmit,\n            children: \"Ajouter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: '200px',\n              marginBottom: '10px'\n            },\n            type: \"submit\",\n            onClick: handleUpdate,\n            children: selectedFacture ? 'Mettre à jour' : 'Enregistrer'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 850,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: '200px',\n              marginBottom: '10px'\n            },\n            type: \"button\",\n            onClick: handleClear,\n            children: \"Vider les champs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Total\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          width: '100%'\n        },\n        value: calculateTotal(),\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 746,\n    columnNumber: 3\n  }, this);\n}\n_s(Cfvbscf, \"f0vrEqt6EkQlTDA6Lqv6zB4Q5so=\");\n_c = Cfvbscf;\nexport default Cfvbscf;\nvar _c;\n$RefreshReg$(_c, \"Cfvbscf\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Cfvbscf","selectedFacture","_s","clName","setClName","client_id","setClientCode","inputs","setInputs","refAr","quantité","price","remise","references","setReferences","filteredClients","setFilteredClients","remiseInputRef","get","then","res","data","map","article","ref","catch","err","console","log","articles","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","event","value","target","handleRemiseChange","handleQuantityChange","isNaN","availableQuantity","quantity","remainingQuantity","parseInt","alert","error","handleAddInput","isEmpty","some","input","calculateTotal","total","reduce","acc","curr","toFixed","updateStock","response","put","handleSubmit","preventDefault","nonEmptyInputs","filter","invalidReference","includes","refArArray","totalPrice","post","window","location","reload","handleUpdate","id","status","handleKeyPress","key","handleClientSelect","name","code","handleClientChange","e","length","clID","handleClientBlur","handleClientCodeChange","handleClear","style","margin","justifyContent","children","display","flex","marginBottom","width","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","position","onBlur","top","left","backgroundColor","border","client","padding","cursor","onClick","alignItems","marginRight","list","idx","readOnly","onKeyDown","marginLeft","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/Cfvbscf.js"],"sourcesContent":["\r\n// import React, { useState, useEffect, useRef } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function Cfvbscf({ selectedFacture }) {\r\n//   const [clName, setClName] = useState('');\r\n//   const [client_id, setClientCode] = useState('');\r\n//   const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//   const [references, setReferences] = useState([]);\r\n//   const [filteredClients, setFilteredClients] = useState([]);\r\n\r\n//   const remiseInputRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     axios.get('http://localhost:7777/article')\r\n//       .then(res => {\r\n//         setReferences(res.data.map(article => article.ref));\r\n//       })\r\n//       .catch(err => console.log('Error fetching articles:', err));\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (selectedFacture) {\r\n//       console.log('Selected Facture in CreateFactureVente:', selectedFacture);\r\n//       setClName(selectedFacture.clName || '');\r\n//       setClientCode(selectedFacture.client_id || '');\r\n//       setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//     }\r\n//   }, [selectedFacture]);\r\n\r\n//   const fetchPriceByReference = (reference, index) => {\r\n//     axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n//       .then(res => {\r\n//         const price = res.data.price;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].price = price;\r\n//         setInputs(newInputs);\r\n//       })\r\n//       .catch(err => console.log('Error fetching price:', err));\r\n//   };\r\n\r\n//   const handleReferenceChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].refAr = value;\r\n//     setInputs(newInputs);\r\n//     fetchPriceByReference(value, index);\r\n//   };\r\n\r\n//   const handleRemiseChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].remise = value;\r\n//     setInputs(newInputs);\r\n//   };\r\n\r\n//   const handleQuantityChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].quantité = value;\r\n\r\n//     if (!isNaN(value) && value !== '') {\r\n//       axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//         .then(res => {\r\n//           const availableQuantity = res.data.quantity;\r\n//           const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n//           if (remainingQuantity < 0) {\r\n//             alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//             newInputs[index].quantité = availableQuantity; // Setting the input quantity to available quantity\r\n//           }\r\n\r\n//           setInputs(newInputs);\r\n//         })\r\n//         .catch(err => console.error('Error fetching quantity:', err));\r\n//     } else {\r\n//       // Handle case where value is not a valid number\r\n//       alert('Veuillez entrer une quantité valide.');\r\n//     }\r\n//   };\r\n\r\n//   const handleAddInput = () => {\r\n//     const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n//     if (isEmpty) {\r\n//       alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n//       return;\r\n//     }\r\n//     setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n//   };\r\n\r\n//   const calculateTotal = () => {\r\n//     if (!inputs) return 0;\r\n//     const total = inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité) * (1 - (curr.remise / 100)), 0);\r\n//     return total.toFixed(3);\r\n//   };\r\n\r\n//   const updateStock = async (inputs) => {\r\n//     try {\r\n//       for (const input of inputs) {\r\n//         if (!isNaN(input.quantité) && input.quantité !== '') {\r\n//           const response = await axios.put(`http://localhost:7777/article/${input.refAr}/updateStock`, { quantity: input.quantité });\r\n//           console.log(`Stock updated for ${input.refAr}:`, response.data);\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error updating stock:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n//     if (invalidReference) {\r\n//       alert(\"Sélectionner une référence valide\");\r\n//       return;\r\n//     }\r\n\r\n//     const refArArray = nonEmptyInputs.map(input => ({\r\n//       refAr: input.refAr,\r\n//       price: input.price,\r\n//       quantité: input.quantité,\r\n//       remise: input.remise\r\n//     }));\r\n\r\n//     const totalPrice = calculateTotal();\r\n//     try {\r\n//       const res = await axios.post('http://localhost:7777/factureVente/cfvbscf/', {\r\n//         clName,\r\n//         client_id: client_id || 0, // Provide default value if client_id is empty\r\n//         refAr: refArArray,\r\n//         totalPrice\r\n//       });\r\n//       console.log(res.data);\r\n//       await updateStock(refArArray);\r\n//       window.location.reload();\r\n//     } catch (err) {\r\n//       console.log('Error creating facture:', err);\r\n//     }\r\n//   };\r\n\r\n//   const handleUpdate = async (event) => {\r\n//     event.preventDefault();\r\n  \r\n//     if (!selectedFacture || !selectedFacture.id) {\r\n//       alert(\"No facture selected for update.\");\r\n//       return;\r\n//     }\r\n    \r\n//     console.log('Selected Facture ID:', selectedFacture.id);\r\n  \r\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n  \r\n//     if (invalidReference) {\r\n//       alert(\"Sélectionner une référence valide\");\r\n//       return;\r\n//     }\r\n  \r\n//     const refArArray = nonEmptyInputs.map(input => ({\r\n//       refAr: input.refAr,\r\n//       price: input.price,\r\n//       quantité: input.quantité,\r\n//       remise: input.remise\r\n//     }));\r\n  \r\n//     const totalPrice = calculateTotal();\r\n//     try {\r\n//       const res = await axios.put(`http://localhost:7777/factureVente/update/${selectedFacture.id}`, {\r\n//         clName,\r\n//         client_id: client_id || 0, // Provide default value if client_id is empty\r\n//         articles: refArArray,\r\n//         totalPrice: totalPrice || 0 // Provide default value if totalPrice is empty\r\n//       });\r\n//       console.log(res.data);\r\n//       await updateStock(refArArray);\r\n//       window.location.reload();\r\n//     } catch (err) {\r\n//       console.log('Error updating facture:', err);\r\n//     }\r\n//   };\r\n\r\n//   const handleKeyPress = (event) => {\r\n//     if (event.key === 'Enter') {\r\n//       handleAddInput();\r\n//     }\r\n//   };\r\n\r\n//   const handleClientSelect = (name, code) => {\r\n//     setClName(name);\r\n//     setClientCode(code);\r\n//     setFilteredClients([]);\r\n//   };\r\n\r\n//   const handleClientChange = (e) => {\r\n//     const { value } = e.target;\r\n//     setClName(value);\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//       .then(res => {\r\n//         setFilteredClients(res.data);\r\n//       })\r\n//       .catch(err => console.log('Error fetching clients:', err));\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//       .then(res => {\r\n//         if (res.data.length > 0) {\r\n//           setClientCode(res.data[0].clID);\r\n//         } else {\r\n//           setClientCode('');\r\n//         }\r\n//       })\r\n//       .catch(err => console.log('Error fetching client code:', err));\r\n//   };\r\n\r\n//   const handleClientBlur = () => {\r\n//     setFilteredClients([]);\r\n//   };\r\n\r\n//   const handleClientCodeChange = (e) => {\r\n//     const { value } = e.target;\r\n//     setClientCode(value);\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\r\n//       .then(res => {\r\n//         if (res.data.length > 0) {\r\n//           setClName(res.data[0].clName);\r\n//         } else {\r\n//           setClName('');\r\n//         }\r\n//       })\r\n//       .catch(err => console.log('Error fetching client name:', err));\r\n//   };\r\n\r\n//   const handleClear = () => {\r\n//     setClName('');\r\n//     setClientCode('');\r\n//     setInputs([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//   };\r\n\r\n// return (\r\n//   <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n//     <div style={{ display: 'flex', flex: '1' }}>\r\n//       <div>\r\n//         <div style={{ marginBottom: '20px' }}>\r\n//           <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\r\n//           <input\r\n//             style={{ width: '200px' }}\r\n//             type=\"text\"\r\n//             id=\"code-client\"\r\n//             name=\"code-client\"\r\n//             value={client_id}\r\n//             onChange={handleClientCodeChange}\r\n//           />\r\n//         </div>\r\n//         <div style={{ marginBottom: '20px', position: 'relative' }}>\r\n//           <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n//           <input\r\n//             style={{ width: '200px' }}\r\n//             type=\"text\"\r\n//             id=\"client\"\r\n//             value={clName}\r\n//             onChange={handleClientChange}\r\n//             onBlur={handleClientBlur}\r\n//           />\r\n//           {filteredClients.length > 0 && (\r\n//             <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\r\n//               {filteredClients.map((client, index) => (\r\n//                 <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\r\n//                   {client.clName}\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//       <div>\r\n//         {inputs.map((input, index) => (\r\n//           <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//             <div style={{ flex: '1', marginRight: '10px' }}>\r\n//               <label>Référence d'article</label>\r\n//               <input\r\n//                 list=\"references\"\r\n//                 style={{ width: '100%' }}\r\n//                 value={input.refAr}\r\n//                 onChange={(e) => handleReferenceChange(e, index)}\r\n//               />\r\n//               <datalist id=\"references\">\r\n//                 {references.map((reference, idx) => (\r\n//                   <option key={idx} value={reference} />\r\n//                 ))}\r\n//               </datalist>\r\n//             </div>\r\n//             <div style={{ flex: '1', marginRight: '10px' }}>\r\n//               <label>Prix vente TTC</label>\r\n//               <input\r\n//                 type=\"number\"\r\n//                 style={{ width: '100%' }}\r\n//                 value={input.price}\r\n//                 readOnly\r\n//               />\r\n//             </div>\r\n//             <div style={{ flex: '1', marginRight: '10px' }}>\r\n//               <label>Quantité</label>\r\n//               <input\r\n//                 type=\"number\"\r\n//                 style={{ width: '100%' }}\r\n//                 value={input.quantité}\r\n//                 onChange={(e) => handleQuantityChange(e, index)}\r\n//               />\r\n//             </div>\r\n//             <div style={{ display: 'flex', alignItems: 'center' }}>\r\n//               <div style={{ flex: '1' }}>\r\n//                 <label>Remise</label>\r\n//                 <input\r\n//                   type=\"number\"\r\n//                   style={{ width: '100%' }}\r\n//                   value={input.remise}\r\n//                   onChange={(e) => handleRemiseChange(e, index)}\r\n//                   onKeyDown={handleKeyPress}\r\n//                   ref={remiseInputRef}\r\n//                 />\r\n//               </div>\r\n//               <div style={{ marginLeft: '10px' }}>\r\n//                 <button type=\"button\" onClick={handleAddInput}>+</button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//       <div>\r\n//         <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\r\n//           <button\r\n//             style={{ width: '200px', marginBottom: '10px' }}\r\n//             type=\"button\"\r\n//             onClick={handleSubmit}\r\n//           >\r\n//             Ajouter\r\n//           </button>\r\n//           <button\r\n//             style={{ width: '200px', marginBottom: '10px' }}\r\n//             type=\"submit\"\r\n//             onClick={handleUpdate}\r\n//           >\r\n//             {selectedFacture ? 'Mettre à jour' : 'Enregistrer'}\r\n//           </button><br />\r\n//           <button\r\n//             style={{ width: '200px', marginBottom: '10px' }}\r\n//             type=\"button\"\r\n//             onClick={handleClear}\r\n//           >\r\n//             Vider les champs\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//     <div style={{ marginBottom: '20px' }}>\r\n//       <label>Total</label>\r\n//       <input\r\n//         style={{ width: '100%' }}\r\n//         value={calculateTotal()}\r\n//         readOnly\r\n//       />\r\n//     </div>\r\n//   </div>\r\n// );\r\n// }\r\n\r\n// export default Cfvbscf;\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Cfvbscf({ selectedFacture }) {\r\n  const [clName, setClName] = useState('');\r\n  const [client_id, setClientCode] = useState('');\r\n  const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n  const [references, setReferences] = useState([]);\r\n  const [filteredClients, setFilteredClients] = useState([]);\r\n\r\n  const remiseInputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:7777/article')\r\n      .then(res => {\r\n        setReferences(res.data.map(article => article.ref));\r\n      })\r\n      .catch(err => console.log('Error fetching articles:', err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedFacture) {\r\n      console.log('Selected Facture in CreateFactureVente:', selectedFacture);\r\n      setClName(selectedFacture.clName || '');\r\n      setClientCode(selectedFacture.client_id || '');\r\n      setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n    }\r\n  }, [selectedFacture]);\r\n\r\n  const fetchPriceByReference = (reference, index) => {\r\n    axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n      .then(res => {\r\n        const price = res.data.price;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].price = price;\r\n        setInputs(newInputs);\r\n      })\r\n      .catch(err => console.log('Error fetching price:', err));\r\n  };\r\n\r\n  const handleReferenceChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].refAr = value;\r\n    setInputs(newInputs);\r\n    fetchPriceByReference(value, index);\r\n  };\r\n\r\n  const handleRemiseChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].remise = value;\r\n    setInputs(newInputs);\r\n  };\r\n\r\n  const handleQuantityChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].quantité = value;\r\n\r\n    if (!isNaN(value) && value !== '') {\r\n      axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n        .then(res => {\r\n          const availableQuantity = res.data.quantity;\r\n          const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n          if (remainingQuantity < 0) {\r\n            alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n            newInputs[index].quantité = availableQuantity; // Setting the input quantity to available quantity\r\n          }\r\n\r\n          setInputs(newInputs);\r\n        })\r\n        .catch(err => console.error('Error fetching quantity:', err));\r\n    } else {\r\n      // Handle case where value is not a valid number\r\n      alert('Veuillez entrer une quantité valide.');\r\n    }\r\n  };\r\n\r\n  const handleAddInput = () => {\r\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n    if (isEmpty) {\r\n      alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n      return;\r\n    }\r\n    setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n  };\r\n\r\n  const calculateTotal = () => {\r\n    if (!inputs) return 0;\r\n    const total = inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité) * (1 - (curr.remise / 100)), 0);\r\n    return total.toFixed(3);\r\n  };\r\n\r\n  const updateStock = async (inputs) => {\r\n    try {\r\n      for (const input of inputs) {\r\n        if (!isNaN(input.quantité) && input.quantité !== '') {\r\n          const response = await axios.put(`http://localhost:7777/article/${input.refAr}/updateStock`, { quantity: input.quantité });\r\n          console.log(`Stock updated for ${input.refAr}:`, response.data);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating stock:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n    if (invalidReference) {\r\n      alert(\"Sélectionner une référence valide\");\r\n      return;\r\n    }\r\n\r\n    const refArArray = nonEmptyInputs.map(input => ({\r\n      refAr: input.refAr,\r\n      price: input.price,\r\n      quantité: input.quantité,\r\n      remise: input.remise\r\n    }));\r\n\r\n    const totalPrice = calculateTotal();\r\n    try {\r\n      const res = await axios.post('http://localhost:7777/factureVente/cfvbscf/', {\r\n        clName,\r\n        client_id: client_id || 0, // Provide default value if client_id is empty\r\n        refAr: refArArray,\r\n        totalPrice\r\n      });\r\n      console.log(res.data);\r\n      await updateStock(refArArray);\r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.log('Error creating facture:', err);\r\n    }\r\n  };\r\n\r\n  // const handleUpdate = async (event) => {\r\n  //   event.preventDefault();\r\n\r\n  //   if (!selectedFacture || !selectedFacture.id) {\r\n  //     alert(\"No facture selected for update.\");\r\n  //     return;\r\n  //   }\r\n\r\n  //   console.log('Selected Facture ID:', selectedFacture.id);\r\n\r\n  //   const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n  //   const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n  //   if (invalidReference) {\r\n  //     alert(\"Sélectionner une référence valide\");\r\n  //     return;\r\n  //   }\r\n\r\n  //   const refArArray = nonEmptyInputs.map(input => ({\r\n  //     refAr: input.refAr,\r\n  //     price: input.price,\r\n  //     quantité: input.quantité,\r\n  //     remise: input.remise\r\n  //   }));\r\n\r\n  //   const totalPrice = calculateTotal();\r\n  //   try {\r\n  //     const res = await axios.put(`http://localhost:7777/factureVente/update/${selectedFacture.id}`, {\r\n  //       clName,\r\n  //       client_id: client_id || 0, // Provide default value if client_id is empty\r\n  //       articles: refArArray,\r\n  //       totalPrice: totalPrice || 0 // Provide default value if totalPrice is empty\r\n  //     });\r\n  //     console.log(res.data);\r\n  //     await updateStock(refArArray);\r\n  //     window.location.reload();\r\n  //   } catch (err) {\r\n  //     console.log('Error updating facture:', err);\r\n  //   }\r\n  // };\r\n  const handleUpdate = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    if (!selectedFacture || !selectedFacture.id) {\r\n      alert(\"No facture selected for update.\");\r\n      return;\r\n    }\r\n  \r\n    console.log('Selected Facture ID:', selectedFacture.id);\r\n  \r\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n  \r\n    if (invalidReference) {\r\n      alert(\"Sélectionner une référence valide\");\r\n      return;\r\n    }\r\n  \r\n    const refArArray = nonEmptyInputs.map(input => ({\r\n      refAr: input.refAr,\r\n      price: input.price,\r\n      quantité: input.quantité,\r\n      remise: input.remise\r\n    }));\r\n  \r\n    const totalPrice = calculateTotal();\r\n    try {\r\n      const res = await axios.put(`http://localhost:7777/factureVente/update/${selectedFacture.id}`, {\r\n        clName,\r\n        client_id: client_id || 0, // Provide default value if client_id is empty\r\n        articles: refArArray,\r\n        totalPrice: totalPrice || 0 // Provide default value if totalPrice is empty\r\n      });\r\n      console.log(res.data);\r\n  \r\n      if (res.status === 200) {\r\n        await updateStock(refArArray);\r\n        alert(\"Facture updated successfully\");\r\n        // Optionally, you can also update the local state instead of reloading the entire window\r\n        // window.location.reload();\r\n      } else {\r\n        alert('Error updating facture');\r\n        console.log('Error:', res.data);\r\n      }\r\n    } catch (err) {\r\n      console.log('Error updating facture:', err);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleAddInput();\r\n    }\r\n  };\r\n\r\n  const handleClientSelect = (name, code) => {\r\n    setClName(name);\r\n    setClientCode(code);\r\n    setFilteredClients([]);\r\n  };\r\n\r\n  const handleClientChange = (e) => {\r\n    const { value } = e.target;\r\n    setClName(value);\r\n\r\n    axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n      .then(res => {\r\n        setFilteredClients(res.data);\r\n      })\r\n      .catch(err => console.log('Error fetching clients:', err));\r\n\r\n    axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n      .then(res => {\r\n        if (res.data.length > 0) {\r\n          setClientCode(res.data[0].clID);\r\n        } else {\r\n          setClientCode('');\r\n        }\r\n      })\r\n      .catch(err => console.log('Error fetching client code:', err));\r\n  };\r\n\r\n  const handleClientBlur = () => {\r\n    setFilteredClients([]);\r\n  };\r\n\r\n  const handleClientCodeChange = (e) => {\r\n    const { value } = e.target;\r\n    setClientCode(value);\r\n\r\n    axios.get(`http://localhost:7777/clients/search?id=${value}`)\r\n      .then(res => {\r\n        if (res.data.length > 0) {\r\n          setClName(res.data[0].clName);\r\n        } else {\r\n          setClName('');\r\n        }\r\n      })\r\n      .catch(err => console.log('Error fetching client name:', err));\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setClName('');\r\n    setClientCode('');\r\n    setInputs([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n  };\r\n\r\n//   return (\r\n//     <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n//       <div style={{ display: 'flex', flex: '1' }}>\r\n//         <div>\r\n//           <div style={{ marginBottom: '20px', width: '300px', display: 'flex' }}>\r\n//             <input\r\n//               list=\"client-list\"\r\n//               type=\"text\"\r\n//               className=\"form-control\"\r\n//               value={clName}\r\n//               onChange={handleClientChange}\r\n//               onBlur={handleClientBlur}\r\n//               placeholder=\"Nom de Client\"\r\n//               style={{ marginRight: '10px' }}\r\n//             />\r\n//             <datalist id=\"client-list\">\r\n//               {filteredClients.map((client) => (\r\n//                 <option key={client.clID} value={client.clName} onClick={() => handleClientSelect(client.clName, client.clID)}>\r\n//                   {client.clName}\r\n//                 </option>\r\n//               ))}\r\n//             </datalist>\r\n//             <input\r\n//               type=\"number\"\r\n//               className=\"form-control\"\r\n//               value={client_id}\r\n//               onChange={handleClientCodeChange}\r\n//               placeholder=\"Code client\"\r\n//             />\r\n//           </div>\r\n\r\n//           {inputs.map((input, index) => (\r\n//             <div key={index} className=\"form-group\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginBottom: '10px' }}>\r\n//               <select\r\n//                 className=\"form-control\"\r\n//                 style={{ marginRight: '10px', width: '150px' }}\r\n//                 value={input.refAr}\r\n//                 onChange={(event) => handleReferenceChange(event, index)}\r\n//               >\r\n//                 <option value=\"\">Référence d'article</option>\r\n//                 {references.map((reference) => (\r\n//                   <option key={reference} value={reference}>{reference}</option>\r\n//                 ))}\r\n//               </select>\r\n//               <input\r\n//                 type=\"number\"\r\n//                 className=\"form-control\"\r\n//                 placeholder=\"Quantité\"\r\n//                 style={{ marginRight: '10px', width: '100px' }}\r\n//                 value={input.quantité}\r\n//                 onChange={(event) => handleQuantityChange(event, index)}\r\n//               />\r\n//               <input\r\n//                 type=\"number\"\r\n//                 className=\"form-control\"\r\n//                 placeholder=\"Remise (%)\"\r\n//                 style={{ marginRight: '10px', width: '100px' }}\r\n//                 value={input.remise}\r\n//                 ref={remiseInputRef}\r\n//                 onChange={(event) => handleRemiseChange(event, index)}\r\n//               />\r\n//               <input\r\n//                 type=\"number\"\r\n//                 className=\"form-control\"\r\n//                 placeholder=\"Prix\"\r\n//                 style={{ marginRight: '10px', width: '100px' }}\r\n//                 value={input.price}\r\n//                 disabled\r\n//               />\r\n//             </div>\r\n//           ))}\r\n//           <button type=\"button\" className=\"btn btn-primary\" onClick={handleAddInput}>Ajouter une ligne</button>\r\n//         </div>\r\n//       </div>\r\n//       <div style={{ marginTop: '20px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n//         <h3>Total: {calculateTotal()} DT</h3>\r\n//         <button className=\"btn btn-success\" onClick={handleSubmit}>Enregistrer</button>\r\n//         <button className=\"btn btn-warning\" onClick={handleUpdate}>Mettre à jour</button>\r\n//         <button className=\"btn btn-danger\" onClick={handleClear}>Annuler</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\nreturn (\r\n  <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n    <div style={{ display: 'flex', flex: '1' }}>\r\n      <div>\r\n        <div style={{ marginBottom: '20px' }}>\r\n          <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\r\n          <input\r\n            style={{ width: '200px' }}\r\n            type=\"text\"\r\n            id=\"code-client\"\r\n            name=\"code-client\"\r\n            value={client_id}\r\n            onChange={handleClientCodeChange}\r\n          />\r\n        </div>\r\n        <div style={{ marginBottom: '20px', position: 'relative' }}>\r\n          <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n          <input\r\n            style={{ width: '200px' }}\r\n            type=\"text\"\r\n            id=\"client\"\r\n            value={clName}\r\n            onChange={handleClientChange}\r\n            onBlur={handleClientBlur}\r\n          />\r\n          {filteredClients.length > 0 && (\r\n            <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\r\n              {filteredClients.map((client, index) => (\r\n                <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\r\n                  {client.clName}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {inputs.map((input, index) => (\r\n          <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n            <div style={{ flex: '1', marginRight: '10px' }}>\r\n              <label>Référence d'article</label>\r\n              <input\r\n                list=\"references\"\r\n                style={{ width: '100%' }}\r\n                value={input.refAr}\r\n                onChange={(e) => handleReferenceChange(e, index)}\r\n              />\r\n              <datalist id=\"references\">\r\n                {references.map((reference, idx) => (\r\n                  <option key={idx} value={reference} />\r\n                ))}\r\n              </datalist>\r\n            </div>\r\n            <div style={{ flex: '1', marginRight: '10px' }}>\r\n              <label>Prix vente TTC</label>\r\n              <input\r\n                type=\"number\"\r\n                style={{ width: '100%' }}\r\n                value={input.price}\r\n                readOnly\r\n              />\r\n            </div>\r\n            <div style={{ flex: '1', marginRight: '10px' }}>\r\n              <label>Quantité</label>\r\n              <input\r\n                type=\"number\"\r\n                style={{ width: '100%' }}\r\n                value={input.quantité}\r\n                onChange={(e) => handleQuantityChange(e, index)}\r\n              />\r\n            </div>\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n              <div style={{ flex: '1' }}>\r\n                <label>Remise</label>\r\n                <input\r\n                  type=\"number\"\r\n                  style={{ width: '100%' }}\r\n                  value={input.remise}\r\n                  onChange={(e) => handleRemiseChange(e, index)}\r\n                  onKeyDown={handleKeyPress}\r\n                  ref={remiseInputRef}\r\n                />\r\n              </div>\r\n              <div style={{ marginLeft: '10px' }}>\r\n                <button type=\"button\" onClick={handleAddInput}>+</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\r\n          <button\r\n            style={{ width: '200px', marginBottom: '10px' }}\r\n            type=\"button\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Ajouter\r\n          </button>\r\n          <button\r\n            style={{ width: '200px', marginBottom: '10px' }}\r\n            type=\"submit\"\r\n            onClick={handleUpdate}\r\n          >\r\n            {selectedFacture ? 'Mettre à jour' : 'Enregistrer'}\r\n          </button><br />\r\n          <button\r\n            style={{ width: '200px', marginBottom: '10px' }}\r\n            type=\"button\"\r\n            onClick={handleClear}\r\n          >\r\n            Vider les champs\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div style={{ marginBottom: '20px' }}>\r\n      <label>Total</label>\r\n      <input\r\n        style={{ width: '100%' }}\r\n        value={calculateTotal()}\r\n        readOnly\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default Cfvbscf;\r\n"],"mappings":";;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}