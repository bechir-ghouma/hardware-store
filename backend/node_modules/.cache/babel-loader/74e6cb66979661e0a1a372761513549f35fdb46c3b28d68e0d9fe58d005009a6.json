{"ast":null,"code":"\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import Modal from 'react-modal';\n// import Cfvbs from './Cfvbs';\n// import { FaSearch } from 'react-icons/fa';\n\n// Modal.setAppElement('#root');\n\n// function Fvbs() {\n//   const [fVente, setFVente] = useState([]);\n//   const [ssortieVente, setSSortieVente] = useState([]);\n//   const [selectedFacture, setSelectedFacture] = useState(null);\n//   const [selectedRow, setSelectedRow] = useState(null);\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [modalIsOpen, setModalIsOpen] = useState(false);\n\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:7777/fvbs/')\n//       .then((res) => {\n//         console.log(res.data);\n//         const formattedFVente = res.data.map((facture) => {\n//           const date = new Date(facture.date);\n//           const formattedDate = date.toISOString().split('T')[0]; \n//           return {\n//             ...facture,\n//             date: formattedDate,\n//           };\n//         });\n//         setFVente(formattedFVente);\n//       })\n//       .catch((err) => console.log(err));\n\n//     axios\n//       .get('http://localhost:7777/ssortievente')\n//       .then((res) => {\n//         setSSortieVente(res.data);\n//       })\n//       .catch((err) => console.log('Error fetching ssortievente data:', err));\n//   }, []);\n\n//   const handleDelete = async () => {\n//     const id = selectedFacture?.id;\n//     if (!id) return;\n//     try {\n//       await axios.delete(`http://localhost:7777/factureVente/${id}`);\n//       setFVente(fVente.filter((facture) => facture.id !== id));\n//       setSelectedFacture(null); \n//       setSelectedRow(null);\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   };\n\n//   const handleAddFactureVente = (newFactureVente) => {\n//     setFVente([...fVente, newFactureVente]);\n//   };\n\n//   const filteredFVente = fVente.filter((facture) => {\n//     return (\n//       facture.clName?.toLowerCase()?.includes(searchQuery.toLowerCase()) ||\n//       facture.articles.some(article => article.refAr.toLowerCase().includes(searchQuery.toLowerCase()))\n//     );\n//   });\n\n//   const handleSearch = (query) => {\n//     setSearchQuery(query);\n//   };\n\n//   const handleSubmit = (newFactureData) => {\n//     axios.post('http://localhost:7777/cfvbs/', newFactureData)\n//       .then(res => {\n//         console.log(res);\n//         setModalIsOpen(false); \n//         setFVente([...fVente, res.data]); \n//       })\n//       .catch(err => console.log('Error creating facture:', err));\n//   };\n\n//   const handleRowClick = (article) => {\n//     setSelectedFacture({\n//       articles: [{\n//         refAr: article.refAr,\n//         quantité: article.quantité,\n//         price: article.price,\n//         remise: article.remise,\n//       }]\n//     });\n//     setSelectedRow(article);\n//   };\n\n//   return (\n//     <div className=\"facture-vente-container\">\n//       <Cfvbs onFactureSubmit={handleSubmit} selectedFacture={selectedFacture} />\n//       <button onClick={() => setModalIsOpen(true)}>Voir les produits</button>\n//       <Modal\n//         isOpen={modalIsOpen}\n//         onRequestClose={() => setModalIsOpen(false)}\n//         contentLabel=\"Voir les factures de vente\"\n//         style={{\n//           content: {\n//             top: '50%',\n//             left: '50%',\n//             right: 'auto',\n//             bottom: 'auto',\n//             marginRight: '-50%',\n//             transform: 'translate(-50%, -50%)',\n//             width: '80%',\n//             maxWidth: '800px',\n//             maxHeight: '80vh',\n//             overflowY: 'auto',\n//           },\n//         }}\n//       >\n//         <div className=\"d-flex justify-content-between align-items-center mb-3\">\n//           <h2 className=\"mb-4\">Factures de vente :</h2>\n//           <div className=\"input-group\">\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               placeholder=\"Rechercher un client ou une référence...\"\n//               value={searchQuery}\n//               onChange={(e) => handleSearch(e.target.value)}\n//             />\n//             <span className=\"input-group-text\">\n//               <FaSearch />\n//             </span>\n//           </div>\n//         </div>\n//         <button onClick={handleDelete}>Supprimer</button>\n//         <div className=\"table-responsive\">\n//           <table className=\"table table-striped\">\n//             <thead>\n//               <tr>\n//                 <th>Reference</th>\n//                 <th>Prix</th>\n//                 <th>Quantité</th>\n//                 <th>Remise</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {ssortieVente.map((entry) => {\n//                 const articles = JSON.parse(entry.articles);\n//                 return articles.map((article, index) => (\n//                   <tr\n//                     key={`${entry.id}-${index}`}\n//                     onClick={() => handleRowClick(article)}\n//                     className={selectedRow === article ? 'table-active' : ''}\n//                     style={{ cursor: 'pointer' }}\n//                   >\n//                     <td>{article.refAr}</td>\n//                     <td>{article.price}</td>\n//                     <td>{article.quantité}</td>\n//                     <td>{article.remise}</td>\n//                   </tr>\n//                 ));\n//               })}\n//             </tbody>\n//           </table>\n//         </div>\n//       </Modal>\n//     </div>\n//   );\n// }\n\n// export default Fvbs;\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import Modal from 'react-modal';\n// import Cfvbs from './Cfvbs';\n// import { FaSearch } from 'react-icons/fa';\n\n// Modal.setAppElement('#root');\n\n// function Fvbs() {\n//   const [fVente, setFVente] = useState([]);\n//   const [ssortieVente, setSSortieVente] = useState([]);\n//   const [selectedFacture, setSelectedFacture] = useState(null);\n//   const [selectedRow, setSelectedRow] = useState(null);\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [modalIsOpen, setModalIsOpen] = useState(false);\n\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:7777/fvbs/')\n//       .then((res) => {\n//         const formattedFVente = res.data.map((facture) => {\n//           const date = new Date(facture.date);\n//           const formattedDate = date.toISOString().split('T')[0];\n//           return {\n//             ...facture,\n//             date: formattedDate,\n//           };\n//         });\n//         setFVente(formattedFVente);\n//       })\n//       .catch((err) => console.log(err));\n\n//     axios\n//       .get('http://localhost:7777/ssortievente')\n//       .then((res) => {\n//         setSSortieVente(res.data);\n//       })\n//       .catch((err) => console.log('Error fetching ssortievente data:', err));\n//   }, []);\n\n//   const handleDelete = async () => {\n//     const id = selectedFacture?.id;\n//     if (!id) return;\n//     try {\n//       await axios.delete(`http://localhost:7777/factureVente/${id}`);\n//       setFVente(fVente.filter((facture) => facture.id !== id));\n//       setSelectedFacture(null);\n//       setSelectedRow(null);\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   };\n\n//   const handleAddFactureVente = (newFactureVente) => {\n//     setFVente([...fVente, newFactureVente]);\n//   };\n\n//   const filteredFVente = fVente.filter((facture) => {\n//     return (\n//       facture.clName?.toLowerCase()?.includes(searchQuery.toLowerCase()) ||\n//       facture.articles.some((article) =>\n//         article.refAr.toLowerCase().includes(searchQuery.toLowerCase())\n//       )\n//     );\n//   });\n\n//   const handleSearch = (query) => {\n//     setSearchQuery(query);\n//   };\n\n//   const handleSubmit = (newFactureData) => {\n//     axios\n//       .post('http://localhost:7777/cfvbs/', newFactureData)\n//       .then((res) => {\n//         setModalIsOpen(false);\n//         setFVente([...fVente, res.data]);\n//       })\n//       .catch((err) => console.log('Error creating facture:', err));\n//   };\n\n//   const handleRowClick = (entryId, index) => {\n//     const selectedArticle = ssortieVente[entryId].articles[index];\n//     setSelectedFacture({\n//       articles: [\n//         {\n//           refAr: selectedArticle.refAr,\n//           quantité: selectedArticle.quantité,\n//           price: selectedArticle.price,\n//           remise: selectedArticle.remise,\n//         },\n//       ],\n//     });\n//     setSelectedRow(`${entryId}-${index}`);\n//   };\n\n//   return (\n//     <div className=\"facture-vente-container\">\n//       <Cfvbs onFactureSubmit={handleSubmit} selectedFacture={selectedFacture} />\n//       <button onClick={() => setModalIsOpen(true)}>Voir les produits</button>\n//       <Modal\n//         isOpen={modalIsOpen}\n//         onRequestClose={() => setModalIsOpen(false)}\n//         contentLabel=\"Voir les factures de vente\"\n//         style={{\n//           content: {\n//             top: '50%',\n//             left: '50%',\n//             right: 'auto',\n//             bottom: 'auto',\n//             marginRight: '-50%',\n//             transform: 'translate(-50%, -50%)',\n//             width: '80%',\n//             maxWidth: '800px',\n//             maxHeight: '80vh',\n//             overflowY: 'auto',\n//           },\n//         }}\n//       >\n//         <div className=\"d-flex justify-content-between align-items-center mb-3\">\n//           <h2 className=\"mb-4\">Factures de vente :</h2>\n//           <div className=\"input-group\">\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               placeholder=\"Rechercher un client ou une référence...\"\n//               value={searchQuery}\n//               onChange={(e) => handleSearch(e.target.value)}\n//             />\n//             <span className=\"input-group-text\">\n//               <FaSearch />\n//             </span>\n//           </div>\n//         </div>\n//         <button onClick={handleDelete}>Supprimer</button>\n//         <div className=\"table-responsive\">\n//           <table className=\"table table-striped\">\n//             <thead>\n//               <tr>\n//                 <th>Reference</th>\n//                 <th>Prix</th>\n//                 <th>Quantité</th>\n//                 <th>Remise</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {ssortieVente.map((entry, entryIndex) => {\n//                 const articles = JSON.parse(entry.articles);\n//                 return articles.map((article, index) => (\n//                   <tr\n//                     key={`${entry.id}-${index}`}\n//                     onClick={() => {\n//                       handleRowClick(entryIndex, index);\n//                     }}\n//                     className={selectedRow === `${entryIndex}-${index}` ? 'table-active' : ''}\n//                     style={{ cursor: 'pointer' }}\n//                   >\n//                     <td>{article.refAr}</td>\n//                     <td>{article.price}</td>\n//                     <td>{article.quantité}</td>\n//                     <td>{article.remise}</td>\n//                   </tr>\n//                 ));\n//               })}\n//             </tbody>\n//           </table>\n//         </div>\n//       </Modal>\n//     </div>\n//   );\n// }\n\n// export default Fvbs;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import Modal from 'react-modal';\n// import Cfvbs from './Cfvbs';\n// import { FaSearch } from 'react-icons/fa';\n\n// Modal.setAppElement('#root');\n\n// function Fvbs() {\n//   const [fVente, setFVente] = useState([]);\n//   const [ssortieVente, setSSortieVente] = useState([]);\n//   const [selectedFacture, setSelectedFacture] = useState(null);\n//   const [selectedRow, setSelectedRow] = useState(null);\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [modalIsOpen, setModalIsOpen] = useState(false);\n\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:7777/fvbs/')\n//       .then((res) => {\n//         const formattedFVente = res.data.map((facture) => {\n//           const date = new Date(facture.date);\n//           const formattedDate = date.toISOString().split('T')[0];\n//           return {\n//             ...facture,\n//             date: formattedDate,\n//           };\n//         });\n//         setFVente(formattedFVente);\n//       })\n//       .catch((err) => console.log(err));\n\n//     axios\n//       .get('http://localhost:7777/ssortievente')\n//       .then((res) => {\n//         setSSortieVente(res.data);\n//       })\n//       .catch((err) => console.log('Error fetching ssortievente data:', err));\n//   }, []);\n\n//   const handleDelete = async () => {\n//     const id = selectedFacture?.id;\n//     if (!id) return;\n//     try {\n//       await axios.delete(`http://localhost:7777/factureVente/${id}`);\n//       setFVente(fVente.filter((facture) => facture.id !== id));\n//       setSelectedFacture(null);\n//       setSelectedRow(null);\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   };\n\n//   const handleRowClick = (entryId, index) => {\n//     const selectedArticle = ssortieVente[entryId].articles[index];\n//     setSelectedFacture({\n//       id: selectedArticle.id, // Assuming this is the ID of the selected article\n//       articles: [\n//         {\n//           refAr: selectedArticle.refAr,\n//           quantité: selectedArticle.quantité,\n//           price: selectedArticle.price,\n//           remise: selectedArticle.remise,\n//         },\n//       ],\n//     });\n//     setSelectedRow(`${entryId}-${index}`);\n//   };\n\n//   const handleSearch = (query) => {\n//     setSearchQuery(query);\n//   };\n\n//   return (\n//     <div className=\"facture-vente-container\">\n//       <Cfvbs selectedFacture={selectedFacture} />\n//       <button onClick={() => setModalIsOpen(true)}>Voir les produits</button>\n//       <Modal\n//         isOpen={modalIsOpen}\n//         onRequestClose={() => setModalIsOpen(false)}\n//         contentLabel=\"Voir les factures de vente\"\n//         style={{\n//           content: {\n//             top: '50%',\n//             left: '50%',\n//             right: 'auto',\n//             bottom: 'auto',\n//             marginRight: '-50%',\n//             transform: 'translate(-50%, -50%)',\n//             width: '80%',\n//             maxWidth: '800px',\n//             maxHeight: '80vh',\n//             overflowY: 'auto',\n//           },\n//         }}\n//       >\n//         <div className=\"d-flex justify-content-between align-items-center mb-3\">\n//           <h2 className=\"mb-4\">Factures de vente :</h2>\n//           <div className=\"input-group\">\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               placeholder=\"Rechercher un client ou une référence...\"\n//               value={searchQuery}\n//               onChange={(e) => handleSearch(e.target.value)}\n//             />\n//             <span className=\"input-group-text\">\n//               <FaSearch />\n//             </span>\n//           </div>\n//         </div>\n//         <button onClick={handleDelete}>Supprimer</button>\n//         <div className=\"table-responsive\">\n//           <table className=\"table table-striped\">\n//             <thead>\n//               <tr>\n//                 <th>Reference</th>\n//                 <th>Prix</th>\n//                 <th>Quantité</th>\n//                 <th>Remise</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {ssortieVente.map((entry, entryIndex) => {\n//                 const articles = JSON.parse(entry.articles);\n//                 return articles.map((article, index) => (\n//                   <tr\n//                     key={`${entry.id}-${index}`}\n//                     onClick={() => {\n//                       handleRowClick(entryIndex, index);\n//                     }}\n//                     className={selectedRow === `${entryIndex}-${index}` ? 'table-active' : ''}\n//                     style={{ cursor: 'pointer' }}\n//                   >\n//                     <td>{article.refAr}</td>\n//                     <td>{article.price}</td>\n//                     <td>{article.quantité}</td>\n//                     <td>{article.remise}</td>\n//                   </tr>\n//                 ));\n//               })}\n//             </tbody>\n//           </table>\n//         </div>\n//       </Modal>\n//     </div>\n//   );\n// }\n\n// export default Fvbs;","map":{"version":3,"names":[],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/Fvbs.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import Modal from 'react-modal';\r\n// import Cfvbs from './Cfvbs';\r\n// import { FaSearch } from 'react-icons/fa';\r\n\r\n// Modal.setAppElement('#root');\r\n\r\n// function Fvbs() {\r\n//   const [fVente, setFVente] = useState([]);\r\n//   const [ssortieVente, setSSortieVente] = useState([]);\r\n//   const [selectedFacture, setSelectedFacture] = useState(null);\r\n//   const [selectedRow, setSelectedRow] = useState(null);\r\n//   const [searchQuery, setSearchQuery] = useState('');\r\n//   const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get('http://localhost:7777/fvbs/')\r\n//       .then((res) => {\r\n//         console.log(res.data);\r\n//         const formattedFVente = res.data.map((facture) => {\r\n//           const date = new Date(facture.date);\r\n//           const formattedDate = date.toISOString().split('T')[0]; \r\n//           return {\r\n//             ...facture,\r\n//             date: formattedDate,\r\n//           };\r\n//         });\r\n//         setFVente(formattedFVente);\r\n//       })\r\n//       .catch((err) => console.log(err));\r\n\r\n//     axios\r\n//       .get('http://localhost:7777/ssortievente')\r\n//       .then((res) => {\r\n//         setSSortieVente(res.data);\r\n//       })\r\n//       .catch((err) => console.log('Error fetching ssortievente data:', err));\r\n//   }, []);\r\n  \r\n//   const handleDelete = async () => {\r\n//     const id = selectedFacture?.id;\r\n//     if (!id) return;\r\n//     try {\r\n//       await axios.delete(`http://localhost:7777/factureVente/${id}`);\r\n//       setFVente(fVente.filter((facture) => facture.id !== id));\r\n//       setSelectedFacture(null); \r\n//       setSelectedRow(null);\r\n//     } catch (err) {\r\n//       console.log(err);\r\n//     }\r\n//   };\r\n\r\n//   const handleAddFactureVente = (newFactureVente) => {\r\n//     setFVente([...fVente, newFactureVente]);\r\n//   };\r\n\r\n//   const filteredFVente = fVente.filter((facture) => {\r\n//     return (\r\n//       facture.clName?.toLowerCase()?.includes(searchQuery.toLowerCase()) ||\r\n//       facture.articles.some(article => article.refAr.toLowerCase().includes(searchQuery.toLowerCase()))\r\n//     );\r\n//   });\r\n\r\n//   const handleSearch = (query) => {\r\n//     setSearchQuery(query);\r\n//   };\r\n\r\n//   const handleSubmit = (newFactureData) => {\r\n//     axios.post('http://localhost:7777/cfvbs/', newFactureData)\r\n//       .then(res => {\r\n//         console.log(res);\r\n//         setModalIsOpen(false); \r\n//         setFVente([...fVente, res.data]); \r\n//       })\r\n//       .catch(err => console.log('Error creating facture:', err));\r\n//   };\r\n\r\n//   const handleRowClick = (article) => {\r\n//     setSelectedFacture({\r\n//       articles: [{\r\n//         refAr: article.refAr,\r\n//         quantité: article.quantité,\r\n//         price: article.price,\r\n//         remise: article.remise,\r\n//       }]\r\n//     });\r\n//     setSelectedRow(article);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"facture-vente-container\">\r\n//       <Cfvbs onFactureSubmit={handleSubmit} selectedFacture={selectedFacture} />\r\n//       <button onClick={() => setModalIsOpen(true)}>Voir les produits</button>\r\n//       <Modal\r\n//         isOpen={modalIsOpen}\r\n//         onRequestClose={() => setModalIsOpen(false)}\r\n//         contentLabel=\"Voir les factures de vente\"\r\n//         style={{\r\n//           content: {\r\n//             top: '50%',\r\n//             left: '50%',\r\n//             right: 'auto',\r\n//             bottom: 'auto',\r\n//             marginRight: '-50%',\r\n//             transform: 'translate(-50%, -50%)',\r\n//             width: '80%',\r\n//             maxWidth: '800px',\r\n//             maxHeight: '80vh',\r\n//             overflowY: 'auto',\r\n//           },\r\n//         }}\r\n//       >\r\n//         <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n//           <h2 className=\"mb-4\">Factures de vente :</h2>\r\n//           <div className=\"input-group\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control\"\r\n//               placeholder=\"Rechercher un client ou une référence...\"\r\n//               value={searchQuery}\r\n//               onChange={(e) => handleSearch(e.target.value)}\r\n//             />\r\n//             <span className=\"input-group-text\">\r\n//               <FaSearch />\r\n//             </span>\r\n//           </div>\r\n//         </div>\r\n//         <button onClick={handleDelete}>Supprimer</button>\r\n//         <div className=\"table-responsive\">\r\n//           <table className=\"table table-striped\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Reference</th>\r\n//                 <th>Prix</th>\r\n//                 <th>Quantité</th>\r\n//                 <th>Remise</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {ssortieVente.map((entry) => {\r\n//                 const articles = JSON.parse(entry.articles);\r\n//                 return articles.map((article, index) => (\r\n//                   <tr\r\n//                     key={`${entry.id}-${index}`}\r\n//                     onClick={() => handleRowClick(article)}\r\n//                     className={selectedRow === article ? 'table-active' : ''}\r\n//                     style={{ cursor: 'pointer' }}\r\n//                   >\r\n//                     <td>{article.refAr}</td>\r\n//                     <td>{article.price}</td>\r\n//                     <td>{article.quantité}</td>\r\n//                     <td>{article.remise}</td>\r\n//                   </tr>\r\n//                 ));\r\n//               })}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </Modal>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Fvbs;\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import Modal from 'react-modal';\r\n// import Cfvbs from './Cfvbs';\r\n// import { FaSearch } from 'react-icons/fa';\r\n\r\n// Modal.setAppElement('#root');\r\n\r\n// function Fvbs() {\r\n//   const [fVente, setFVente] = useState([]);\r\n//   const [ssortieVente, setSSortieVente] = useState([]);\r\n//   const [selectedFacture, setSelectedFacture] = useState(null);\r\n//   const [selectedRow, setSelectedRow] = useState(null);\r\n//   const [searchQuery, setSearchQuery] = useState('');\r\n//   const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get('http://localhost:7777/fvbs/')\r\n//       .then((res) => {\r\n//         const formattedFVente = res.data.map((facture) => {\r\n//           const date = new Date(facture.date);\r\n//           const formattedDate = date.toISOString().split('T')[0];\r\n//           return {\r\n//             ...facture,\r\n//             date: formattedDate,\r\n//           };\r\n//         });\r\n//         setFVente(formattedFVente);\r\n//       })\r\n//       .catch((err) => console.log(err));\r\n\r\n//     axios\r\n//       .get('http://localhost:7777/ssortievente')\r\n//       .then((res) => {\r\n//         setSSortieVente(res.data);\r\n//       })\r\n//       .catch((err) => console.log('Error fetching ssortievente data:', err));\r\n//   }, []);\r\n\r\n//   const handleDelete = async () => {\r\n//     const id = selectedFacture?.id;\r\n//     if (!id) return;\r\n//     try {\r\n//       await axios.delete(`http://localhost:7777/factureVente/${id}`);\r\n//       setFVente(fVente.filter((facture) => facture.id !== id));\r\n//       setSelectedFacture(null);\r\n//       setSelectedRow(null);\r\n//     } catch (err) {\r\n//       console.log(err);\r\n//     }\r\n//   };\r\n\r\n//   const handleAddFactureVente = (newFactureVente) => {\r\n//     setFVente([...fVente, newFactureVente]);\r\n//   };\r\n\r\n//   const filteredFVente = fVente.filter((facture) => {\r\n//     return (\r\n//       facture.clName?.toLowerCase()?.includes(searchQuery.toLowerCase()) ||\r\n//       facture.articles.some((article) =>\r\n//         article.refAr.toLowerCase().includes(searchQuery.toLowerCase())\r\n//       )\r\n//     );\r\n//   });\r\n\r\n//   const handleSearch = (query) => {\r\n//     setSearchQuery(query);\r\n//   };\r\n\r\n//   const handleSubmit = (newFactureData) => {\r\n//     axios\r\n//       .post('http://localhost:7777/cfvbs/', newFactureData)\r\n//       .then((res) => {\r\n//         setModalIsOpen(false);\r\n//         setFVente([...fVente, res.data]);\r\n//       })\r\n//       .catch((err) => console.log('Error creating facture:', err));\r\n//   };\r\n\r\n//   const handleRowClick = (entryId, index) => {\r\n//     const selectedArticle = ssortieVente[entryId].articles[index];\r\n//     setSelectedFacture({\r\n//       articles: [\r\n//         {\r\n//           refAr: selectedArticle.refAr,\r\n//           quantité: selectedArticle.quantité,\r\n//           price: selectedArticle.price,\r\n//           remise: selectedArticle.remise,\r\n//         },\r\n//       ],\r\n//     });\r\n//     setSelectedRow(`${entryId}-${index}`);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"facture-vente-container\">\r\n//       <Cfvbs onFactureSubmit={handleSubmit} selectedFacture={selectedFacture} />\r\n//       <button onClick={() => setModalIsOpen(true)}>Voir les produits</button>\r\n//       <Modal\r\n//         isOpen={modalIsOpen}\r\n//         onRequestClose={() => setModalIsOpen(false)}\r\n//         contentLabel=\"Voir les factures de vente\"\r\n//         style={{\r\n//           content: {\r\n//             top: '50%',\r\n//             left: '50%',\r\n//             right: 'auto',\r\n//             bottom: 'auto',\r\n//             marginRight: '-50%',\r\n//             transform: 'translate(-50%, -50%)',\r\n//             width: '80%',\r\n//             maxWidth: '800px',\r\n//             maxHeight: '80vh',\r\n//             overflowY: 'auto',\r\n//           },\r\n//         }}\r\n//       >\r\n//         <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n//           <h2 className=\"mb-4\">Factures de vente :</h2>\r\n//           <div className=\"input-group\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control\"\r\n//               placeholder=\"Rechercher un client ou une référence...\"\r\n//               value={searchQuery}\r\n//               onChange={(e) => handleSearch(e.target.value)}\r\n//             />\r\n//             <span className=\"input-group-text\">\r\n//               <FaSearch />\r\n//             </span>\r\n//           </div>\r\n//         </div>\r\n//         <button onClick={handleDelete}>Supprimer</button>\r\n//         <div className=\"table-responsive\">\r\n//           <table className=\"table table-striped\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Reference</th>\r\n//                 <th>Prix</th>\r\n//                 <th>Quantité</th>\r\n//                 <th>Remise</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {ssortieVente.map((entry, entryIndex) => {\r\n//                 const articles = JSON.parse(entry.articles);\r\n//                 return articles.map((article, index) => (\r\n//                   <tr\r\n//                     key={`${entry.id}-${index}`}\r\n//                     onClick={() => {\r\n//                       handleRowClick(entryIndex, index);\r\n//                     }}\r\n//                     className={selectedRow === `${entryIndex}-${index}` ? 'table-active' : ''}\r\n//                     style={{ cursor: 'pointer' }}\r\n//                   >\r\n//                     <td>{article.refAr}</td>\r\n//                     <td>{article.price}</td>\r\n//                     <td>{article.quantité}</td>\r\n//                     <td>{article.remise}</td>\r\n//                   </tr>\r\n//                 ));\r\n//               })}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </Modal>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Fvbs;\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import Modal from 'react-modal';\r\n// import Cfvbs from './Cfvbs';\r\n// import { FaSearch } from 'react-icons/fa';\r\n\r\n// Modal.setAppElement('#root');\r\n\r\n// function Fvbs() {\r\n//   const [fVente, setFVente] = useState([]);\r\n//   const [ssortieVente, setSSortieVente] = useState([]);\r\n//   const [selectedFacture, setSelectedFacture] = useState(null);\r\n//   const [selectedRow, setSelectedRow] = useState(null);\r\n//   const [searchQuery, setSearchQuery] = useState('');\r\n//   const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get('http://localhost:7777/fvbs/')\r\n//       .then((res) => {\r\n//         const formattedFVente = res.data.map((facture) => {\r\n//           const date = new Date(facture.date);\r\n//           const formattedDate = date.toISOString().split('T')[0];\r\n//           return {\r\n//             ...facture,\r\n//             date: formattedDate,\r\n//           };\r\n//         });\r\n//         setFVente(formattedFVente);\r\n//       })\r\n//       .catch((err) => console.log(err));\r\n\r\n//     axios\r\n//       .get('http://localhost:7777/ssortievente')\r\n//       .then((res) => {\r\n//         setSSortieVente(res.data);\r\n//       })\r\n//       .catch((err) => console.log('Error fetching ssortievente data:', err));\r\n//   }, []);\r\n\r\n//   const handleDelete = async () => {\r\n//     const id = selectedFacture?.id;\r\n//     if (!id) return;\r\n//     try {\r\n//       await axios.delete(`http://localhost:7777/factureVente/${id}`);\r\n//       setFVente(fVente.filter((facture) => facture.id !== id));\r\n//       setSelectedFacture(null);\r\n//       setSelectedRow(null);\r\n//     } catch (err) {\r\n//       console.log(err);\r\n//     }\r\n//   };\r\n\r\n//   const handleRowClick = (entryId, index) => {\r\n//     const selectedArticle = ssortieVente[entryId].articles[index];\r\n//     setSelectedFacture({\r\n//       id: selectedArticle.id, // Assuming this is the ID of the selected article\r\n//       articles: [\r\n//         {\r\n//           refAr: selectedArticle.refAr,\r\n//           quantité: selectedArticle.quantité,\r\n//           price: selectedArticle.price,\r\n//           remise: selectedArticle.remise,\r\n//         },\r\n//       ],\r\n//     });\r\n//     setSelectedRow(`${entryId}-${index}`);\r\n//   };\r\n\r\n//   const handleSearch = (query) => {\r\n//     setSearchQuery(query);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"facture-vente-container\">\r\n//       <Cfvbs selectedFacture={selectedFacture} />\r\n//       <button onClick={() => setModalIsOpen(true)}>Voir les produits</button>\r\n//       <Modal\r\n//         isOpen={modalIsOpen}\r\n//         onRequestClose={() => setModalIsOpen(false)}\r\n//         contentLabel=\"Voir les factures de vente\"\r\n//         style={{\r\n//           content: {\r\n//             top: '50%',\r\n//             left: '50%',\r\n//             right: 'auto',\r\n//             bottom: 'auto',\r\n//             marginRight: '-50%',\r\n//             transform: 'translate(-50%, -50%)',\r\n//             width: '80%',\r\n//             maxWidth: '800px',\r\n//             maxHeight: '80vh',\r\n//             overflowY: 'auto',\r\n//           },\r\n//         }}\r\n//       >\r\n//         <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n//           <h2 className=\"mb-4\">Factures de vente :</h2>\r\n//           <div className=\"input-group\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control\"\r\n//               placeholder=\"Rechercher un client ou une référence...\"\r\n//               value={searchQuery}\r\n//               onChange={(e) => handleSearch(e.target.value)}\r\n//             />\r\n//             <span className=\"input-group-text\">\r\n//               <FaSearch />\r\n//             </span>\r\n//           </div>\r\n//         </div>\r\n//         <button onClick={handleDelete}>Supprimer</button>\r\n//         <div className=\"table-responsive\">\r\n//           <table className=\"table table-striped\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Reference</th>\r\n//                 <th>Prix</th>\r\n//                 <th>Quantité</th>\r\n//                 <th>Remise</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {ssortieVente.map((entry, entryIndex) => {\r\n//                 const articles = JSON.parse(entry.articles);\r\n//                 return articles.map((article, index) => (\r\n//                   <tr\r\n//                     key={`${entry.id}-${index}`}\r\n//                     onClick={() => {\r\n//                       handleRowClick(entryIndex, index);\r\n//                     }}\r\n//                     className={selectedRow === `${entryIndex}-${index}` ? 'table-active' : ''}\r\n//                     style={{ cursor: 'pointer' }}\r\n//                   >\r\n//                     <td>{article.refAr}</td>\r\n//                     <td>{article.price}</td>\r\n//                     <td>{article.quantité}</td>\r\n//                     <td>{article.remise}</td>\r\n//                   </tr>\r\n//                 ));\r\n//               })}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </Modal>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Fvbs;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}