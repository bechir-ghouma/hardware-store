{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\CreateFactureVente.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// function CreateFactureVente() {\n//     const [client, setClient] = useState('');\n//     const [date, setDate] = useState('');\n//     const [code, setCode] = useState('');\n//     const [refAr, setRefArticle] = useState('');\n//     const [quantité, setQuantité] = useState('');\n//     const [references, setReferences] = useState([]);\n//     const [price, setPrice] = useState(0);\n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/references')\n//             .then(res => {\n//                 setReferences(res.data);\n//             })\n//             .catch(err => console.log(err));\n//     }, []);\n\n//     function handleSubmit(event) {\n//         event.preventDefault();\n//         const totalPrice = quantité * price;\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\n//             client: client,\n//             date: date,\n//             code: code,\n//             refAr: refAr,\n//             quantité: quantité,\n//             totalPrice: totalPrice \n//         })\n//         .then(res => {\n//             console.log(res);\n//             window.location.reload();\n//         })\n//         .catch(err => console.log(err))\n//     }\n\n//     // Handle change in quantity input\n//     function handleQuantityChange(event) {\n//         setQuantité(event.target.value);\n//         // Update price based on selected article and quantity\n//         const selectedRef = event.target.value;\n//         const selectedArticle = references.find(article => article.refAr === selectedRef);\n//         if (selectedArticle) {\n//             setPrice(selectedArticle.price);\n//         }\n//     }\n\n//     return (\n//         <div className='container mt-5'>\n//             <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Nom du client</label>\n//                         <input type='text' placeholder='Entrez le nom du client' className='form-control'\n//                             onChange={e => setClient(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Date</label>\n//                         <input type=\"date\" className='form-control'\n//                             onChange={e => setDate(e.target.value)}\n//                         />\n//                     </div>\n//                 </div>\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Code de la facture</label>\n//                         <input type='text' placeholder='Entrez le code de la facture' className='form-control'\n//                             onChange={e => setCode(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Référence d'article</label>\n//                         <input\n//                             list=\"references\"\n//                             className='form-control'\n//                             placeholder=\"Select or type reference...\"\n//                             value={refAr}\n//                             onChange={(e) => setRefArticle(e.target.value)}\n//                         />\n//                         <datalist id=\"references\">\n//                             {references.map((reference, index) => (\n//                                 <option key={index} value={reference.refAr} />\n//                             ))}\n//                         </datalist>\n//                     </div>\n//                 </div>\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Quantité</label>\n//                         <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\n//                             value={quantité}\n//                             onChange={handleQuantityChange}\n//                         />\n//                     </div>\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Total</label>\n//                         <input type='number' placeholder='Total de la facture' className='form-control'\n//                             value={quantité * price}  // Display calculated total\n//                             disabled  // Disable input since it's a calculated value\n//                         />\n//                     </div>\n//                 </div>\n//                 <button className='btn btn-success'>Ajouter</button>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default CreateFactureVente;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateFactureVente() {\n  _s();\n  const [client, setClient] = useState('');\n  const [date, setDate] = useState('');\n  const [code, setCode] = useState('');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: ''\n  }]);\n  const [references, setReferences] = useState([]);\n  const [price, setPrice] = useState(0);\n  useEffect(() => {\n    axios.get('http://localhost:7777/references').then(res => {\n      setReferences(res.data);\n    }).catch(err => console.log(err));\n  }, []);\n  function handleSubmit(event) {\n    event.preventDefault();\n    const totalPrice = inputs.reduce((acc, curr) => acc + curr.quantité * price, 0);\n    axios.post('http://localhost:7777/factureVente/createFac/', {\n      client: client,\n      date: date,\n      code: code,\n      inputs: inputs,\n      totalPrice: totalPrice\n    }).then(res => {\n      console.log(res);\n      window.location.reload();\n    }).catch(err => console.log(err));\n  }\n\n  // Handle change in quantity input\n  function handleQuantityChange(event, index) {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].quantité = value;\n    setInputs(newInputs);\n    // Update price based on selected article and quantity\n    const selectedRef = inputs[index].refAr;\n    const selectedArticle = references.find(article => article.refAr === selectedRef);\n    if (selectedArticle) {\n      setPrice(selectedArticle.price);\n    }\n  }\n\n  // Handle change in reference input\n  function handleReferenceChange(event, index) {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n  }\n\n  // Add new set of inputs\n  function handleAddInput() {\n    setInputs([...inputs, {\n      refAr: '',\n      quantité: ''\n    }]);\n  }\n  function handlePriceChange(event, index) {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n\n    // Fetch price from the database\n    axios.get(`http://localhost:7777/factureVente/${value}`).then(res => {\n      const price = res.data.price; // Assuming your API returns the price\n      // Update the price in the state\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log(err));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Ajouter une facture de vente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Nom du client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Entrez le nom du client\",\n            className: \"form-control\",\n            onChange: e => setClient(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"form-control\",\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Code de la facture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Entrez le code de la facture\",\n            className: \"form-control\",\n            onChange: e => setCode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"R\\xE9f\\xE9rence d'article\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            list: \"references\",\n            className: \"form-control\",\n            placeholder: \"Select or type reference...\",\n            value: inputs[0].refAr,\n            onChange: e => handleReferenceChange(e, 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"references\",\n            children: references.map((reference, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: reference.refAr\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"R\\xE9f\\xE9rence d'article\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            list: \"references\",\n            className: \"form-control\",\n            placeholder: \"Select or type reference...\",\n            value: input.refAr,\n            onChange: e => handleReferenceChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"references\",\n            children: references.map((reference, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: reference.refAr\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Prix Article\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Prix d'article\",\n            className: \"form-control\",\n            value: input.price,\n            onChange: e => handlePriceChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Quantit\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Entrez la quantit\\xE9 d\\xE9sir\\xE9e\",\n            className: \"form-control\",\n            value: input.quantité,\n            onChange: e => handleQuantityChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 5\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Total de la facture\",\n            className: \"form-control\",\n            value: inputs.reduce((acc, curr) => acc + curr.quantité * price, 0),\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-success\",\n        onClick: handleAddInput,\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Enregistrer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateFactureVente, \"Rm9JkSvTBwv7z/kywtgTQYF7j0M=\");\n_c = CreateFactureVente;\nexport default CreateFactureVente;\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// function CreateFactureVente() {\n//     const [client, setClient] = useState('');\n//     const [date, setDate] = useState('');\n//     const [code, setCode] = useState('');\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0 }]);\n//     const [references, setReferences] = useState([]);\n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/references')\n//             .then(res => {\n//                 setReferences(res.data);\n//             })\n//             .catch(err => console.log(err));\n//     }, []);\n\n//     function handleSubmit(event) {\n//         event.preventDefault();\n//         const totalPrice = inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0);\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\n//             client: client,\n//             date: date,\n//             code: code,\n//             inputs: inputs,\n//             totalPrice: totalPrice \n//         })\n//         .then(res => {\n//             console.log(res);\n//             window.location.reload();\n//         })\n//         .catch(err => console.log(err))\n//     }\n\n//     // Handle change in quantity input\n//     function handleQuantityChange(event, index) {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].quantité = value;\n//         setInputs(newInputs);\n//     }\n\n//     // Handle change in reference input\n//     function handleReferenceChange(event, index) {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].refAr = value;\n//         setInputs(newInputs);\n\n//         // Fetch price from the database\n//         axios.get(`http://localhost:7777/factureVente/${value}`)\n//             .then(res => {\n//                 const price = res.data.price; // Assuming your API returns the price\n//                 // Update the price in the state\n//                 newInputs[index].price = price;\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.log(err));\n//     }\n\n//     // Add new set of inputs\n//     function handleAddInput() {\n//         setInputs([...inputs, { refAr: '', quantité: '', price: 0 }]);\n//     }\n\n//     return (\n//         <div className='container mt-5'>\n//             <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Nom du client</label>\n//                         <input type='text' placeholder='Entrez le nom du client' className='form-control'\n//                             onChange={e => setClient(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Date</label>\n//                         <input type=\"date\" className='form-control'\n//                             onChange={e => setDate(e.target.value)}\n//                         />\n//                     </div>\n//                 </div>\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Code de la facture</label>\n//                         <input type='text' placeholder='Entrez le code de la facture' className='form-control'\n//                             onChange={e => setCode(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Référence d'article</label>\n//                         <input\n//                             list=\"references\"\n//                             className='form-control'\n//                             placeholder=\"Select or type reference...\"\n//                             value={inputs[0].refAr}\n//                             onChange={(e) => handleReferenceChange(e, 0)}\n//                         />\n//                         <datalist id=\"references\">\n//                             {references.map((reference, index) => (\n//                                 <option key={index} value={reference.refAr} />\n//                             ))}\n//                         </datalist>\n//                     </div>\n//                 </div>\n//                 {inputs.map((input, index) => (\n//                     <div className=\"row mb-3\" key={index}>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Référence d'article</label>\n//                             <input\n//                                 list=\"references\"\n//                                 className='form-control'\n//                                 placeholder=\"Select or type reference...\"\n//                                 value={input.refAr}\n//                                 onChange={(e) => handleReferenceChange(e, index)}\n//                             />\n//                             <datalist id=\"references\">\n//                                 {references.map((reference, idx) => (\n//                                     <option key={idx} value={reference.refAr} />\n//                                 ))}\n//                             </datalist>\n//                         </div>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Prix Article</label>\n//                             <input type='number' placeholder=\"Prix d'article\" className='form-control'\n//                                 value={input.price}\n//                                 onChange={(e) => handleReferenceChange(e, index)} // Changed here\n//                             />\n//                         </div>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Quantité</label>\n//                             <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\n//                                 value={input.quantité}\n//                                 onChange={(e) => handleQuantityChange(e, index)}\n//                             />\n//                         </div>\n//                     </div>\n//                 ))}\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Total</label>\n//                         <input type='number' placeholder='Total de la facture' className='form-control'\n//                             value={inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0)}\n//                             disabled\n//                         />\n//                     </div>\n//                 </div>\n//                 <button type=\"button\" className='btn btn-success' onClick={handleAddInput}>Ajouter</button>\n//                 <button type=\"submit\" className='btn btn-primary'>Enregistrer</button>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default CreateFactureVente;\nvar _c;\n$RefreshReg$(_c, \"CreateFactureVente\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","CreateFactureVente","_s","client","setClient","date","setDate","code","setCode","inputs","setInputs","refAr","quantité","references","setReferences","price","setPrice","get","then","res","data","catch","err","console","log","handleSubmit","event","preventDefault","totalPrice","reduce","acc","curr","post","window","location","reload","handleQuantityChange","index","value","target","newInputs","selectedRef","selectedArticle","find","article","handleReferenceChange","handleAddInput","handlePriceChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","placeholder","onChange","e","list","id","map","reference","input","idx","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureVente.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// function CreateFactureVente() {\r\n//     const [client, setClient] = useState('');\r\n//     const [date, setDate] = useState('');\r\n//     const [code, setCode] = useState('');\r\n//     const [refAr, setRefArticle] = useState('');\r\n//     const [quantité, setQuantité] = useState('');\r\n//     const [references, setReferences] = useState([]);\r\n//     const [price, setPrice] = useState(0);\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/references')\r\n//             .then(res => {\r\n//                 setReferences(res.data);\r\n//             })\r\n//             .catch(err => console.log(err));\r\n//     }, []);\r\n\r\n//     function handleSubmit(event) {\r\n//         event.preventDefault();\r\n//         const totalPrice = quantité * price;\r\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//             client: client,\r\n//             date: date,\r\n//             code: code,\r\n//             refAr: refAr,\r\n//             quantité: quantité,\r\n//             totalPrice: totalPrice \r\n//         })\r\n//         .then(res => {\r\n//             console.log(res);\r\n//             window.location.reload();\r\n//         })\r\n//         .catch(err => console.log(err))\r\n//     }\r\n\r\n//     // Handle change in quantity input\r\n//     function handleQuantityChange(event) {\r\n//         setQuantité(event.target.value);\r\n//         // Update price based on selected article and quantity\r\n//         const selectedRef = event.target.value;\r\n//         const selectedArticle = references.find(article => article.refAr === selectedRef);\r\n//         if (selectedArticle) {\r\n//             setPrice(selectedArticle.price);\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <div className='container mt-5'>\r\n//             <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Nom du client</label>\r\n//                         <input type='text' placeholder='Entrez le nom du client' className='form-control'\r\n//                             onChange={e => setClient(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Date</label>\r\n//                         <input type=\"date\" className='form-control'\r\n//                             onChange={e => setDate(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Code de la facture</label>\r\n//                         <input type='text' placeholder='Entrez le code de la facture' className='form-control'\r\n//                             onChange={e => setCode(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Référence d'article</label>\r\n//                         <input\r\n//                             list=\"references\"\r\n//                             className='form-control'\r\n//                             placeholder=\"Select or type reference...\"\r\n//                             value={refAr}\r\n//                             onChange={(e) => setRefArticle(e.target.value)}\r\n//                         />\r\n//                         <datalist id=\"references\">\r\n//                             {references.map((reference, index) => (\r\n//                                 <option key={index} value={reference.refAr} />\r\n//                             ))}\r\n//                         </datalist>\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Quantité</label>\r\n//                         <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\r\n//                             value={quantité}\r\n//                             onChange={handleQuantityChange}\r\n//                         />\r\n//                     </div>\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Total</label>\r\n//                         <input type='number' placeholder='Total de la facture' className='form-control'\r\n//                             value={quantité * price}  // Display calculated total\r\n//                             disabled  // Disable input since it's a calculated value\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <button className='btn btn-success'>Ajouter</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction CreateFactureVente() {\r\n    const [client, setClient] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [code, setCode] = useState('');\r\n    const [inputs, setInputs] = useState([{ refAr: '', quantité: '' }]);\r\n    const [references, setReferences] = useState([]);\r\n    const [price, setPrice] = useState(0);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7777/references')\r\n            .then(res => {\r\n                setReferences(res.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const totalPrice = inputs.reduce((acc, curr) => acc + (curr.quantité * price), 0);\r\n        axios.post('http://localhost:7777/factureVente/createFac/', {\r\n            client: client,\r\n            date: date,\r\n            code: code,\r\n            inputs: inputs,\r\n            totalPrice: totalPrice \r\n        })\r\n        .then(res => {\r\n            console.log(res);\r\n            window.location.reload();\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    // Handle change in quantity input\r\n    function handleQuantityChange(event, index) {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].quantité = value;\r\n        setInputs(newInputs);\r\n        // Update price based on selected article and quantity\r\n        const selectedRef = inputs[index].refAr;\r\n        const selectedArticle = references.find(article => article.refAr === selectedRef);\r\n        if (selectedArticle) {\r\n            setPrice(selectedArticle.price);\r\n        }\r\n    }\r\n\r\n    // Handle change in reference input\r\n    function handleReferenceChange(event, index) {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].refAr = value;\r\n        setInputs(newInputs);\r\n    }\r\n\r\n    // Add new set of inputs\r\n    function handleAddInput() {\r\n        setInputs([...inputs, { refAr: '', quantité: '' }]);\r\n    }\r\n    function handlePriceChange(event, index) {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].refAr = value;\r\n        setInputs(newInputs);\r\n    \r\n        // Fetch price from the database\r\n        axios.get(`http://localhost:7777/factureVente/${value}`)\r\n            .then(res => {\r\n                const price = res.data.price; // Assuming your API returns the price\r\n                // Update the price in the state\r\n                newInputs[index].price = price;\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"row mb-3\">\r\n                    <div className='col'>\r\n                        <label htmlFor=\"\">Nom du client</label>\r\n                        <input type='text' placeholder='Entrez le nom du client' className='form-control'\r\n                            onChange={e => setClient(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className='col'>\r\n                        <label htmlFor=\"\">Date</label>\r\n                        <input type=\"date\" className='form-control'\r\n                            onChange={e => setDate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mb-3\">\r\n                    <div className='col'>\r\n                        <label htmlFor=\"\">Code de la facture</label>\r\n                        <input type='text' placeholder='Entrez le code de la facture' className='form-control'\r\n                            onChange={e => setCode(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className='col'>\r\n                        <label htmlFor=\"\">Référence d'article</label>\r\n                        <input\r\n                            list=\"references\"\r\n                            className='form-control'\r\n                            placeholder=\"Select or type reference...\"\r\n                            value={inputs[0].refAr}\r\n                            onChange={(e) => handleReferenceChange(e, 0)}\r\n                        />\r\n                        <datalist id=\"references\">\r\n                            {references.map((reference, index) => (\r\n                                <option key={index} value={reference.refAr} />\r\n                            ))}\r\n                        </datalist>\r\n                    </div>\r\n                </div>\r\n                {inputs.map((input, index) => (\r\n    <div className=\"row mb-3\" key={index}>\r\n        <div className='col'>\r\n            <label htmlFor=\"\">Référence d'article</label>\r\n            <input\r\n                list=\"references\"\r\n                className='form-control'\r\n                placeholder=\"Select or type reference...\"\r\n                value={input.refAr}\r\n                onChange={(e) => handleReferenceChange(e, index)}\r\n            />\r\n            <datalist id=\"references\">\r\n                {references.map((reference, idx) => (\r\n                    <option key={idx} value={reference.refAr} />\r\n                ))}\r\n            </datalist>\r\n        </div>\r\n        <div className='col'>\r\n            <label htmlFor=\"\">Prix Article</label>\r\n            <input type='number' placeholder=\"Prix d'article\" className='form-control'\r\n                value={input.price}\r\n                onChange={(e) => handlePriceChange(e, index)}\r\n            />\r\n        </div>\r\n        <div className='col'>\r\n            <label htmlFor=\"\">Quantité</label>\r\n            <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\r\n                value={input.quantité}\r\n                onChange={(e) => handleQuantityChange(e, index)}\r\n            />\r\n        </div>\r\n    </div>\r\n))}\r\n\r\n                <div className=\"row mb-3\">\r\n                    <div className='col'>\r\n                        <label htmlFor=\"\">Total</label>\r\n                        <input type='number' placeholder='Total de la facture' className='form-control'\r\n                            value={inputs.reduce((acc, curr) => acc + (curr.quantité * price), 0)}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" className='btn btn-success' onClick={handleAddInput}>Ajouter</button>\r\n                <button type=\"submit\" className='btn btn-primary'>Enregistrer</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateFactureVente;\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// function CreateFactureVente() {\r\n//     const [client, setClient] = useState('');\r\n//     const [date, setDate] = useState('');\r\n//     const [code, setCode] = useState('');\r\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0 }]);\r\n//     const [references, setReferences] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/references')\r\n//             .then(res => {\r\n//                 setReferences(res.data);\r\n//             })\r\n//             .catch(err => console.log(err));\r\n//     }, []);\r\n\r\n//     function handleSubmit(event) {\r\n//         event.preventDefault();\r\n//         const totalPrice = inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0);\r\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//             client: client,\r\n//             date: date,\r\n//             code: code,\r\n//             inputs: inputs,\r\n//             totalPrice: totalPrice \r\n//         })\r\n//         .then(res => {\r\n//             console.log(res);\r\n//             window.location.reload();\r\n//         })\r\n//         .catch(err => console.log(err))\r\n//     }\r\n\r\n//     // Handle change in quantity input\r\n//     function handleQuantityChange(event, index) {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].quantité = value;\r\n//         setInputs(newInputs);\r\n//     }\r\n\r\n//     // Handle change in reference input\r\n//     function handleReferenceChange(event, index) {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].refAr = value;\r\n//         setInputs(newInputs);\r\n\r\n//         // Fetch price from the database\r\n//         axios.get(`http://localhost:7777/factureVente/${value}`)\r\n//             .then(res => {\r\n//                 const price = res.data.price; // Assuming your API returns the price\r\n//                 // Update the price in the state\r\n//                 newInputs[index].price = price;\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.log(err));\r\n//     }\r\n\r\n//     // Add new set of inputs\r\n//     function handleAddInput() {\r\n//         setInputs([...inputs, { refAr: '', quantité: '', price: 0 }]);\r\n//     }\r\n\r\n//     return (\r\n//         <div className='container mt-5'>\r\n//             <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Nom du client</label>\r\n//                         <input type='text' placeholder='Entrez le nom du client' className='form-control'\r\n//                             onChange={e => setClient(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Date</label>\r\n//                         <input type=\"date\" className='form-control'\r\n//                             onChange={e => setDate(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Code de la facture</label>\r\n//                         <input type='text' placeholder='Entrez le code de la facture' className='form-control'\r\n//                             onChange={e => setCode(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Référence d'article</label>\r\n//                         <input\r\n//                             list=\"references\"\r\n//                             className='form-control'\r\n//                             placeholder=\"Select or type reference...\"\r\n//                             value={inputs[0].refAr}\r\n//                             onChange={(e) => handleReferenceChange(e, 0)}\r\n//                         />\r\n//                         <datalist id=\"references\">\r\n//                             {references.map((reference, index) => (\r\n//                                 <option key={index} value={reference.refAr} />\r\n//                             ))}\r\n//                         </datalist>\r\n//                     </div>\r\n//                 </div>\r\n//                 {inputs.map((input, index) => (\r\n//                     <div className=\"row mb-3\" key={index}>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Référence d'article</label>\r\n//                             <input\r\n//                                 list=\"references\"\r\n//                                 className='form-control'\r\n//                                 placeholder=\"Select or type reference...\"\r\n//                                 value={input.refAr}\r\n//                                 onChange={(e) => handleReferenceChange(e, index)}\r\n//                             />\r\n//                             <datalist id=\"references\">\r\n//                                 {references.map((reference, idx) => (\r\n//                                     <option key={idx} value={reference.refAr} />\r\n//                                 ))}\r\n//                             </datalist>\r\n//                         </div>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Prix Article</label>\r\n//                             <input type='number' placeholder=\"Prix d'article\" className='form-control'\r\n//                                 value={input.price}\r\n//                                 onChange={(e) => handleReferenceChange(e, index)} // Changed here\r\n//                             />\r\n//                         </div>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Quantité</label>\r\n//                             <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\r\n//                                 value={input.quantité}\r\n//                                 onChange={(e) => handleQuantityChange(e, index)}\r\n//                             />\r\n//                         </div>\r\n//                     </div>\r\n//                 ))}\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Total</label>\r\n//                         <input type='number' placeholder='Total de la facture' className='form-control'\r\n//                             value={inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0)}\r\n//                             disabled\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <button type=\"button\" className='btn btn-success' onClick={handleAddInput}>Ajouter</button>\r\n//                 <button type=\"submit\" className='btn btn-primary'>Enregistrer</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}