{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\CreateFactureVente.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import axios from 'axios';\n\n// function CreateFactureVente({ selectedFacture }) {\n//     const [clName, setClName] = useState('');\n//     const [client_id, setClientCode] = useState('');\n//     const [date, setDate] = useState('');\n//     const [DT, setDT] = useState('1.000');\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//     const [references, setReferences] = useState([]);\n//     const [filteredClients, setFilteredClients] = useState([]);\n\n//     const remiseInputRef = useRef(null);\n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/article')\n//           .then(res => {\n//             setReferences(res.data.map(article => article.ref));\n//           })\n//           .catch(err => console.log('Error fetching articles:', err));\n//       }, []);\n\n//       useEffect(() => {\n//         if (selectedFacture) {\n//           console.log('Selected Facture in CreateFactureVente:', selectedFacture);\n//           setClName(selectedFacture.clName || '');\n//           setClientCode(selectedFacture.client_id || '');\n//           setDate(selectedFacture.date || '');\n//           setDT(selectedFacture.DT || '1.000');\n//           setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//         }\n//       }, [selectedFacture]);\n\n//     const fetchPriceByReference = (reference, index) => {\n//         axios.get(`http://localhost:7777/factureVente/${reference}`)\n//             .then(res => {\n//                 const price = res.data.price;\n//                 const newInputs = [...inputs];\n//                 newInputs[index].price = price;\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.log('Error fetching price:', err));\n//     };\n\n//     const handleReferenceChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].refAr = value;\n//         setInputs(newInputs);\n//         fetchPriceByReference(value, index);\n//     };\n\n//     const handleRemiseChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].remise = value;\n//         setInputs(newInputs);\n//     };\n\n//     const handleQuantityChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].quantité = value;\n\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//             .then(res => {\n//                 const availableQuantity = res.data.quantity;\n//                 const remainingQuantity = availableQuantity - parseInt(value);\n\n//                 if (remainingQuantity < 0) {\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//                     newInputs[index].quantité = availableQuantity;\n//                 }\n\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.error('Error fetching quantity:', err));\n\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\n//         console.log(\"New Total:\", newTotal);\n//     };\n\n//     const handleAddInput = () => {\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n//         if (isEmpty) {\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n//             return;\n//         }\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\n//     };\n\n//     const calculateTotal = () => {\n//         if (!inputs) return 0; \n//         const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT); \n//         return total.toFixed(3); \n//     };\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//         if (invalidReference) {\n//             alert(\"Sélectionner une référence valide\");\n//             return;\n//         }\n\n//         const totalPrice = calculateTotal();\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\n//             clName,\n//             client_id,\n//             date,\n//             DT,\n//             refAr: nonEmptyInputs.map(input => input.refAr),\n//             quantité: nonEmptyInputs.map(input => input.quantité),\n//             remise: nonEmptyInputs.map(input => input.remise),\n//             totalPrice\n//         })\n//         .then(res => {\n//             console.log(res);\n//             window.location.reload();\n//         })\n//         .catch(err => console.log('Error creating facture:', err));\n//     };\n\n//     const handleKeyPress = (event) => {\n//         if (event.key === 'Enter') {\n//             handleAddInput();\n//         }\n//     };\n\n//     const handleClientSelect = (name, code) => {\n//         setClName(name);\n//         setClientCode(code);\n//         setFilteredClients([]);\n//     };\n\n//     const handleClientChange = (e) => {\n//         const { value } = e.target;\n//         setClName(value);\n\n//         axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//             .then(res => {\n//                 setFilteredClients(res.data);\n//             })\n//             .catch(err => console.log('Error fetching clients:', err));\n\n//         axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//             .then(res => {\n//                 if (res.data.length > 0) {\n//                     setClientCode(res.data[0].clID);\n//                 } else {\n//                     setClientCode('');\n//                 }\n//             })\n//             .catch(err => console.log('Error fetching client code:', err));\n//     };\n\n//     const handleClientBlur = () => {\n//         setFilteredClients([]);\n//     };\n\n//     const handleClientCodeChange = (e) => {\n//         const { value } = e.target;\n//         setClientCode(value);\n\n//         axios.get(`http://localhost:7777/clients/search?id=${value}`)\n//             .then(res => {\n//                 if (res.data.length > 0) {\n//                     setClName(res.data[0].clName);\n//                 } else {\n//                     setClName('');\n//                 }\n//             })\n//             .catch(err => console.log('Error fetching client name:', err));\n//     };\n\n//     return (\n//         <div style={{ margin: '20px', justifyContent: 'center' }}>\n//           <div style={{ display: 'flex', flex: '1' }}>\n//             <div>\n//               <div style={{ marginBottom: '20px' }}>\n//                 <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\n//                 <input\n//                   style={{ width: '200px' }}\n//                   type=\"text\"\n//                   id=\"code-client\"\n//                   name=\"code-client\"\n//                   value={client_id}\n//                   onChange={handleClientCodeChange}\n//                 />\n//               </div>\n//               <div style={{ marginBottom: '20px', position: 'relative' }}>\n//                 <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\n//                 <input\n//                   style={{ width: '200px' }}\n//                   type=\"text\"\n//                   id=\"client\"\n//                   value={clName}\n//                   onChange={handleClientChange}\n//                   onBlur={handleClientBlur}\n//                 />\n//                 {filteredClients.length > 0 && (\n//                   <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\n//                     {filteredClients.map((client, index) => (\n//                       <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\n//                         {client.clName}\n//                       </div>\n//                     ))}\n//                   </div>\n//                 )}\n//               </div>\n//               <div style={{ marginBottom: '20px' }}>\n//                 <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\n//                 <input\n//                   style={{ width: '200px' }}\n//                   type=\"date\"\n//                   id=\"date\"\n//                   value={date}\n//                   onChange={(e) => setDate(e.target.value)}\n//                 />\n//               </div>\n//               <div style={{ marginBottom: '20px' }}>\n//                 <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\n//                 <input\n//                   style={{ width: '200px' }}\n//                   type=\"text\"\n//                   id=\"DT\"\n//                   value={DT}\n//                   onChange={(e) => setDT(e.target.value)}\n//                 />\n//               </div>\n//             </div>\n//             <div>\n//               {inputs.map((input, index) => (\n//                 <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                   <div style={{ flex: '1', marginRight: '10px' }}>\n//                     <label>Référence d'article</label>\n//                     <input\n//                       list=\"references\"\n//                       style={{ width: '100%' }}\n//                       value={input.refAr}\n//                       onChange={(e) => handleReferenceChange(e, index)}\n//                     />\n//                     <datalist id=\"references\">\n//                       {references.map((reference, idx) => (\n//                         <option key={idx} value={reference} />\n//                       ))}\n//                     </datalist>\n//                   </div>\n//                   <div style={{ flex: '1', marginRight: '10px' }}>\n//                     <label>Prix vente TTC</label>\n//                     <input\n//                       type=\"number\"\n//                       style={{ width: '100%' }}\n//                       value={input.price}\n//                       readOnly\n//                     />\n//                   </div>\n//                   <div style={{ flex: '1', marginRight: '10px' }}>\n//                     <label>Quantité</label>\n//                     <input\n//                       type=\"number\"\n//                       style={{ width: '100%' }}\n//                       value={input.quantité}\n//                       onChange={(e) => handleQuantityChange(e, index)}\n//                     />\n//                   </div>\n//                   <div style={{ display: 'flex', alignItems: 'center' }}>\n//                     <div style={{ flex: '1' }}>\n//                       <label>Remise</label>\n//                       <input\n//                         type=\"number\"\n//                         style={{ width: '100%' }}\n//                         value={input.remise}\n//                         onChange={(e) => handleRemiseChange(e, index)}\n//                         onKeyDown={handleKeyPress}\n//                         ref={remiseInputRef}\n//                       />\n//                     </div>\n//                     <div style={{ marginLeft: '10px' }}>\n//                       <button type=\"button\" onClick={handleAddInput}>+</button>\n//                     </div>\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n//             <div>\n//               <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\n//                 <button\n//                   style={{ width: '200px', marginBottom: '10px' }}\n//                   type=\"button\"\n//                   onClick={handleAddInput}\n//                 >\n//                   Ajouter\n//                 </button>\n//                 <button\n//                   style={{ width: '200px', marginBottom: '10px' }}\n//                   type=\"submit\"\n//                   onClick={handleSubmit}\n//                 >\n//                   Enregistrer\n//                 </button><br />\n//                 <button\n//                   style={{ width: '200px', marginBottom: '10px' }}\n//                   type=\"button\"\n//                 >\n//                   Supprimer\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//           <div style={{ marginBottom: '20px' }}>\n//             <label>Total</label>\n//             <input\n//               type=\"text\"\n//               style={{ width: '100%' }}\n//               value={calculateTotal()}\n//               readOnly\n//             />\n//           </div>\n//         </div>\n//       );\n//     }\n\n//     export default CreateFactureVente;\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateFactureVente({\n  selectedFacture\n}) {\n  _s();\n  const [clName, setClName] = useState('');\n  const [client_id, setClientCode] = useState('');\n  const [date, setDate] = useState('');\n  const [DT, setDT] = useState('1.000');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0,\n    remise: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const remiseInputRef = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:7777/article').then(res => {\n      setReferences(res.data.map(article => article.ref));\n    }).catch(err => console.log('Error fetching articles:', err));\n  }, []);\n  useEffect(() => {\n    if (selectedFacture) {\n      console.log('Selected Facture in CreateFactureVente:', selectedFacture);\n      setClName(selectedFacture.clName || '');\n      setClientCode(selectedFacture.client_id || '');\n      setDate(selectedFacture.date || '');\n      setDT(selectedFacture.DT || '1.000');\n      setInputs(selectedFacture.articles.map(article => ({\n        refAr: article.refAr,\n        quantité: article.quantité,\n        price: 0,\n        // Set price as 0 initially, you'll need to fetch the actual price from your API\n        remise: article.remise || 0\n      })));\n    }\n  }, [selectedFacture]);\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/factureVente/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log('Error fetching price:', err));\n  };\n  const handleReferenceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n    fetchPriceByReference(value, index);\n  };\n  const handleRemiseChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].remise = value;\n    setInputs(newInputs);\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].quantité = value;\n    setInputs(newInputs);\n  };\n  const handleAddInput = () => {\n    setInputs([...inputs, {\n      refAr: '',\n      quantité: '',\n      price: 0,\n      remise: 0\n    }]);\n  };\n  const handleRemoveInput = index => {\n    const newInputs = [...inputs];\n    newInputs.splice(index, 1);\n    setInputs(newInputs);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newFacture = {\n      clName,\n      client_id,\n      date,\n      DT,\n      articles: inputs\n    };\n    axios.post('http://localhost:7777/factureVente/', newFacture).then(res => {\n      console.log('Facture created:', res.data);\n    }).catch(err => console.log('Error creating facture:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"clName\",\n        className: \"form-label\",\n        children: \"Nom du client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"clName\",\n        value: clName,\n        onChange: e => setClName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"client_id\",\n        className: \"form-label\",\n        children: \"Code client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"client_id\",\n        value: client_id,\n        onChange: e => setClientCode(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        className: \"form-label\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"form-control\",\n        id: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"DT\",\n        className: \"form-label\",\n        children: \"DT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"DT\",\n        value: DT,\n        onChange: e => setDT(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this), inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `refAr-${index}`,\n        className: \"form-label\",\n        children: \"R\\xE9f\\xE9rence article\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: `refAr-${index}`,\n        value: input.refAr,\n        onChange: e => handleReferenceChange(e, index),\n        list: \"referenceOptions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"referenceOptions\",\n        children: references.map((ref, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: ref\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `quantité-${index}`,\n        className: \"form-label\",\n        children: \"Quantit\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        id: `quantité-${index}`,\n        value: input.quantité,\n        onChange: e => handleQuantityChange(e, index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `price-${index}`,\n        className: \"form-label\",\n        children: \"Prix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        id: `price-${index}`,\n        value: input.price,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `remise-${index}`,\n        className: \"form-label\",\n        children: \"Remise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        id: `remise-${index}`,\n        value: input.remise,\n        onChange: e => handleRemiseChange(e, index),\n        ref: remiseInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger mt-2\",\n        onClick: () => handleRemoveInput(index),\n        children: \"Supprimer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary mt-2\",\n      onClick: handleAddInput,\n      children: \"Ajouter un article\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success mt-2\",\n      children: \"Cr\\xE9er Facture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 427,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateFactureVente, \"EpEI49D7RdxO7iDt8WAySoRpXQA=\");\n_c = CreateFactureVente;\nexport default CreateFactureVente;\nvar _c;\n$RefreshReg$(_c, \"CreateFactureVente\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","CreateFactureVente","selectedFacture","_s","clName","setClName","client_id","setClientCode","date","setDate","DT","setDT","inputs","setInputs","refAr","quantité","price","remise","references","setReferences","filteredClients","setFilteredClients","remiseInputRef","get","then","res","data","map","article","ref","catch","err","console","log","articles","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","event","value","target","handleRemiseChange","handleQuantityChange","handleAddInput","handleRemoveInput","splice","handleSubmit","preventDefault","newFacture","post","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","e","input","list","i","readOnly","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureVente.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function CreateFactureVente({ selectedFacture }) {\r\n//     const [clName, setClName] = useState('');\r\n//     const [client_id, setClientCode] = useState('');\r\n//     const [date, setDate] = useState('');\r\n//     const [DT, setDT] = useState('1.000');\r\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//     const [references, setReferences] = useState([]);\r\n//     const [filteredClients, setFilteredClients] = useState([]);\r\n    \r\n//     const remiseInputRef = useRef(null);\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/article')\r\n//           .then(res => {\r\n//             setReferences(res.data.map(article => article.ref));\r\n//           })\r\n//           .catch(err => console.log('Error fetching articles:', err));\r\n//       }, []);\r\n    \r\n//       useEffect(() => {\r\n//         if (selectedFacture) {\r\n//           console.log('Selected Facture in CreateFactureVente:', selectedFacture);\r\n//           setClName(selectedFacture.clName || '');\r\n//           setClientCode(selectedFacture.client_id || '');\r\n//           setDate(selectedFacture.date || '');\r\n//           setDT(selectedFacture.DT || '1.000');\r\n//           setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//         }\r\n//       }, [selectedFacture]);\r\n\r\n//     const fetchPriceByReference = (reference, index) => {\r\n//         axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n//             .then(res => {\r\n//                 const price = res.data.price;\r\n//                 const newInputs = [...inputs];\r\n//                 newInputs[index].price = price;\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.log('Error fetching price:', err));\r\n//     };\r\n\r\n//     const handleReferenceChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].refAr = value;\r\n//         setInputs(newInputs);\r\n//         fetchPriceByReference(value, index);\r\n//     };\r\n\r\n//     const handleRemiseChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].remise = value;\r\n//         setInputs(newInputs);\r\n//     };\r\n\r\n//     const handleQuantityChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].quantité = value;\r\n\r\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//             .then(res => {\r\n//                 const availableQuantity = res.data.quantity;\r\n//                 const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n//                 if (remainingQuantity < 0) {\r\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//                     newInputs[index].quantité = availableQuantity;\r\n//                 }\r\n\r\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.error('Error fetching quantity:', err));\r\n            \r\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\r\n//         console.log(\"New Total:\", newTotal);\r\n//     };\r\n\r\n//     const handleAddInput = () => {\r\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n//         if (isEmpty) {\r\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n//             return;\r\n//         }\r\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n//     };\r\n\r\n//     const calculateTotal = () => {\r\n//         if (!inputs) return 0; \r\n//         const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT); \r\n//         return total.toFixed(3); \r\n//     };\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n    \r\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n    \r\n//         if (invalidReference) {\r\n//             alert(\"Sélectionner une référence valide\");\r\n//             return;\r\n//         }\r\n    \r\n//         const totalPrice = calculateTotal();\r\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//             clName,\r\n//             client_id,\r\n//             date,\r\n//             DT,\r\n//             refAr: nonEmptyInputs.map(input => input.refAr),\r\n//             quantité: nonEmptyInputs.map(input => input.quantité),\r\n//             remise: nonEmptyInputs.map(input => input.remise),\r\n//             totalPrice\r\n//         })\r\n//         .then(res => {\r\n//             console.log(res);\r\n//             window.location.reload();\r\n//         })\r\n//         .catch(err => console.log('Error creating facture:', err));\r\n//     };\r\n\r\n//     const handleKeyPress = (event) => {\r\n//         if (event.key === 'Enter') {\r\n//             handleAddInput();\r\n//         }\r\n//     };\r\n\r\n//     const handleClientSelect = (name, code) => {\r\n//         setClName(name);\r\n//         setClientCode(code);\r\n//         setFilteredClients([]);\r\n//     };\r\n\r\n//     const handleClientChange = (e) => {\r\n//         const { value } = e.target;\r\n//         setClName(value);\r\n\r\n//         axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//             .then(res => {\r\n//                 setFilteredClients(res.data);\r\n//             })\r\n//             .catch(err => console.log('Error fetching clients:', err));\r\n\r\n//         axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//             .then(res => {\r\n//                 if (res.data.length > 0) {\r\n//                     setClientCode(res.data[0].clID);\r\n//                 } else {\r\n//                     setClientCode('');\r\n//                 }\r\n//             })\r\n//             .catch(err => console.log('Error fetching client code:', err));\r\n//     };\r\n\r\n//     const handleClientBlur = () => {\r\n//         setFilteredClients([]);\r\n//     };\r\n\r\n//     const handleClientCodeChange = (e) => {\r\n//         const { value } = e.target;\r\n//         setClientCode(value);\r\n\r\n//         axios.get(`http://localhost:7777/clients/search?id=${value}`)\r\n//             .then(res => {\r\n//                 if (res.data.length > 0) {\r\n//                     setClName(res.data[0].clName);\r\n//                 } else {\r\n//                     setClName('');\r\n//                 }\r\n//             })\r\n//             .catch(err => console.log('Error fetching client name:', err));\r\n//     };\r\n\r\n//     return (\r\n//         <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n//           <div style={{ display: 'flex', flex: '1' }}>\r\n//             <div>\r\n//               <div style={{ marginBottom: '20px' }}>\r\n//                 <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\r\n//                 <input\r\n//                   style={{ width: '200px' }}\r\n//                   type=\"text\"\r\n//                   id=\"code-client\"\r\n//                   name=\"code-client\"\r\n//                   value={client_id}\r\n//                   onChange={handleClientCodeChange}\r\n//                 />\r\n//               </div>\r\n//               <div style={{ marginBottom: '20px', position: 'relative' }}>\r\n//                 <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n//                 <input\r\n//                   style={{ width: '200px' }}\r\n//                   type=\"text\"\r\n//                   id=\"client\"\r\n//                   value={clName}\r\n//                   onChange={handleClientChange}\r\n//                   onBlur={handleClientBlur}\r\n//                 />\r\n//                 {filteredClients.length > 0 && (\r\n//                   <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\r\n//                     {filteredClients.map((client, index) => (\r\n//                       <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\r\n//                         {client.clName}\r\n//                       </div>\r\n//                     ))}\r\n//                   </div>\r\n//                 )}\r\n//               </div>\r\n//               <div style={{ marginBottom: '20px' }}>\r\n//                 <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n//                 <input\r\n//                   style={{ width: '200px' }}\r\n//                   type=\"date\"\r\n//                   id=\"date\"\r\n//                   value={date}\r\n//                   onChange={(e) => setDate(e.target.value)}\r\n//                 />\r\n//               </div>\r\n//               <div style={{ marginBottom: '20px' }}>\r\n//                 <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\r\n//                 <input\r\n//                   style={{ width: '200px' }}\r\n//                   type=\"text\"\r\n//                   id=\"DT\"\r\n//                   value={DT}\r\n//                   onChange={(e) => setDT(e.target.value)}\r\n//                 />\r\n//               </div>\r\n//             </div>\r\n//             <div>\r\n//               {inputs.map((input, index) => (\r\n//                 <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//                   <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                     <label>Référence d'article</label>\r\n//                     <input\r\n//                       list=\"references\"\r\n//                       style={{ width: '100%' }}\r\n//                       value={input.refAr}\r\n//                       onChange={(e) => handleReferenceChange(e, index)}\r\n//                     />\r\n//                     <datalist id=\"references\">\r\n//                       {references.map((reference, idx) => (\r\n//                         <option key={idx} value={reference} />\r\n//                       ))}\r\n//                     </datalist>\r\n//                   </div>\r\n//                   <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                     <label>Prix vente TTC</label>\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       style={{ width: '100%' }}\r\n//                       value={input.price}\r\n//                       readOnly\r\n//                     />\r\n//                   </div>\r\n//                   <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                     <label>Quantité</label>\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       style={{ width: '100%' }}\r\n//                       value={input.quantité}\r\n//                       onChange={(e) => handleQuantityChange(e, index)}\r\n//                     />\r\n//                   </div>\r\n//                   <div style={{ display: 'flex', alignItems: 'center' }}>\r\n//                     <div style={{ flex: '1' }}>\r\n//                       <label>Remise</label>\r\n//                       <input\r\n//                         type=\"number\"\r\n//                         style={{ width: '100%' }}\r\n//                         value={input.remise}\r\n//                         onChange={(e) => handleRemiseChange(e, index)}\r\n//                         onKeyDown={handleKeyPress}\r\n//                         ref={remiseInputRef}\r\n//                       />\r\n//                     </div>\r\n//                     <div style={{ marginLeft: '10px' }}>\r\n//                       <button type=\"button\" onClick={handleAddInput}>+</button>\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//             <div>\r\n//               <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\r\n//                 <button\r\n//                   style={{ width: '200px', marginBottom: '10px' }}\r\n//                   type=\"button\"\r\n//                   onClick={handleAddInput}\r\n//                 >\r\n//                   Ajouter\r\n//                 </button>\r\n//                 <button\r\n//                   style={{ width: '200px', marginBottom: '10px' }}\r\n//                   type=\"submit\"\r\n//                   onClick={handleSubmit}\r\n//                 >\r\n//                   Enregistrer\r\n//                 </button><br />\r\n//                 <button\r\n//                   style={{ width: '200px', marginBottom: '10px' }}\r\n//                   type=\"button\"\r\n//                 >\r\n//                   Supprimer\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <div style={{ marginBottom: '20px' }}>\r\n//             <label>Total</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               style={{ width: '100%' }}\r\n//               value={calculateTotal()}\r\n//               readOnly\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//       );\r\n//     }\r\n    \r\n//     export default CreateFactureVente;\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CreateFactureVente({ selectedFacture }) {\r\n  const [clName, setClName] = useState('');\r\n  const [client_id, setClientCode] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [DT, setDT] = useState('1.000');\r\n  const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n  const [references, setReferences] = useState([]);\r\n  const [filteredClients, setFilteredClients] = useState([]);\r\n  const remiseInputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:7777/article')\r\n      .then(res => {\r\n        setReferences(res.data.map(article => article.ref));\r\n      })\r\n      .catch(err => console.log('Error fetching articles:', err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedFacture) {\r\n      console.log('Selected Facture in CreateFactureVente:', selectedFacture);\r\n      setClName(selectedFacture.clName || '');\r\n      setClientCode(selectedFacture.client_id || '');\r\n      setDate(selectedFacture.date || '');\r\n      setDT(selectedFacture.DT || '1.000');\r\n      setInputs(selectedFacture.articles.map(article => ({\r\n        refAr: article.refAr,\r\n        quantité: article.quantité,\r\n        price: 0, // Set price as 0 initially, you'll need to fetch the actual price from your API\r\n        remise: article.remise || 0\r\n      })));\r\n    }\r\n  }, [selectedFacture]);\r\n\r\n  const fetchPriceByReference = (reference, index) => {\r\n    axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n      .then(res => {\r\n        const price = res.data.price;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].price = price;\r\n        setInputs(newInputs);\r\n      })\r\n      .catch(err => console.log('Error fetching price:', err));\r\n  };\r\n\r\n  const handleReferenceChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].refAr = value;\r\n    setInputs(newInputs);\r\n    fetchPriceByReference(value, index);\r\n  };\r\n\r\n  const handleRemiseChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].remise = value;\r\n    setInputs(newInputs);\r\n  };\r\n\r\n  const handleQuantityChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].quantité = value;\r\n    setInputs(newInputs);\r\n  };\r\n\r\n  const handleAddInput = () => {\r\n    setInputs([...inputs, { refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n  };\r\n\r\n  const handleRemoveInput = (index) => {\r\n    const newInputs = [...inputs];\r\n    newInputs.splice(index, 1);\r\n    setInputs(newInputs);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newFacture = {\r\n      clName,\r\n      client_id,\r\n      date,\r\n      DT,\r\n      articles: inputs,\r\n    };\r\n    axios.post('http://localhost:7777/factureVente/', newFacture)\r\n      .then(res => {\r\n        console.log('Facture created:', res.data);\r\n      })\r\n      .catch(err => console.log('Error creating facture:', err));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"clName\" className=\"form-label\">Nom du client</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"clName\"\r\n          value={clName}\r\n          onChange={(e) => setClName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"client_id\" className=\"form-label\">Code client</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"client_id\"\r\n          value={client_id}\r\n          onChange={(e) => setClientCode(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"date\" className=\"form-label\">Date</label>\r\n        <input\r\n          type=\"date\"\r\n          className=\"form-control\"\r\n          id=\"date\"\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"DT\" className=\"form-label\">DT</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"DT\"\r\n          value={DT}\r\n          onChange={(e) => setDT(e.target.value)}\r\n        />\r\n      </div>\r\n      {inputs.map((input, index) => (\r\n        <div key={index} className=\"mb-3\">\r\n          <label htmlFor={`refAr-${index}`} className=\"form-label\">Référence article</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id={`refAr-${index}`}\r\n            value={input.refAr}\r\n            onChange={(e) => handleReferenceChange(e, index)}\r\n            list=\"referenceOptions\"\r\n          />\r\n          <datalist id=\"referenceOptions\">\r\n            {references.map((ref, i) => (\r\n              <option key={i} value={ref} />\r\n            ))}\r\n          </datalist>\r\n          <label htmlFor={`quantité-${index}`} className=\"form-label\">Quantité</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id={`quantité-${index}`}\r\n            value={input.quantité}\r\n            onChange={(e) => handleQuantityChange(e, index)}\r\n          />\r\n          <label htmlFor={`price-${index}`} className=\"form-label\">Prix</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id={`price-${index}`}\r\n            value={input.price}\r\n            readOnly\r\n          />\r\n          <label htmlFor={`remise-${index}`} className=\"form-label\">Remise</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id={`remise-${index}`}\r\n            value={input.remise}\r\n            onChange={(e) => handleRemiseChange(e, index)}\r\n            ref={remiseInputRef}\r\n          />\r\n          <button type=\"button\" className=\"btn btn-danger mt-2\" onClick={() => handleRemoveInput(index)}>Supprimer</button>\r\n        </div>\r\n      ))}\r\n      <button type=\"button\" className=\"btn btn-primary mt-2\" onClick={handleAddInput}>Ajouter un article</button>\r\n      <button type=\"submit\" className=\"btn btn-success mt-2\">Créer Facture</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CreateFactureVente;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}