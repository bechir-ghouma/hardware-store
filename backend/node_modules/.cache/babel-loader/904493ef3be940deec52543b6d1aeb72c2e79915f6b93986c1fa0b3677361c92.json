{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\CreateFactureVente.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function CreateFactureVente({ onAddFVente, onDelete, selectedFacture }) {\n//     const [client, setClient] = useState('');\n//     const [date, setDate] = useState('');\n//     const [code, setCode] = useState('');\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//     const [references, setReferences] = useState([]);\n//     const [telephone, setTelephone] = useState('');\n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/article')\n//             .then(res => {\n//                 setReferences(res.data.map(article => article.ref));\n//             })\n//             .catch(err => console.log('Error fetching articles:', err));\n//     }, []);\n\n//     const fetchPriceByReference = (reference, index) => {\n//         axios.get(`http://localhost:7777/factureVente/${reference}`) \n//             .then(res => {\n//                 const price = res.data.price;\n//                 const newInputs = [...inputs];\n//                 newInputs[index].price = price;\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.log('Error fetching price:', err));\n//     };\n\n//     const handleReferenceChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].refAr = value;\n//         setInputs(newInputs);\n//         fetchPriceByReference(value, index); \n//     };\n\n//     const handleRemiseChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].remise = value;\n//         setInputs(newInputs);\n//     };\n\n//     const handleQuantityChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].quantité = value;\n\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//             .then(res => {\n//                 const availableQuantity = res.data.quantity;\n//                 const remainingQuantity = availableQuantity - parseInt(value);\n\n//                 if (remainingQuantity < 0) {\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//                     newInputs[index].quantité = availableQuantity;\n//                 }\n\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.error('Error fetching quantity:', err));\n\n//         // Recalculate total\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0);\n//         console.log(\"New Total:\", newTotal);\n//     };\n\n//     const handleAddInput = () => {\n//         // Check if any previous input fields are empty\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n\n//         // If any previous input field is empty, display an alert\n//         if (isEmpty) {\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n//             return;\n//         }\n\n//         // If all previous input fields are filled, add a new input line\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\n//     };\n\n//     const calculateTotal = () => {\n//         return inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité)/100) * (100 - curr.remise), 0);\n//     };\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n\n//         // Filter out empty inputs before checking for invalid references\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//         if (invalidReference) {\n//             alert(\"Sélectionner une référence valide\");\n//             return;\n//         }\n\n//         const refArArray = [];\n//         const quantiteArray = [];\n//         const remiseArray = [];\n//         nonEmptyInputs.forEach(input => {\n//             refArArray.push(input.refAr);\n//             quantiteArray.push(input.quantité);\n//             remiseArray.push(input.remise);\n//         });\n\n//         const totalPrice = calculateTotal();\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\n//             client,\n//             date,\n//             code,\n//             refAr: refArArray,\n//             quantité: quantiteArray,\n//             remise: remiseArray,\n//             totalPrice\n//         })\n//             .then(res => {\n//                 console.log(res);\n//                 window.location.reload();\n//             })\n//             .catch(err => console.log('Error creating facture:', err))\n//     };\n\n//     return (\n//         <div style={{ margin: '20px', justifyContent: 'center' }}>\n//             <div style={{ display: 'flex', flex: '1' }}>\n//                 <div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"text\"\n//                             id=\"client\"\n//                             value={client}\n//                             onChange={(e) => setClient(e.target.value)}\n//                         />\n//                     </div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"date\"\n//                             id=\"date\"\n//                             value={date}\n//                             onChange={(e) => setDate(e.target.value)}\n//                         />\n//                     </div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"code\">Code facture</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"text\"\n//                             id=\"code\"\n//                             value={code}\n//                             onChange={(e) => setCode(e.target.value)}\n//                         />\n//                     </div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"telephone\">Téléphone</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"text\"\n//                             id=\"telephone\"\n//                             value={telephone}\n//                             onChange={(e) => setTelephone(e.target.value)}\n//                         />\n//                     </div>\n//                 </div>\n//                 <div>\n//                     <div>\n//                         {inputs.map((input, index) => (\n//     <div key={index} style={{ display: 'flex', marginBottom: '10px' }}>\n//         <div style={{ flex: '1', marginRight: '10px' }}>\n//             <label>Référence d'article</label>\n//             <input\n//                 list=\"references\"\n//                 style={{ width: '100%' }}\n//                 value={input.refAr}\n//                 onChange={(e) => handleReferenceChange(e, index)}\n//             />\n//             <datalist id=\"references\">\n//                 {references.map((reference, idx) => (\n//                     <option key={idx} value={reference} />\n//                 ))}\n//             </datalist>\n//         </div>\n//         <div style={{ flex: '1', marginRight: '10px' }}>\n//             <label>Prix vente TTC</label>\n//             <input\n//                 type=\"number\"\n//                 style={{ width: '100%' }}\n//                 value={input.price}\n//                 readOnly\n//             />\n//         </div>\n//         <div style={{ flex: '1', marginRight:'10px' }}>\n//             <label>Quantité</label>\n//             <input\n//                 type=\"number\"\n//                 style={{ width: '100%' }}\n//                 value={input.quantité}\n//                 onChange={(e) =>handleQuantityChange(e, index)}\n//             />\n//         </div>\n//         <div style={{ flex: '1' }}>\n//             <label>Remise</label>\n//             <input\n//                 type=\"number\"\n//                 style={{ width: '100%' }}\n//                 value={input.remise}\n//                 onChange={(e) => handleRemiseChange\n// (e, index)}\n//                                     />\n//                                 </div>\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </div>\n//                 <div>\n//                     <div>\n//                         <div style={{ display:\"inline-block\", marginBottom: '20px', textAlign: 'center'}}>\n//                             <button\n//                                 style={{ width: '200px', marginBottom: '10px' }}\n//                                 type=\"button\"\n//                                 onClick={handleAddInput}\n//                             >\n//                                 Ajouter\n//                             </button>\n//                             <button\n//                                 style={{ width: '200px', marginBottom: '10px' }}\n//                                 type=\"submit\"\n//                                 onClick={handleSubmit}\n//                             >\n//                                 Enregistrer\n//                             </button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>    \n//             <div style={{ marginBottom: '20px' }}>\n//                 <label>Total</label>\n//                 <input\n//                     type=\"number\"\n//                     style={{ width: '100%' }}\n//                     value={calculateTotal()}\n//                     readOnly\n//                 />\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default CreateFactureVente;\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport CreateFactureVente from './CreateFactureVente';\nimport './Article.css'; // Assuming you have this stylesheet for consistent styling\nimport { FaSearch } from \"react-icons/fa\";\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root'); // Set the root element for accessibility\n\nfunction FactureVente() {\n  _s();\n  const [fVente, setFVente] = useState([]);\n  const [selectedFacture, setSelectedFacture] = useState(null);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  useEffect(() => {\n    axios.get('http://localhost:7777/factureVente/').then(res => {\n      const formattedFVente = res.data.map(client => {\n        const date = new Date(client.date);\n        const options = {\n          timeZone: 'Africa/Tunis'\n        };\n        const formattedDate = date.toLocaleDateString('en-GB', options);\n        return {\n          ...client,\n          date: formattedDate\n        };\n      });\n      setFVente(formattedFVente);\n    }).catch(err => console.log(err));\n  }, []);\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:7777/factureVente/${id}`);\n      setFVente(fVente.filter(facture => facture.id !== id));\n      setSelectedFacture(null);\n      setSelectedRow(null);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const handleAddFVente = newFVente => {\n    setFVente([...fVente, newFVente]);\n    closeModal();\n  };\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n  const fetchFactureDetails = id => {\n    axios.get(`http://localhost:7777/factureVente/${id}`).then(res => {\n      setSelectedFacture(res.data);\n    }).catch(err => console.log(err));\n  };\n  const filteredFVente = fVente.filter(client => {\n    var _client$client, _client$client$toLowe, _client$refAr, _client$refAr$toLower;\n    return ((_client$client = client.client) === null || _client$client === void 0 ? void 0 : (_client$client$toLowe = _client$client.toLowerCase()) === null || _client$client$toLowe === void 0 ? void 0 : _client$client$toLowe.includes(searchQuery.toLowerCase())) || ((_client$refAr = client.refAr) === null || _client$refAr === void 0 ? void 0 : (_client$refAr$toLower = _client$refAr.toLowerCase()) === null || _client$refAr$toLower === void 0 ? void 0 : _client$refAr$toLower.includes(searchQuery.toLowerCase()));\n  });\n  const openModal = () => {\n    setSelectedFacture(null); // Clear the selected facture when opening the modal\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"article-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      className: \"btn btn-primary mb-3\",\n      children: \"Cr\\xE9er une nouvelle facture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      contentLabel: \"Cr\\xE9er une nouvelle facture\",\n      style: {\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n          width: '80%',\n          maxWidth: '800px'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        className: \"btn btn-secondary\",\n        children: \"Fermer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateFactureVente, {\n        onAddFVente: handleAddFVente,\n        selectedFacture: selectedFacture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4\",\n        children: \"Factures de vente :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Rechercher un client ou une r\\xE9f\\xE9rence...\",\n          value: searchQuery,\n          onChange: e => handleSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-group-text\",\n          children: /*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nom du client\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Ref Article\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantit\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredFVente.map((facture, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => {\n              setSelectedRow(index);\n              fetchFactureDetails(facture.id);\n            },\n            className: selectedRow === index ? 'table-active' : '',\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: facture.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: facture.client\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: facture.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: facture.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: facture.refAr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: facture.quantité\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 33\n            }, this)]\n          }, facture.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 9\n  }, this);\n}\n_s(FactureVente, \"rhQ2oHlUWhaA0ept14iIn+65Zt0=\");\n_c = FactureVente;\nexport default FactureVente;\nvar _c;\n$RefreshReg$(_c, \"FactureVente\");","map":{"version":3,"names":["React","useEffect","useState","axios","CreateFactureVente","FaSearch","Modal","jsxDEV","_jsxDEV","setAppElement","FactureVente","_s","fVente","setFVente","selectedFacture","setSelectedFacture","selectedRow","setSelectedRow","searchQuery","setSearchQuery","modalIsOpen","setModalIsOpen","get","then","res","formattedFVente","data","map","client","date","Date","options","timeZone","formattedDate","toLocaleDateString","catch","err","console","log","handleDelete","id","delete","filter","facture","handleAddFVente","newFVente","closeModal","handleSearch","query","fetchFactureDetails","filteredFVente","_client$client","_client$client$toLowe","_client$refAr","_client$refAr$toLower","toLowerCase","includes","refAr","openModal","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onRequestClose","contentLabel","style","content","top","left","right","bottom","marginRight","transform","width","maxWidth","onAddFVente","type","placeholder","value","onChange","e","target","index","cursor","code","quantité","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureVente.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function CreateFactureVente({ onAddFVente, onDelete, selectedFacture }) {\r\n//     const [client, setClient] = useState('');\r\n//     const [date, setDate] = useState('');\r\n//     const [code, setCode] = useState('');\r\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//     const [references, setReferences] = useState([]);\r\n//     const [telephone, setTelephone] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/article')\r\n//             .then(res => {\r\n//                 setReferences(res.data.map(article => article.ref));\r\n//             })\r\n//             .catch(err => console.log('Error fetching articles:', err));\r\n//     }, []);\r\n\r\n//     const fetchPriceByReference = (reference, index) => {\r\n//         axios.get(`http://localhost:7777/factureVente/${reference}`) \r\n//             .then(res => {\r\n//                 const price = res.data.price;\r\n//                 const newInputs = [...inputs];\r\n//                 newInputs[index].price = price;\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.log('Error fetching price:', err));\r\n//     };\r\n\r\n//     const handleReferenceChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].refAr = value;\r\n//         setInputs(newInputs);\r\n//         fetchPriceByReference(value, index); \r\n//     };\r\n\r\n//     const handleRemiseChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].remise = value;\r\n//         setInputs(newInputs);\r\n//     };\r\n    \r\n//     const handleQuantityChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].quantité = value;\r\n\r\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//             .then(res => {\r\n//                 const availableQuantity = res.data.quantity;\r\n//                 const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n//                 if (remainingQuantity < 0) {\r\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//                     newInputs[index].quantité = availableQuantity;\r\n//                 }\r\n\r\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.error('Error fetching quantity:', err));\r\n\r\n//         // Recalculate total\r\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0);\r\n//         console.log(\"New Total:\", newTotal);\r\n//     };\r\n    \r\n//     const handleAddInput = () => {\r\n//         // Check if any previous input fields are empty\r\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n\r\n//         // If any previous input field is empty, display an alert\r\n//         if (isEmpty) {\r\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n//             return;\r\n//         }\r\n\r\n//         // If all previous input fields are filled, add a new input line\r\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n//     };\r\n\r\n//     const calculateTotal = () => {\r\n//         return inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité)/100) * (100 - curr.remise), 0);\r\n//     };\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n\r\n//         // Filter out empty inputs before checking for invalid references\r\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n//         if (invalidReference) {\r\n//             alert(\"Sélectionner une référence valide\");\r\n//             return;\r\n//         }\r\n\r\n//         const refArArray = [];\r\n//         const quantiteArray = [];\r\n//         const remiseArray = [];\r\n//         nonEmptyInputs.forEach(input => {\r\n//             refArArray.push(input.refAr);\r\n//             quantiteArray.push(input.quantité);\r\n//             remiseArray.push(input.remise);\r\n//         });\r\n\r\n//         const totalPrice = calculateTotal();\r\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//             client,\r\n//             date,\r\n//             code,\r\n//             refAr: refArArray,\r\n//             quantité: quantiteArray,\r\n//             remise: remiseArray,\r\n//             totalPrice\r\n//         })\r\n//             .then(res => {\r\n//                 console.log(res);\r\n//                 window.location.reload();\r\n//             })\r\n//             .catch(err => console.log('Error creating facture:', err))\r\n//     };\r\n\r\n//     return (\r\n//         <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n//             <div style={{ display: 'flex', flex: '1' }}>\r\n//                 <div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"text\"\r\n//                             id=\"client\"\r\n//                             value={client}\r\n//                             onChange={(e) => setClient(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"date\"\r\n//                             id=\"date\"\r\n//                             value={date}\r\n//                             onChange={(e) => setDate(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"code\">Code facture</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"text\"\r\n//                             id=\"code\"\r\n//                             value={code}\r\n//                             onChange={(e) => setCode(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"telephone\">Téléphone</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"text\"\r\n//                             id=\"telephone\"\r\n//                             value={telephone}\r\n//                             onChange={(e) => setTelephone(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <div>\r\n//                     <div>\r\n//                         {inputs.map((input, index) => (\r\n//     <div key={index} style={{ display: 'flex', marginBottom: '10px' }}>\r\n//         <div style={{ flex: '1', marginRight: '10px' }}>\r\n//             <label>Référence d'article</label>\r\n//             <input\r\n//                 list=\"references\"\r\n//                 style={{ width: '100%' }}\r\n//                 value={input.refAr}\r\n//                 onChange={(e) => handleReferenceChange(e, index)}\r\n//             />\r\n//             <datalist id=\"references\">\r\n//                 {references.map((reference, idx) => (\r\n//                     <option key={idx} value={reference} />\r\n//                 ))}\r\n//             </datalist>\r\n//         </div>\r\n//         <div style={{ flex: '1', marginRight: '10px' }}>\r\n//             <label>Prix vente TTC</label>\r\n//             <input\r\n//                 type=\"number\"\r\n//                 style={{ width: '100%' }}\r\n//                 value={input.price}\r\n//                 readOnly\r\n//             />\r\n//         </div>\r\n//         <div style={{ flex: '1', marginRight:'10px' }}>\r\n//             <label>Quantité</label>\r\n//             <input\r\n//                 type=\"number\"\r\n//                 style={{ width: '100%' }}\r\n//                 value={input.quantité}\r\n//                 onChange={(e) =>handleQuantityChange(e, index)}\r\n//             />\r\n//         </div>\r\n//         <div style={{ flex: '1' }}>\r\n//             <label>Remise</label>\r\n//             <input\r\n//                 type=\"number\"\r\n//                 style={{ width: '100%' }}\r\n//                 value={input.remise}\r\n//                 onChange={(e) => handleRemiseChange\r\n// (e, index)}\r\n//                                     />\r\n//                                 </div>\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                 </div>\r\n//                 <div>\r\n//                     <div>\r\n//                         <div style={{ display:\"inline-block\", marginBottom: '20px', textAlign: 'center'}}>\r\n//                             <button\r\n//                                 style={{ width: '200px', marginBottom: '10px' }}\r\n//                                 type=\"button\"\r\n//                                 onClick={handleAddInput}\r\n//                             >\r\n//                                 Ajouter\r\n//                             </button>\r\n//                             <button\r\n//                                 style={{ width: '200px', marginBottom: '10px' }}\r\n//                                 type=\"submit\"\r\n//                                 onClick={handleSubmit}\r\n//                             >\r\n//                                 Enregistrer\r\n//                             </button>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>    \r\n//             <div style={{ marginBottom: '20px' }}>\r\n//                 <label>Total</label>\r\n//                 <input\r\n//                     type=\"number\"\r\n//                     style={{ width: '100%' }}\r\n//                     value={calculateTotal()}\r\n//                     readOnly\r\n//                 />\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport CreateFactureVente from './CreateFactureVente';\r\nimport './Article.css';  // Assuming you have this stylesheet for consistent styling\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root'); // Set the root element for accessibility\r\n\r\nfunction FactureVente() {\r\n    const [fVente, setFVente] = useState([]);\r\n    const [selectedFacture, setSelectedFacture] = useState(null);\r\n    const [selectedRow, setSelectedRow] = useState(null);\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7777/factureVente/')\r\n            .then(res => {\r\n                const formattedFVente = res.data.map(client => {\r\n                    const date = new Date(client.date);\r\n                    const options = { timeZone: 'Africa/Tunis' };\r\n                    const formattedDate = date.toLocaleDateString('en-GB', options);\r\n                    return {\r\n                        ...client,\r\n                        date: formattedDate\r\n                    };\r\n                });\r\n                setFVente(formattedFVente);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await axios.delete(`http://localhost:7777/factureVente/${id}`);\r\n            setFVente(fVente.filter(facture => facture.id !== id));\r\n            setSelectedFacture(null);\r\n            setSelectedRow(null);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const handleAddFVente = (newFVente) => {\r\n        setFVente([...fVente, newFVente]);\r\n        closeModal();\r\n    };\r\n\r\n    const handleSearch = (query) => {\r\n        setSearchQuery(query);\r\n    };\r\n\r\n    const fetchFactureDetails = (id) => {\r\n        axios.get(`http://localhost:7777/factureVente/${id}`)\r\n            .then(res => {\r\n                setSelectedFacture(res.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    const filteredFVente = fVente.filter(client => {\r\n        return (client.client?.toLowerCase()?.includes(searchQuery.toLowerCase()) || \r\n                client.refAr?.toLowerCase()?.includes(searchQuery.toLowerCase()));\r\n    });\r\n\r\n    const openModal = () => {\r\n        setSelectedFacture(null); // Clear the selected facture when opening the modal\r\n        setModalIsOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setModalIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className='article-container'>\r\n            <button onClick={openModal} className=\"btn btn-primary mb-3\">Créer une nouvelle facture</button>\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={closeModal}\r\n                contentLabel=\"Créer une nouvelle facture\"\r\n                style={{\r\n                    content: {\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        right: 'auto',\r\n                        bottom: 'auto',\r\n                        marginRight: '-50%',\r\n                        transform: 'translate(-50%, -50%)',\r\n                        width: '80%',\r\n                        maxWidth: '800px'\r\n                    }\r\n                }}\r\n            >\r\n                <button onClick={closeModal} className=\"btn btn-secondary\">Fermer</button>\r\n                <CreateFactureVente onAddFVente={handleAddFVente} selectedFacture={selectedFacture} />\r\n            </Modal>\r\n            <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                <h2 className=\"mb-4\">Factures de vente :</h2>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Rechercher un client ou une référence...\"\r\n                        value={searchQuery}\r\n                        onChange={(e) => handleSearch(e.target.value)}\r\n                    />\r\n                    <span className=\"input-group-text\"><FaSearch /></span>\r\n                </div>\r\n            </div>\r\n            <div className='table-responsive'>\r\n                <table className='table table-striped'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            <th>Nom du client</th>\r\n                            <th>Date</th>\r\n                            <th>Code</th>\r\n                            <th>Ref Article</th>\r\n                            <th>Quantité</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {filteredFVente.map((facture, index) => (\r\n                            <tr\r\n                                key={facture.id}\r\n                                onClick={() => {\r\n                                    setSelectedRow(index);\r\n                                    fetchFactureDetails(facture.id);\r\n                                }}\r\n                                className={selectedRow === index ? 'table-active' : ''}\r\n                                style={{ cursor: 'pointer' }}\r\n                            >\r\n                                <td>{facture.id}</td>\r\n                                <td>{facture.client}</td>\r\n                                <td>{facture.date}</td>\r\n                                <td>{facture.code}</td>\r\n                                <td>{facture.refAr}</td>\r\n                                <td>{facture.quantité}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FactureVente;\r\n\r\n"],"mappingslD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAO,eAAe,CAAC,CAAE;AACzB,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhCF,KAAK,CAACG,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;;AAE9B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAErDD,SAAS,CAAC,MAAM;IACZE,KAAK,CAACmB,GAAG,CAAC,qCAAqC,CAAC,CAC3CC,IAAI,CAACC,GAAG,IAAI;MACT,MAAMC,eAAe,GAAGD,GAAG,CAACE,IAAI,CAACC,GAAG,CAACC,MAAM,IAAI;QAC3C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,MAAM,CAACC,IAAI,CAAC;QAClC,MAAME,OAAO,GAAG;UAAEC,QAAQ,EAAE;QAAe,CAAC;QAC5C,MAAMC,aAAa,GAAGJ,IAAI,CAACK,kBAAkB,CAAC,OAAO,EAAEH,OAAO,CAAC;QAC/D,OAAO;UACH,GAAGH,MAAM;UACTC,IAAI,EAAEI;QACV,CAAC;MACL,CAAC,CAAC;MACFpB,SAAS,CAACY,eAAe,CAAC;IAC9B,CAAC,CAAC,CACDU,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAG,MAAOC,EAAE,IAAK;IAC/B,IAAI;MACA,MAAMrC,KAAK,CAACsC,MAAM,CAAE,sCAAqCD,EAAG,EAAC,CAAC;MAC9D3B,SAAS,CAACD,MAAM,CAAC8B,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACH,EAAE,KAAKA,EAAE,CAAC,CAAC;MACtDzB,kBAAkB,CAAC,IAAI,CAAC;MACxBE,cAAc,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOmB,GAAG,EAAE;MACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB;EACJ,CAAC;EAED,MAAMQ,eAAe,GAAIC,SAAS,IAAK;IACnChC,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEiC,SAAS,CAAC,CAAC;IACjCC,UAAU,CAAC,CAAC;EAChB,CAAC;EAED,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC5B7B,cAAc,CAAC6B,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,mBAAmB,GAAIT,EAAE,IAAK;IAChCrC,KAAK,CAACmB,GAAG,CAAE,sCAAqCkB,EAAG,EAAC,CAAC,CAChDjB,IAAI,CAACC,GAAG,IAAI;MACTT,kBAAkB,CAACS,GAAG,CAACE,IAAI,CAAC;IAChC,CAAC,CAAC,CACDS,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACvC,CAAC;EAED,MAAMc,cAAc,GAAGtC,MAAM,CAAC8B,MAAM,CAACd,MAAM,IAAI;IAAA,IAAAuB,cAAA,EAAAC,qBAAA,EAAAC,aAAA,EAAAC,qBAAA;IAC3C,OAAQ,EAAAH,cAAA,GAAAvB,MAAM,CAACA,MAAM,cAAAuB,cAAA,wBAAAC,qBAAA,GAAbD,cAAA,CAAeI,WAAW,CAAC,CAAC,cAAAH,qBAAA,uBAA5BA,qBAAA,CAA8BI,QAAQ,CAACtC,WAAW,CAACqC,WAAW,CAAC,CAAC,CAAC,OAAAF,aAAA,GACjEzB,MAAM,CAAC6B,KAAK,cAAAJ,aAAA,wBAAAC,qBAAA,GAAZD,aAAA,CAAcE,WAAW,CAAC,CAAC,cAAAD,qBAAA,uBAA3BA,qBAAA,CAA6BE,QAAQ,CAACtC,WAAW,CAACqC,WAAW,CAAC,CAAC,CAAC;EAC5E,CAAC,CAAC;EAEF,MAAMG,SAAS,GAAGA,CAAA,KAAM;IACpB3C,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1BM,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMyB,UAAU,GAAGA,CAAA,KAAM;IACrBzB,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,oBACIb,OAAA;IAAKmD,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9BpD,OAAA;MAAQqD,OAAO,EAAEH,SAAU;MAACC,SAAS,EAAC,sBAAsB;MAAAC,QAAA,EAAC;IAA0B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChGzD,OAAA,CAACF,KAAK;MACF4D,MAAM,EAAE9C,WAAY;MACpB+C,cAAc,EAAErB,UAAW;MAC3BsB,YAAY,EAAC,+BAA4B;MACzCC,KAAK,EAAE;QACHC,OAAO,EAAE;UACLC,GAAG,EAAE,KAAK;UACVC,IAAI,EAAE,KAAK;UACXC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdC,WAAW,EAAE,MAAM;UACnBC,SAAS,EAAE,uBAAuB;UAClCC,KAAK,EAAE,KAAK;UACZC,QAAQ,EAAE;QACd;MACJ,CAAE;MAAAlB,QAAA,gBAEFpD,OAAA;QAAQqD,OAAO,EAAEf,UAAW;QAACa,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1EzD,OAAA,CAACJ,kBAAkB;QAAC2E,WAAW,EAAEnC,eAAgB;QAAC9B,eAAe,EAAEA;MAAgB;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC,eACRzD,OAAA;MAAKmD,SAAS,EAAC,wDAAwD;MAAAC,QAAA,gBACnEpD,OAAA;QAAImD,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7CzD,OAAA;QAAKmD,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBpD,OAAA;UACIwE,IAAI,EAAC,MAAM;UACXrB,SAAS,EAAC,cAAc;UACxBsB,WAAW,EAAC,gDAA0C;UACtDC,KAAK,EAAEhE,WAAY;UACnBiE,QAAQ,EAAGC,CAAC,IAAKrC,YAAY,CAACqC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACFzD,OAAA;UAAMmD,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAACpD,OAAA,CAACH,QAAQ;YAAAyD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNzD,OAAA;MAAKmD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC7BpD,OAAA;QAAOmD,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClCpD,OAAA;UAAAoD,QAAA,eACIpD,OAAA;YAAAoD,QAAA,gBACIpD,OAAA;cAAAoD,QAAA,EAAI;YAAE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACXzD,OAAA;cAAAoD,QAAA,EAAI;YAAa;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtBzD,OAAA;cAAAoD,QAAA,EAAI;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbzD,OAAA;cAAAoD,QAAA,EAAI;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbzD,OAAA;cAAAoD,QAAA,EAAI;YAAW;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBzD,OAAA;cAAAoD,QAAA,EAAI;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACRzD,OAAA;UAAAoD,QAAA,EACKV,cAAc,CAACvB,GAAG,CAAC,CAACgB,OAAO,EAAE2C,KAAK,kBAC/B9E,OAAA;YAEIqD,OAAO,EAAEA,CAAA,KAAM;cACX5C,cAAc,CAACqE,KAAK,CAAC;cACrBrC,mBAAmB,CAACN,OAAO,CAACH,EAAE,CAAC;YACnC,CAAE;YACFmB,SAAS,EAAE3C,WAAW,KAAKsE,KAAK,GAAG,cAAc,GAAG,EAAG;YACvDjB,KAAK,EAAE;cAAEkB,MAAM,EAAE;YAAU,CAAE;YAAA3B,QAAA,gBAE7BpD,OAAA;cAAAoD,QAAA,EAAKjB,OAAO,CAACH;YAAE;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrBzD,OAAA;cAAAoD,QAAA,EAAKjB,OAAO,CAACf;YAAM;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACzBzD,OAAA;cAAAoD,QAAA,EAAKjB,OAAO,CAACd;YAAI;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvBzD,OAAA;cAAAoD,QAAA,EAAKjB,OAAO,CAAC6C;YAAI;cAAA1B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvBzD,OAAA;cAAAoD,QAAA,EAAKjB,OAAO,CAACc;YAAK;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxBzD,OAAA;cAAAoD,QAAA,EAAKjB,OAAO,CAAC8C;YAAQ;cAAA3B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAbtBtB,OAAO,CAACH,EAAE;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAcf,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACtD,EAAA,CA1IQD,YAAY;AAAAgF,EAAA,GAAZhF,YAAY;AA4IrB,eAAeA,YAAY;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}