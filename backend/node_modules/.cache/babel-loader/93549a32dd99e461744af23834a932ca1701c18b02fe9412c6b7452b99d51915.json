{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\CreateFactureVente.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import axios from 'axios';\n// import Modal from 'react-modal';\n\n// Modal.setAppElement('#root');\n\n// function CreateFactureVente({ onAddFVente, selectedFacture }) {\n//     const [client, setClient] = useState('');\n//     const [date, setDate] = useState('');\n//     const [DT, setDT] = useState('1.000');\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//     const [references, setReferences] = useState([]);\n//     const [clients, setClients] = useState([]);\n//     const [filteredClients, setFilteredClients] = useState([]);\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\n\n//     const remiseInputRef = useRef(null); // Ref for the Remise input field\n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/article')\n//             .then(res => {\n//                 setReferences(res.data.map(article => article.ref));\n//             })\n//             .catch(err => console.log('Error fetching articles:', err));\n//     }, []);\n\n//     useEffect(() => {\n//         if (selectedFacture) {\n//             setClient(selectedFacture.client || '');\n//             setDate(selectedFacture.date || '');\n//             setDT(selectedFacture.DT || '1.000');\n//             setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//             setModalIsOpen(true);\n//         }\n//     }, [selectedFacture]);\n\n//     const fetchPriceByReference = (reference, index) => {\n//         axios.get(`http://localhost:7777/factureVente/${reference}`)\n//             .then(res => {\n//                 const price = res.data.price;\n//                 const newInputs = [...inputs];\n//                 newInputs[index].price = price;\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.log('Error fetching price:', err));\n//     };\n\n//     const handleReferenceChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].refAr = value;\n//         setInputs(newInputs);\n//         fetchPriceByReference(value, index);\n//     };\n\n//     const handleRemiseChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].remise = value;\n//         setInputs(newInputs);\n//     };\n\n//     const handleQuantityChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].quantité = value;\n\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//             .then(res => {\n//                 const availableQuantity = res.data.quantity;\n//                 const remainingQuantity = availableQuantity - parseInt(value);\n\n//                 if (remainingQuantity < 0) {\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//                     newInputs[index].quantité = availableQuantity;\n//                 }\n\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.error('Error fetching quantity:', err));\n\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\n//         console.log(\"New Total:\", newTotal);\n//     };\n\n//     const handleAddInput = () => {\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n//         if (isEmpty) {\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n//             return;\n//         }\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\n//     };\n\n//     const calculateTotal = () => {\n//         if (!inputs) return 0; \n//         const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\n//         return total.toFixed(3); // Round to three decimal places\n//     };\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n\n//         // Filter out empty inputs before checking for invalid references\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//         if (invalidReference) {\n//             alert(\"Sélectionner une référence valide\");\n//             return;\n//         }\n\n//         const refArArray = [];\n//         const quantiteArray = [];\n//         const remiseArray = [];\n//         nonEmptyInputs.forEach(input => {\n//             refArArray.push(input.refAr);\n//             quantiteArray.push(input.quantité);\n//             remiseArray.push(input.remise);\n//         });\n\n//         const totalPrice = calculateTotal();\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\n//             client,\n//             date,\n//             DT,\n//             refAr: refArArray,\n//             quantité: quantiteArray,\n//             remise: remiseArray,\n//             totalPrice\n//         })\n//             .then(res => {\n//                 console.log(res);\n//                 window.location.reload();\n//             })\n//             .catch(err => console.log('Error creating facture:', err))\n//     };\n\n//     const handleKeyPress = (event) => {\n//         if (event.key === 'Enter') {\n//             handleAddInput();\n//         }\n//     };\n\n//     const handleClientChange = (e) => {\n//         const { value } = e.target;\n//         setClient(value);\n//         // Filter clients based on user input\n//         setFilteredClients(clients.filter(client => client.clName.toLowerCase().includes(value.toLowerCase())));\n//     };\n\n//     const handleClientSelect = (name) => {\n//         setClient(name);\n//         setFilteredClients([]);\n//     };\n\n//     return (\n//         <div style={{ margin: '20px', justifyContent: 'center' }}>\n//             <div style={{ display: 'flex', flex: '1' }}>\n//                 <div>\n//                 <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"text\"\n//                             id=\"code-client\"\n//                             name=\"code-client\"  \n//                         />\n//                     </div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"text\"\n//                             id=\"client\"\n//                             value={client}\n//                             onChange={handleClientChange}\n//                         />\n//                         {filteredClients.length > 0 && (\n//                             <ul style={{ listStyleType: 'none', padding: 0, margin: 0, position: 'absolute', zIndex: 1, backgroundColor: 'white', border: '1px solid #ccc', width: '200px' }}>\n//                                 {filteredClients.map((client, index) => (\n//                                     <li key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName)}>\n//                                         {client.clName}\n//                                     </li>\n//                                 ))}\n//                             </ul>\n//                         )}\n\n//                     </div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"date\"\n//                             id=\"date\"\n//                             value={date}\n//                             onChange={(e) => setDate(e.target.value)}\n//                         />\n//                     </div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"text\"\n//                             id=\"code\"\n//                             value={DT}\n//                             onChange={(e) => setDT(e.target.value)}\n//                             onBlur={handleQuantityChange} // Add onBlur event to trigger recalculation when \"Droit de timbre\" value changes\n//                         />\n//                     </div>\n//                 </div>\n//                 <div>\n//                     <div>\n//                         {inputs.map((input, index) => (\n//                             <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                                 <div style={{ flex: '1', marginRight: '10px' }}>\n//                                     <label>Référence d'article</label>\n//                                     <input\n//                                         list=\"references\"\n//                                         style={{ width: '100%' }}\n//                                         value={input.refAr}\n//                                         onChange={(e) => handleReferenceChange(e, index)}\n//                                     />\n//                                     <datalist id=\"references\">\n//                                         {references.map((reference, idx) => (\n//                                             <option key={idx} value={reference} />\n//                                         ))}\n//                                     </datalist>\n//                                 </div>\n//                                 <div style={{ flex: '1', marginRight: '10px' }}>\n//                                     <label>Prix vente TTC</label>\n//                                     <input\n//                                         type=\"number\"\n//                                         style={{ width: '100%' }}\n//                                         value={input.price}\n//                                         readOnly\n//                                     />\n//                                 </div>\n//                                 <div style={{ flex: '1', marginRight: '10px' }}>\n//                                     <label>Quantité</label>\n//                                     <input\n//                                         type=\"number\"\n//                                         style={{ width: '100%' }}\n//                                         value={input.quantité}\n//                                         onChange={(e) => handleQuantityChange(e, index)}\n//                                     />\n//                                 </div>\n//                                 <div style={{ display: 'flex', alignItems: 'center' }}>\n//                                     <div style={{ flex: '1' }}>\n//                                         <label>Remise</label>\n//                                         <input\n//                                             type=\"number\"\n//                                             style={{ width: '100%' }}\n//                                             value={input.remise}\n//                                             onChange={(e) => handleRemiseChange(e, index)}\n//                                             onKeyDown={handleKeyPress} // Call handleKeyPress on key press\n//                                             ref={remiseInputRef} // Set the ref for Remise input field\n//                                         />\n//                                     </div>\n//                                     <div style={{ marginLeft: '10px' }}>\n//                                         <button type=\"button\" onClick={handleAddInput}>+</button>\n//                                     </div>\n//                                 </div>\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </div>\n//                 <div>\n//                     <div>\n//                         <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\n//                             <button\n//                                 style={{ width: '200px', marginBottom: '10px' }}\n//                                 type=\"button\"\n//                                 onClick={handleAddInput}\n//                             >\n//                                 Ajouter\n//                             </button>\n//                             <button\n//                                 style={{ width: '200px', marginBottom: '10px' }}\n//                                 type=\"submit\"\n//                                 onClick={handleSubmit}\n//                             >\n//                                 Enregistrer\n//                             </button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//             <div style={{ marginBottom: '20px' }}>\n//                 <label>Total</label>\n//                 <input\n//                     type=\"text\" \n//                     style={{ width: '100%' }}\n//                     value={calculateTotal()}\n//                     readOnly\n//                 />\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default CreateFactureVente;\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateFactureVente({\n  selectedFacture\n}) {\n  _s();\n  const [clName, setClName] = useState('');\n  const [client_id, setClientCode] = useState('');\n  const [date, setDate] = useState('');\n  const [DT, setDT] = useState('1.000');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0,\n    remise: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(-1); // For keyboard navigation\n  const debounceTimer = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:7777/article').then(res => {\n      setReferences(res.data.map(article => article.ref));\n    }).catch(err => console.log('Error fetching articles:', err));\n  }, []);\n  useEffect(() => {\n    if (selectedFacture) {\n      setClName(selectedFacture.clName || '');\n      setClientCode(selectedFacture.client_id || '');\n      setDate(selectedFacture.date || '');\n      setDT(selectedFacture.DT || '1.000');\n      setInputs(selectedFacture.inputs || [{\n        refAr: '',\n        quantité: '',\n        price: 0,\n        remise: 0\n      }]);\n    }\n  }, [selectedFacture]);\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/factureVente/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log('Error fetching price:', err));\n  };\n  const handleReferenceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n    fetchPriceByReference(value, index);\n  };\n  const handleRemiseChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].remise = value;\n    setInputs(newInputs);\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].quantité = value;\n    axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`).then(res => {\n      const availableQuantity = res.data.quantity;\n      const remainingQuantity = availableQuantity - parseInt(value);\n      if (remainingQuantity < 0) {\n        alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n        newInputs[index].quantité = availableQuantity;\n      }\n      const remisePrice = newInputs[index].price * (1 - newInputs[index].remise / 100);\n      newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n      setInputs(newInputs);\n    }).catch(err => console.error('Error fetching quantity:', err));\n    const newTotal = newInputs.reduce((acc, curr) => acc + curr.price * curr.quantité, 0) + parseFloat(DT);\n    console.log(\"New Total:\", newTotal);\n  };\n  const handleAddInput = () => {\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n    if (isEmpty) {\n      alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n      return;\n    }\n    setInputs([...inputs, {\n      refAr: '',\n      price: 0,\n      quantité: '',\n      remise: 0\n    }]);\n  };\n  const calculateTotal = () => {\n    if (!inputs) return 0;\n    const total = inputs.reduce((acc, curr) => acc + curr.price * curr.quantité / 100 * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\n    return total.toFixed(3); // Round to three decimal places\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Filter out empty inputs before checking for invalid references\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n    if (invalidReference) {\n      alert(\"Sélectionner une référence valide\");\n      return;\n    }\n    const refArArray = [];\n    const quantiteArray = [];\n    const remiseArray = [];\n    nonEmptyInputs.forEach(input => {\n      refArArray.push(input.refAr);\n      quantiteArray.push(input.quantité);\n      remiseArray.push(input.remise);\n    });\n    const totalPrice = calculateTotal();\n    axios.post('http://localhost:7777/factureVente/createFac/', {\n      clName,\n      client_id,\n      date,\n      DT,\n      refAr: refArArray,\n      quantité: quantiteArray,\n      remise: remiseArray,\n      totalPrice\n    }).then(res => {\n      console.log(res);\n      window.location.reload();\n    }).catch(err => console.log('Error creating facture:', err));\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleAddInput();\n    }\n  };\n  const handleClientChange = e => {\n    const {\n      value\n    } = e.target;\n    setClName(value);\n    setLoading(true);\n    clearTimeout(debounceTimer.current);\n    debounceTimer.current = setTimeout(() => {\n      axios.get(`http://localhost:7777/clients/search?name=${value}`).then(res => {\n        setFilteredClients(res.data);\n        setLoading(false);\n      }).catch(err => {\n        console.log('Error fetching clients:', err);\n        setLoading(false);\n      });\n    }, 300); // 300ms debounce\n  };\n  const handleClientBlur = () => {\n    setTimeout(() => setFilteredClients([]), 200); // Delay clearing to allow selection\n  };\n  const handleClientSelect = (name, code) => {\n    setClName(name);\n    setClientCode(code);\n    setFilteredClients([]);\n  };\n  const handleClientKeyDown = e => {\n    if (e.key === 'ArrowDown') {\n      setSelectedIndex(prevIndex => Math.min(prevIndex + 1, filteredClients.length - 1));\n    } else if (e.key === 'ArrowUp') {\n      setSelectedIndex(prevIndex => Math.max(prevIndex - 1, 0));\n    } else if (e.key === 'Enter' && selectedIndex >= 0) {\n      handleClientSelect(filteredClients[selectedIndex].clName, filteredClients[selectedIndex].clID);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"code-client\",\n            className: \"form-label\",\n            children: \"Code client:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"code-client\",\n            className: \"form-control\",\n            value: client_id,\n            onChange: e => setClientCode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3 position-relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"client\",\n            className: \"form-label\",\n            children: \"Nom du client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"client\",\n            className: \"form-control\",\n            value: clName,\n            onChange: handleClientChange,\n            onBlur: handleClientBlur,\n            onKeyDown: handleClientKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary btn-sm\",\n            onClick: () => setClName(''),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 25\n          }, this), \" \", loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-border text-primary\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"visually-hidden\",\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 96\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 37\n          }, this), \" \", filteredClients.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group position-absolute w-100\",\n            children: filteredClients.map((client, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `list-group-item ${index === selectedIndex ? 'active' : ''}`,\n              onClick: () => handleClientSelect(client.clName, client.clID),\n              children: client.clName\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            className: \"form-label\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date\",\n            className: \"form-control\",\n            value: date,\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"DT\",\n            className: \"form-label\",\n            children: \"Droit de timbre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"DT\",\n            className: \"form-control\",\n            value: DT,\n            onChange: e => setDT(e.target.value),\n            onBlur: handleQuantityChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `reference-${index}`,\n              className: \"form-label\",\n              children: \"R\\xE9f\\xE9rence d'article\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              list: \"references\",\n              className: \"form-control\",\n              value: input.refAr,\n              onChange: e => handleReferenceChange(e, index),\n              id: `reference-${index}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n              id: \"references\",\n              children: references.map((reference, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: reference\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `price-${index}`,\n              className: \"form-label\",\n              children: \"Prix vente TTC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              value: input.price,\n              readOnly: true,\n              id: `price-${index}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `quantite-${index}`,\n              className: \"form-label\",\n              children: \"Quantit\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              value: input.quantité,\n              onChange: e => handleQuantityChange(e, index),\n              id: `quantite-${index}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `remise-${index}`,\n              className: \"form-label\",\n              children: \"Remise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              value: input.remise,\n              onChange: e => handleRemiseChange(e, index),\n              onKeyDown: handleKeyPress,\n              id: `remise-${index}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-1 d-flex align-items-end\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: handleAddInput,\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 d-flex justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-success me-2\",\n          onClick: handleAddInput,\n          children: \"Ajouter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: handleSubmit,\n          children: \"Enregistrer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"total\",\n        className: \"form-label\",\n        children: \"Total\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"total\",\n        value: calculateTotal(),\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 491,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateFactureVente, \"DGFe0cXUw8LLqU8zsKPqLJijZUc=\");\n_c = CreateFactureVente;\nexport default CreateFactureVente;\nvar _c;\n$RefreshReg$(_c, \"CreateFactureVente\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","CreateFactureVente","selectedFacture","_s","clName","setClName","client_id","setClientCode","date","setDate","DT","setDT","inputs","setInputs","refAr","quantité","price","remise","references","setReferences","filteredClients","setFilteredClients","loading","setLoading","selectedIndex","setSelectedIndex","debounceTimer","get","then","res","data","map","article","ref","catch","err","console","log","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","event","value","target","handleRemiseChange","handleQuantityChange","availableQuantity","quantity","remainingQuantity","parseInt","alert","remisePrice","parseFloat","toFixed","error","newTotal","reduce","acc","curr","handleAddInput","isEmpty","some","input","calculateTotal","total","handleSubmit","preventDefault","nonEmptyInputs","filter","invalidReference","includes","refArArray","quantiteArray","remiseArray","forEach","push","totalPrice","post","window","location","reload","handleKeyPress","key","handleClientChange","e","clearTimeout","current","setTimeout","handleClientBlur","handleClientSelect","name","code","handleClientKeyDown","prevIndex","Math","min","length","max","clID","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","onKeyDown","onClick","role","client","list","idx","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureVente.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import axios from 'axios';\r\n// import Modal from 'react-modal';\r\n\r\n// Modal.setAppElement('#root');\r\n\r\n// function CreateFactureVente({ onAddFVente, selectedFacture }) {\r\n//     const [client, setClient] = useState('');\r\n//     const [date, setDate] = useState('');\r\n//     const [DT, setDT] = useState('1.000');\r\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//     const [references, setReferences] = useState([]);\r\n//     const [clients, setClients] = useState([]);\r\n//     const [filteredClients, setFilteredClients] = useState([]);\r\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n//     const remiseInputRef = useRef(null); // Ref for the Remise input field\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/article')\r\n//             .then(res => {\r\n//                 setReferences(res.data.map(article => article.ref));\r\n//             })\r\n//             .catch(err => console.log('Error fetching articles:', err));\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         if (selectedFacture) {\r\n//             setClient(selectedFacture.client || '');\r\n//             setDate(selectedFacture.date || '');\r\n//             setDT(selectedFacture.DT || '1.000');\r\n//             setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//             setModalIsOpen(true);\r\n//         }\r\n//     }, [selectedFacture]);\r\n\r\n\r\n//     const fetchPriceByReference = (reference, index) => {\r\n//         axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n//             .then(res => {\r\n//                 const price = res.data.price;\r\n//                 const newInputs = [...inputs];\r\n//                 newInputs[index].price = price;\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.log('Error fetching price:', err));\r\n//     };\r\n\r\n//     const handleReferenceChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].refAr = value;\r\n//         setInputs(newInputs);\r\n//         fetchPriceByReference(value, index);\r\n//     };\r\n\r\n//     const handleRemiseChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].remise = value;\r\n//         setInputs(newInputs);\r\n//     };\r\n\r\n//     const handleQuantityChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].quantité = value;\r\n\r\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//             .then(res => {\r\n//                 const availableQuantity = res.data.quantity;\r\n//                 const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n//                 if (remainingQuantity < 0) {\r\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//                     newInputs[index].quantité = availableQuantity;\r\n//                 }\r\n\r\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.error('Error fetching quantity:', err));\r\n\r\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\r\n//         console.log(\"New Total:\", newTotal);\r\n//     };\r\n\r\n//     const handleAddInput = () => {\r\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n//         if (isEmpty) {\r\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n//             return;\r\n//         }\r\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n//     };\r\n\r\n//     const calculateTotal = () => {\r\n//         if (!inputs) return 0; \r\n//         const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\r\n//         return total.toFixed(3); // Round to three decimal places\r\n//     };\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n\r\n//         // Filter out empty inputs before checking for invalid references\r\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n//         if (invalidReference) {\r\n//             alert(\"Sélectionner une référence valide\");\r\n//             return;\r\n//         }\r\n\r\n//         const refArArray = [];\r\n//         const quantiteArray = [];\r\n//         const remiseArray = [];\r\n//         nonEmptyInputs.forEach(input => {\r\n//             refArArray.push(input.refAr);\r\n//             quantiteArray.push(input.quantité);\r\n//             remiseArray.push(input.remise);\r\n//         });\r\n\r\n//         const totalPrice = calculateTotal();\r\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//             client,\r\n//             date,\r\n//             DT,\r\n//             refAr: refArArray,\r\n//             quantité: quantiteArray,\r\n//             remise: remiseArray,\r\n//             totalPrice\r\n//         })\r\n//             .then(res => {\r\n//                 console.log(res);\r\n//                 window.location.reload();\r\n//             })\r\n//             .catch(err => console.log('Error creating facture:', err))\r\n//     };\r\n\r\n//     const handleKeyPress = (event) => {\r\n//         if (event.key === 'Enter') {\r\n//             handleAddInput();\r\n//         }\r\n//     };\r\n\r\n//     const handleClientChange = (e) => {\r\n//         const { value } = e.target;\r\n//         setClient(value);\r\n//         // Filter clients based on user input\r\n//         setFilteredClients(clients.filter(client => client.clName.toLowerCase().includes(value.toLowerCase())));\r\n//     };\r\n    \r\n//     const handleClientSelect = (name) => {\r\n//         setClient(name);\r\n//         setFilteredClients([]);\r\n//     };\r\n\r\n//     return (\r\n//         <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n//             <div style={{ display: 'flex', flex: '1' }}>\r\n//                 <div>\r\n//                 <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"text\"\r\n//                             id=\"code-client\"\r\n//                             name=\"code-client\"  \r\n//                         />\r\n//                     </div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"text\"\r\n//                             id=\"client\"\r\n//                             value={client}\r\n//                             onChange={handleClientChange}\r\n//                         />\r\n//                         {filteredClients.length > 0 && (\r\n//                             <ul style={{ listStyleType: 'none', padding: 0, margin: 0, position: 'absolute', zIndex: 1, backgroundColor: 'white', border: '1px solid #ccc', width: '200px' }}>\r\n//                                 {filteredClients.map((client, index) => (\r\n//                                     <li key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName)}>\r\n//                                         {client.clName}\r\n//                                     </li>\r\n//                                 ))}\r\n//                             </ul>\r\n//                         )}\r\n\r\n//                     </div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"date\"\r\n//                             id=\"date\"\r\n//                             value={date}\r\n//                             onChange={(e) => setDate(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"text\"\r\n//                             id=\"code\"\r\n//                             value={DT}\r\n//                             onChange={(e) => setDT(e.target.value)}\r\n//                             onBlur={handleQuantityChange} // Add onBlur event to trigger recalculation when \"Droit de timbre\" value changes\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <div>\r\n//                     <div>\r\n//                         {inputs.map((input, index) => (\r\n//                             <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//                                 <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                                     <label>Référence d'article</label>\r\n//                                     <input\r\n//                                         list=\"references\"\r\n//                                         style={{ width: '100%' }}\r\n//                                         value={input.refAr}\r\n//                                         onChange={(e) => handleReferenceChange(e, index)}\r\n//                                     />\r\n//                                     <datalist id=\"references\">\r\n//                                         {references.map((reference, idx) => (\r\n//                                             <option key={idx} value={reference} />\r\n//                                         ))}\r\n//                                     </datalist>\r\n//                                 </div>\r\n//                                 <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                                     <label>Prix vente TTC</label>\r\n//                                     <input\r\n//                                         type=\"number\"\r\n//                                         style={{ width: '100%' }}\r\n//                                         value={input.price}\r\n//                                         readOnly\r\n//                                     />\r\n//                                 </div>\r\n//                                 <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                                     <label>Quantité</label>\r\n//                                     <input\r\n//                                         type=\"number\"\r\n//                                         style={{ width: '100%' }}\r\n//                                         value={input.quantité}\r\n//                                         onChange={(e) => handleQuantityChange(e, index)}\r\n//                                     />\r\n//                                 </div>\r\n//                                 <div style={{ display: 'flex', alignItems: 'center' }}>\r\n//                                     <div style={{ flex: '1' }}>\r\n//                                         <label>Remise</label>\r\n//                                         <input\r\n//                                             type=\"number\"\r\n//                                             style={{ width: '100%' }}\r\n//                                             value={input.remise}\r\n//                                             onChange={(e) => handleRemiseChange(e, index)}\r\n//                                             onKeyDown={handleKeyPress} // Call handleKeyPress on key press\r\n//                                             ref={remiseInputRef} // Set the ref for Remise input field\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div style={{ marginLeft: '10px' }}>\r\n//                                         <button type=\"button\" onClick={handleAddInput}>+</button>\r\n//                                     </div>\r\n//                                 </div>\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                 </div>\r\n//                 <div>\r\n//                     <div>\r\n//                         <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\r\n//                             <button\r\n//                                 style={{ width: '200px', marginBottom: '10px' }}\r\n//                                 type=\"button\"\r\n//                                 onClick={handleAddInput}\r\n//                             >\r\n//                                 Ajouter\r\n//                             </button>\r\n//                             <button\r\n//                                 style={{ width: '200px', marginBottom: '10px' }}\r\n//                                 type=\"submit\"\r\n//                                 onClick={handleSubmit}\r\n//                             >\r\n//                                 Enregistrer\r\n//                             </button>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//             <div style={{ marginBottom: '20px' }}>\r\n//                 <label>Total</label>\r\n//                 <input\r\n//                     type=\"text\" \r\n//                     style={{ width: '100%' }}\r\n//                     value={calculateTotal()}\r\n//                     readOnly\r\n//                 />\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction CreateFactureVente({ selectedFacture }) {\r\n    const [clName, setClName] = useState('');\r\n    const [client_id, setClientCode] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [DT, setDT] = useState('1.000');\r\n    const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n    const [references, setReferences] = useState([]);\r\n    const [filteredClients, setFilteredClients] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selectedIndex, setSelectedIndex] = useState(-1); // For keyboard navigation\r\n    const debounceTimer = useRef(null);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7777/article')\r\n            .then(res => {\r\n                setReferences(res.data.map(article => article.ref));\r\n            })\r\n            .catch(err => console.log('Error fetching articles:', err));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedFacture) {\r\n            setClName(selectedFacture.clName || '');\r\n            setClientCode(selectedFacture.client_id || '');\r\n            setDate(selectedFacture.date || '');\r\n            setDT(selectedFacture.DT || '1.000');\r\n            setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n        }\r\n    }, [selectedFacture]);\r\n\r\n    const fetchPriceByReference = (reference, index) => {\r\n        axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n            .then(res => {\r\n                const price = res.data.price;\r\n                const newInputs = [...inputs];\r\n                newInputs[index].price = price;\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.log('Error fetching price:', err));\r\n    };\r\n\r\n    const handleReferenceChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].refAr = value;\r\n        setInputs(newInputs);\r\n        fetchPriceByReference(value, index);\r\n    };\r\n\r\n    const handleRemiseChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].remise = value;\r\n        setInputs(newInputs);\r\n    };\r\n\r\n    const handleQuantityChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].quantité = value;\r\n\r\n        axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n            .then(res => {\r\n                const availableQuantity = res.data.quantity;\r\n                const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n                if (remainingQuantity < 0) {\r\n                    alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n                    newInputs[index].quantité = availableQuantity;\r\n                }\r\n\r\n                const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n                newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.error('Error fetching quantity:', err));\r\n            \r\n        const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\r\n        console.log(\"New Total:\", newTotal);\r\n    };\r\n\r\n    const handleAddInput = () => {\r\n        const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n        if (isEmpty) {\r\n            alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n            return;\r\n        }\r\n        setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n    };\r\n\r\n    const calculateTotal = () => {\r\n        if (!inputs) return 0; \r\n        const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\r\n        return total.toFixed(3); // Round to three decimal places\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Filter out empty inputs before checking for invalid references\r\n        const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n        const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n        if (invalidReference) {\r\n            alert(\"Sélectionner une référence valide\");\r\n            return;\r\n        }\r\n\r\n        const refArArray = [];\r\n        const quantiteArray = [];\r\n        const remiseArray = [];\r\n        nonEmptyInputs.forEach(input => {\r\n            refArArray.push(input.refAr);\r\n            quantiteArray.push(input.quantité);\r\n            remiseArray.push(input.remise);\r\n        });\r\n\r\n        const totalPrice = calculateTotal();\r\n        axios.post('http://localhost:7777/factureVente/createFac/', {\r\n            clName,\r\n            client_id,\r\n            date,\r\n            DT,\r\n            refAr: refArArray,\r\n            quantité: quantiteArray,\r\n            remise: remiseArray,\r\n            totalPrice\r\n        })\r\n            .then(res => {\r\n                console.log(res);\r\n                window.location.reload();\r\n            })\r\n            .catch(err => console.log('Error creating facture:', err))\r\n    };\r\n\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === 'Enter') {\r\n            handleAddInput();\r\n        }\r\n    };\r\n\r\n    const handleClientChange = (e) => {\r\n        const { value } = e.target;\r\n        setClName(value);\r\n        setLoading(true);\r\n        clearTimeout(debounceTimer.current);\r\n\r\n        debounceTimer.current = setTimeout(() => {\r\n            axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n                .then(res => {\r\n                    setFilteredClients(res.data);\r\n                    setLoading(false);\r\n                })\r\n                .catch(err => {\r\n                    console.log('Error fetching clients:', err);\r\n                    setLoading(false);\r\n                });\r\n        }, 300); // 300ms debounce\r\n    };\r\n\r\n    const handleClientBlur = () => {\r\n        setTimeout(() => setFilteredClients([]), 200); // Delay clearing to allow selection\r\n    };\r\n\r\n    const handleClientSelect = (name, code) => {\r\n        setClName(name);\r\n        setClientCode(code);\r\n        setFilteredClients([]);\r\n    };\r\n\r\n    const handleClientKeyDown = (e) => {\r\n        if (e.key === 'ArrowDown') {\r\n            setSelectedIndex((prevIndex) => Math.min(prevIndex + 1, filteredClients.length - 1));\r\n        } else if (e.key === 'ArrowUp') {\r\n            setSelectedIndex((prevIndex) => Math.max(prevIndex - 1, 0));\r\n        } else if (e.key === 'Enter' && selectedIndex >= 0) {\r\n            handleClientSelect(filteredClients[selectedIndex].clName, filteredClients[selectedIndex].clID);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"code-client\" className=\"form-label\">Code client:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"code-client\"\r\n                            className=\"form-control\"\r\n                            value={client_id}\r\n                            onChange={(e) => setClientCode(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-3 position-relative\">\r\n                        <label htmlFor=\"client\" className=\"form-label\">Nom du client</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"client\"\r\n                            className=\"form-control\"\r\n                            value={clName}\r\n                            onChange={handleClientChange}\r\n                            onBlur={handleClientBlur}\r\n                            onKeyDown={handleClientKeyDown}\r\n                        />\r\n                        <button className=\"btn btn-secondary btn-sm\" onClick={() => setClName('')}>Clear</button> {/* Clear button */}\r\n                        {loading && <div className=\"spinner-border text-primary\" role=\"status\"><span className=\"visually-hidden\">Loading...</span></div>} {/* Loading indicator */}\r\n                        {filteredClients.length > 0 && (\r\n                            <ul className=\"list-group position-absolute w-100\">\r\n                                {filteredClients.map((client, index) => (\r\n                                    <li\r\n                                        key={index}\r\n                                        className={`list-group-item ${index === selectedIndex ? 'active' : ''}`}\r\n                                        onClick={() => handleClientSelect(client.clName, client.clID)}\r\n                                    >\r\n                                        {client.clName}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"date\" className=\"form-label\">Date</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            id=\"date\"\r\n                            className=\"form-control\"\r\n                            value={date}\r\n                            onChange={(e) => setDate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"DT\" className=\"form-label\">Droit de timbre</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"DT\"\r\n                            className=\"form-control\"\r\n                            value={DT}\r\n                            onChange={(e) => setDT(e.target.value)}\r\n                            onBlur={handleQuantityChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    {inputs.map((input, index) => (\r\n                        <div key={index} className=\"row mb-3\">\r\n                            <div className=\"col-md-3\">\r\n                                <label htmlFor={`reference-${index}`} className=\"form-label\">Référence d'article</label>\r\n                                <input\r\n                                    list=\"references\"\r\n                                    className=\"form-control\"\r\n                                    value={input.refAr}\r\n                                    onChange={(e) => handleReferenceChange(e, index)}\r\n                                    id={`reference-${index}`}\r\n                                />\r\n                                <datalist id=\"references\">\r\n                                    {references.map((reference, idx) => (\r\n                                        <option key={idx} value={reference} />\r\n                                    ))}\r\n                                </datalist>\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                                <label htmlFor={`price-${index}`} className=\"form-label\">Prix vente TTC</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    value={input.price}\r\n                                    readOnly\r\n                                    id={`price-${index}`}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                                <label htmlFor={`quantite-${index}`} className=\"form-label\">Quantité</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    value={input.quantité}\r\n                                    onChange={(e) => handleQuantityChange(e, index)}\r\n                                    id={`quantite-${index}`}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                                <label htmlFor={`remise-${index}`} className=\"form-label\">Remise</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    value={input.remise}\r\n                                    onChange={(e) => handleRemiseChange(e, index)}\r\n                                    onKeyDown={handleKeyPress}\r\n                                    id={`remise-${index}`}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-1 d-flex align-items-end\">\r\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={handleAddInput}>+</button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n                <div className=\"col-12 d-flex justify-content-center\">\r\n                    <button type=\"button\" className=\"btn btn-success me-2\" onClick={handleAddInput}>Ajouter</button>\r\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={handleSubmit}>Enregistrer</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"total\" className=\"form-label\">Total</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"total\"\r\n                    value={calculateTotal()}\r\n                    readOnly\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateFactureVente;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}