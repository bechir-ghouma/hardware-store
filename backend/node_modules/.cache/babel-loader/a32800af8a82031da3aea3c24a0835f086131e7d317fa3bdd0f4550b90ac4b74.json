{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\CreateFactureVente.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function CreateFactureVente() {\n//     const [client, setClient] = useState('');\n//     const [date, setDate] = useState('');\n//     const [code, setCode] = useState('');\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0 }]);\n//     const [references, setReferences] = useState([]);\n//     const [telephone, setTelephone] = useState(''); // New state variable for telephone input\n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/article') // Fetch references from the article table\n//             .then(res => {\n//                 setReferences(res.data.map(article => article.ref)); // Extract references from the data\n//             })\n//             .catch(err => console.log(err));\n//     }, []);\n\n//     function handleSubmit(event) {\n//         event.preventDefault();\n//         const totalPrice = inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0);\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\n//             client,\n//             date,\n//             code,\n//             refAr: inputs.map(input => input.refAr),\n//             quantité: inputs.map(input => input.quantité),\n//             totalPrice\n//         })\n//             .then(res => {\n//                 console.log(res);\n//                 window.location.reload();\n//             })\n//             .catch(err => console.log(err))\n//     }\n\n//     function handleQuantityChange(event, index) {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].quantité = value;\n//         setInputs(newInputs);\n//     }\n\n//     function handleReferenceChange(event, index) {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].refAr = value;\n//         setInputs(newInputs);\n//     }\n\n//     function handlePriceChange(event, index) {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].price = value;\n//         setInputs(newInputs);\n//     }\n\n//     function handleAddInput() {\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '' }]);\n//     }\n\n//     return (\n//         <div className='container mt-5'>\n//             <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Nom du client</label>\n//                         <input type='text' placeholder='Entrez le nom du client' className='form-control'\n//                             onChange={e => setClient(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Date</label>\n//                         <input type=\"date\" className='form-control'\n//                             onChange={e => setDate(e.target.value)}\n//                         />\n//                     </div>\n//                 </div>\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Code de la facture</label>\n//                         <input type='text' placeholder='Entrez le code de la facture' className='form-control'\n//                             onChange={e => setCode(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Téléphone</label>\n//                         <input\n//                             type=\"text\" // Changed input type to text\n//                             className='form-control'\n//                             placeholder=\"Entrez le numéro de téléphone\"\n//                             value={telephone}\n//                             onChange={(e) => setTelephone(e.target.value)} // Update telephone state\n//                         />\n//                     </div>\n//                 </div>\n//                 {inputs.map((input, index) => (\n//                     <div className=\"row mb-3\" key={index}>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Référence d'article</label>\n//                             <input\n//                                 list=\"references\"\n//                                 className='form-control'\n//                                 placeholder=\"Select or type reference...\"\n//                                 value={input.refAr}\n//                                 onChange={(e) => handleReferenceChange(e, index)}\n//                             />\n//                             <datalist id=\"references\">\n//                                 {references.map((reference, idx) => (\n//                                     <option key={idx} value={reference} /> // Change value to reference\n//                                 ))}\n//                             </datalist>\n//                         </div>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Prix Article</label>\n//                             <input type='number' placeholder=\"Prix d'article\" className='form-control'\n//                                 value={input.price}\n//                                 onChange={(e) => handlePriceChange(e, index)}\n//                             />\n//                         </div>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Quantité</label>\n//                             <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\n//                                 value={input.quantité}\n//                                 onChange={(e) => handleQuantityChange(e, index)}\n//                             />\n//                         </div>\n//                     </div>\n//                 ))}\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Total</label>\n//                         <input type='number' placeholder='Total de la facture' className='form-control'\n//                             // value={inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0)}\n//                             // disabled\n//                         />\n//                     </div>\n//                 </div>\n//                 <button type=\"button\" className='btn btn-success' onClick={handleAddInput}>Ajouter</button>\n//                 <button type=\"submit\" className='btn btn-primary'>Enregistrer</button>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default CreateFactureVente;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateFactureVente() {\n  _s();\n  const [client, setClient] = useState('');\n  const [date, setDate] = useState('');\n  const [code, setCode] = useState('');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [telephone, setTelephone] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:7777/article').then(res => {\n      setReferences(res.data.map(article => article.ref));\n    }).catch(err => console.log(err));\n  }, []);\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/article/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log(err));\n  };\n  const handleReferenceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n    fetchPriceByReference(value, index); // Fetch price when reference changes\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const totalPrice = inputs.reduce((acc, curr) => acc + curr.quantité * curr.price, 0);\n    axios.post('http://localhost:7777/factureVente/createFac/', {\n      client,\n      date,\n      code,\n      refAr: inputs.map(input => input.refAr),\n      quantité: inputs.map(input => input.quantité),\n      totalPrice\n    }).then(res => {\n      console.log(res);\n      window.location.reload();\n    }).catch(err => console.log(err));\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].quantité = value;\n    setInputs(newInputs);\n  };\n  const handleAddInput = () => {\n    setInputs([...inputs, {\n      refAr: '',\n      price: 0,\n      quantité: ''\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Ajouter une facture de vente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Nom du client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Entrez le nom du client\",\n            className: \"form-control\",\n            onChange: e => setClient(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"form-control\",\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Code de la facture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Entrez le code de la facture\",\n            className: \"form-control\",\n            onChange: e => setCode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"T\\xE9l\\xE9phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Entrez le num\\xE9ro de t\\xE9l\\xE9phone\",\n            value: telephone,\n            onChange: e => setTelephone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"R\\xE9f\\xE9rence d'article\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            list: \"references\",\n            className: \"form-control\",\n            placeholder: \"Select or type reference...\",\n            value: input.refAr,\n            onChange: e => handleReferenceChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"references\",\n            children: references.map((reference, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: reference\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Prix Article\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Prix d'article\",\n            className: \"form-control\",\n            value: input.price,\n            onChange: e => handlePriceChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Quantit\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Entrez la quantit\\xE9 d\\xE9sir\\xE9e\",\n            className: \"form-control\",\n            value: input.quantité,\n            onChange: e => handleQuantityChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Total de la facture\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-success\",\n        onClick: handleAddInput,\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Enregistrer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateFactureVente, \"2c7+BquAykFcvd24OCu/84tqGp0=\");\n_c = CreateFactureVente;\nexport default CreateFactureVente;\nvar _c;\n$RefreshReg$(_c, \"CreateFactureVente\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CreateFactureVente","_s","client","setClient","date","setDate","code","setCode","inputs","setInputs","refAr","quantité","price","references","setReferences","telephone","setTelephone","get","then","res","data","map","article","ref","catch","err","console","log","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","event","value","target","handleSubmit","preventDefault","totalPrice","reduce","acc","curr","post","input","window","location","reload","handleQuantityChange","handleAddInput","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","placeholder","onChange","e","list","id","idx","handlePriceChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureVente.js"],"sourcesContent":["\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function CreateFactureVente() {\r\n//     const [client, setClient] = useState('');\r\n//     const [date, setDate] = useState('');\r\n//     const [code, setCode] = useState('');\r\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0 }]);\r\n//     const [references, setReferences] = useState([]);\r\n//     const [telephone, setTelephone] = useState(''); // New state variable for telephone input\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/article') // Fetch references from the article table\r\n//             .then(res => {\r\n//                 setReferences(res.data.map(article => article.ref)); // Extract references from the data\r\n//             })\r\n//             .catch(err => console.log(err));\r\n//     }, []);\r\n\r\n//     function handleSubmit(event) {\r\n//         event.preventDefault();\r\n//         const totalPrice = inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0);\r\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//             client,\r\n//             date,\r\n//             code,\r\n//             refAr: inputs.map(input => input.refAr),\r\n//             quantité: inputs.map(input => input.quantité),\r\n//             totalPrice\r\n//         })\r\n//             .then(res => {\r\n//                 console.log(res);\r\n//                 window.location.reload();\r\n//             })\r\n//             .catch(err => console.log(err))\r\n//     }\r\n\r\n//     function handleQuantityChange(event, index) {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].quantité = value;\r\n//         setInputs(newInputs);\r\n//     }\r\n\r\n//     function handleReferenceChange(event, index) {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].refAr = value;\r\n//         setInputs(newInputs);\r\n//     }\r\n\r\n//     function handlePriceChange(event, index) {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].price = value;\r\n//         setInputs(newInputs);\r\n//     }\r\n\r\n//     function handleAddInput() {\r\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '' }]);\r\n//     }\r\n\r\n//     return (\r\n//         <div className='container mt-5'>\r\n//             <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Nom du client</label>\r\n//                         <input type='text' placeholder='Entrez le nom du client' className='form-control'\r\n//                             onChange={e => setClient(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Date</label>\r\n//                         <input type=\"date\" className='form-control'\r\n//                             onChange={e => setDate(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Code de la facture</label>\r\n//                         <input type='text' placeholder='Entrez le code de la facture' className='form-control'\r\n//                             onChange={e => setCode(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Téléphone</label>\r\n//                         <input\r\n//                             type=\"text\" // Changed input type to text\r\n//                             className='form-control'\r\n//                             placeholder=\"Entrez le numéro de téléphone\"\r\n//                             value={telephone}\r\n//                             onChange={(e) => setTelephone(e.target.value)} // Update telephone state\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 {inputs.map((input, index) => (\r\n//                     <div className=\"row mb-3\" key={index}>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Référence d'article</label>\r\n//                             <input\r\n//                                 list=\"references\"\r\n//                                 className='form-control'\r\n//                                 placeholder=\"Select or type reference...\"\r\n//                                 value={input.refAr}\r\n//                                 onChange={(e) => handleReferenceChange(e, index)}\r\n//                             />\r\n//                             <datalist id=\"references\">\r\n//                                 {references.map((reference, idx) => (\r\n//                                     <option key={idx} value={reference} /> // Change value to reference\r\n//                                 ))}\r\n//                             </datalist>\r\n//                         </div>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Prix Article</label>\r\n//                             <input type='number' placeholder=\"Prix d'article\" className='form-control'\r\n//                                 value={input.price}\r\n//                                 onChange={(e) => handlePriceChange(e, index)}\r\n//                             />\r\n//                         </div>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Quantité</label>\r\n//                             <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\r\n//                                 value={input.quantité}\r\n//                                 onChange={(e) => handleQuantityChange(e, index)}\r\n//                             />\r\n//                         </div>\r\n//                     </div>\r\n//                 ))}\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Total</label>\r\n//                         <input type='number' placeholder='Total de la facture' className='form-control'\r\n//                             // value={inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0)}\r\n//                             // disabled\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <button type=\"button\" className='btn btn-success' onClick={handleAddInput}>Ajouter</button>\r\n//                 <button type=\"submit\" className='btn btn-primary'>Enregistrer</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CreateFactureVente() {\r\n    const [client, setClient] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [code, setCode] = useState('');\r\n    const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0 }]);\r\n    const [references, setReferences] = useState([]);\r\n    const [telephone, setTelephone] = useState('');\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7777/article')\r\n            .then(res => {\r\n                setReferences(res.data.map(article => article.ref));\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    const fetchPriceByReference = (reference, index) => {\r\n        axios.get(`http://localhost:7777/article/${reference}`)\r\n            .then(res => {\r\n                const price = res.data.price;\r\n                const newInputs = [...inputs];\r\n                newInputs[index].price = price;\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    const handleReferenceChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].refAr = value;\r\n        setInputs(newInputs);\r\n        fetchPriceByReference(value, index); // Fetch price when reference changes\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const totalPrice = inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0);\r\n        axios.post('http://localhost:7777/factureVente/createFac/', {\r\n            client,\r\n            date,\r\n            code,\r\n            refAr: inputs.map(input => input.refAr),\r\n            quantité: inputs.map(input => input.quantité),\r\n            totalPrice\r\n        })\r\n            .then(res => {\r\n                console.log(res);\r\n                window.location.reload();\r\n            })\r\n            .catch(err => console.log(err))\r\n    };\r\n\r\n    const handleQuantityChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].quantité = value;\r\n        setInputs(newInputs);\r\n    };\r\n\r\n    const handleAddInput = () => {\r\n        setInputs([...inputs, { refAr: '', price: 0, quantité: '' }]);\r\n    };\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"row mb-3\">\r\n                    <div className='col'>\r\n                        <label htmlFor=\"\">Nom du client</label>\r\n                        <input type='text' placeholder='Entrez le nom du client' className='form-control'\r\n                            onChange={e => setClient(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className='col'>\r\n                        <label htmlFor=\"\">Date</label>\r\n                        <input type=\"date\" className='form-control'\r\n                            onChange={e => setDate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mb-3\">\r\n                    <div className='col'>\r\n                        <label htmlFor=\"\">Code de la facture</label>\r\n                        <input type='text' placeholder='Entrez le code de la facture' className='form-control'\r\n                            onChange={e => setCode(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className='col'>\r\n                        <label htmlFor=\"\">Téléphone</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className='form-control'\r\n                            placeholder=\"Entrez le numéro de téléphone\"\r\n                            value={telephone}\r\n                            onChange={(e) => setTelephone(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {inputs.map((input, index) => (\r\n                    <div className=\"row mb-3\" key={index}>\r\n                        <div className='col'>\r\n                            <label htmlFor=\"\">Référence d'article</label>\r\n                            <input\r\n                                list=\"references\"\r\n                                className='form-control'\r\n                                placeholder=\"Select or type reference...\"\r\n                                value={input.refAr}\r\n                                onChange={(e) => handleReferenceChange(e, index)}\r\n                            />\r\n                            <datalist id=\"references\">\r\n                                {references.map((reference, idx) => (\r\n                                    <option key={idx} value={reference} />\r\n                                ))}\r\n                            </datalist>\r\n                        </div>\r\n                        <div className='col'>\r\n                            <label htmlFor=\"\">Prix Article</label>\r\n                            <input type='number' placeholder=\"Prix d'article\" className='form-control'\r\n                                value={input.price}\r\n                                onChange={(e) => handlePriceChange(e, index)}\r\n                            />\r\n                        </div>\r\n                        <div className='col'>\r\n                            <label htmlFor=\"\">Quantité</label>\r\n                            <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\r\n                                value={input.quantité}\r\n                                onChange={(e) => handleQuantityChange(e, index)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                <div className=\"row mb-3\">\r\n                    <div className='col'>\r\n                        <label htmlFor=\"\">Total</label>\r\n                        <input type='number' placeholder='Total de la facture' className='form-control' />\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" className='btn btn-success' onClick={handleAddInput}>Ajouter</button>\r\n                <button type=\"submit\" className='btn btn-primary'>Enregistrer</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateFactureVente;\r\n"],"mappings":";;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC;IAAEe,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAE,CAAC,CAAC,CAAC;EAC7E,MAAM,CAACC,UAAU,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}