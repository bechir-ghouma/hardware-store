{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\Cfvbscf.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import axios from 'axios';\n\n// function Cfvbscf({ selectedFacture }) {\n//   const [clName, setClName] = useState('');\n//   const [client_id, setClientCode] = useState('');\n//   const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//   const [references, setReferences] = useState([]);\n//   const [filteredClients, setFilteredClients] = useState([]);\n\n//   const remiseInputRef = useRef(null);\n\n//   useEffect(() => {\n//     axios.get('http://localhost:7777/article')\n//       .then(res => {\n//         setReferences(res.data.map(article => article.ref));\n//       })\n//       .catch(err => console.log('Error fetching articles:', err));\n//   }, []);\n\n//   useEffect(() => {\n//     if (selectedFacture) {\n//       console.log('Selected Facture in CreateFactureVente:', selectedFacture);\n//       setClName(selectedFacture.clName || '');\n//       setClientCode(selectedFacture.client_id || '');\n//       setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//     }\n//   }, [selectedFacture]);\n\n//   const fetchPriceByReference = (reference, index) => {\n//     axios.get(`http://localhost:7777/factureVente/${reference}`)\n//       .then(res => {\n//         const price = res.data.price;\n//         const newInputs = [...inputs];\n//         newInputs[index].price = price;\n//         setInputs(newInputs);\n//       })\n//       .catch(err => console.log('Error fetching price:', err));\n//   };\n\n//   const handleReferenceChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].refAr = value;\n//     setInputs(newInputs);\n//     fetchPriceByReference(value, index);\n//   };\n\n//   const handleRemiseChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].remise = value;\n//     setInputs(newInputs);\n//   };\n\n//   const handleQuantityChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].quantité = value;\n\n//     if (!isNaN(value) && value !== '') {\n//       axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//         .then(res => {\n//           const availableQuantity = res.data.quantity;\n//           const remainingQuantity = availableQuantity - parseInt(value);\n\n//           if (remainingQuantity < 0) {\n//             alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//             newInputs[index].quantité = availableQuantity; // Setting the input quantity to available quantity\n//           }\n\n//           setInputs(newInputs);\n//         })\n//         .catch(err => console.error('Error fetching quantity:', err));\n//     } else {\n//       // Handle case where value is not a valid number\n//       alert('Veuillez entrer une quantité valide.');\n//     }\n//   };\n\n//   const handleAddInput = () => {\n//     const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n//     if (isEmpty) {\n//       alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n//       return;\n//     }\n//     setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\n//   };\n\n//   const calculateTotal = () => {\n//     if (!inputs) return 0;\n//     const total = inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité) * (1 - (curr.remise / 100)), 0);\n//     return total.toFixed(3);\n//   };\n\n//   const updateStock = async (inputs) => {\n//     try {\n//       for (const input of inputs) {\n//         if (!isNaN(input.quantité) && input.quantité !== '') {\n//           const response = await axios.put(`http://localhost:7777/article/${input.refAr}/updateStock`, { quantity: input.quantité });\n//           console.log(`Stock updated for ${input.refAr}:`, response.data);\n//         }\n//       }\n//     } catch (error) {\n//       console.error('Error updating stock:', error);\n//     }\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//     if (invalidReference) {\n//       alert(\"Sélectionner une référence valide\");\n//       return;\n//     }\n\n//     const refArArray = nonEmptyInputs.map(input => ({\n//       refAr: input.refAr,\n//       price: input.price,\n//       quantité: input.quantité,\n//       remise: input.remise\n//     }));\n\n//     const totalPrice = calculateTotal();\n//     try {\n//       const res = await axios.post('http://localhost:7777/factureVente/cfvbscf/', {\n//         clName,\n//         client_id,\n//         refAr: refArArray,\n//         totalPrice\n//       });\n//       console.log(res.data);\n//       await updateStock(refArArray); \n//       window.location.reload();\n//     } catch (err) {\n//       console.log('Error creating facture:', err);\n//     }\n//   };\n\n//   const handleKeyPress = (event) => {\n//     if (event.key === 'Enter') {\n//       handleAddInput();\n//     }\n//   };\n\n//   const handleClientSelect = (name, code) => {\n//     setClName(name);\n//     setClientCode(code);\n//     setFilteredClients([]);\n//   };\n\n//   const handleClientChange = (e) => {\n//     const { value } = e.target;\n//     setClName(value);\n\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//       .then(res => {\n//         setFilteredClients(res.data);\n//       })\n//       .catch(err => console.log('Error fetching clients:', err));\n\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//       .then(res => {\n//         if (res.data.length > 0) {\n//           setClientCode(res.data[0].clID);\n//         } else {\n//           setClientCode('');\n//         }\n//       })\n//       .catch(err => console.log('Error fetching client code:', err));\n//   };\n\n//   const handleClientBlur = () => {\n//     setFilteredClients([]);\n//   };\n\n//   const handleClientCodeChange = (e) => {\n//     const { value } = e.target;\n//     setClientCode(value);\n\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\n//       .then(res => {\n//         if (res.data.length > 0) {\n//           setClName(res.data[0].clName);\n//         } else {\n//           setClName('');\n//         }\n//       })\n//       .catch(err => console.log('Error fetching client name:', err));\n//   };\n\n//   const handleUpdate = async (event) => {\n//     event.preventDefault();\n\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//     if (invalidReference) {\n//       alert(\"Sélectionner une référence valide\");\n//       return;\n//     }\n\n//     const refArArray = nonEmptyInputs.map(input => ({\n//       refAr: input.refAr,\n//       price: input.price,\n//       quantité: input.quantité,\n//       remise: input.remise\n//     }));\n\n//     const totalPrice = calculateTotal();\n//     try {\n//       const res = await axios.put(`http://localhost:7777/factureVente/update/${selectedFacture.id}`, {\n//         clName,\n//         client_id,\n//         articles: refArArray,\n//         totalPrice\n//       });\n//       console.log(res.data);\n//       await updateStock(refArArray);\n//       window.location.reload();\n//     } catch (err) {\n//       console.log('Error updating facture:', err);\n//     }\n//   };\n//   const handleClear = () => {\n//     setClName('');\n//     setClientCode('');\n//     setInputs([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//   };\n\n//   return (\n//     <div style={{ margin: '20px', justifyContent: 'center' }}>\n//       <div style={{ display: 'flex', flex: '1' }}>\n//         <div>\n//           <div style={{ marginBottom: '20px' }}>\n//             <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\n//             <input\n//               style={{ width: '200px' }}\n//               type=\"text\"\n//               id=\"code-client\"\n//               name=\"code-client\"\n//               value={client_id}\n//               onChange={handleClientCodeChange}\n//             />\n//           </div>\n//           <div style={{ marginBottom: '20px', position: 'relative' }}>\n//             <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\n//             <input\n//               style={{ width: '200px' }}\n//               type=\"text\"\n//               id=\"client\"\n//               value={clName}\n//               onChange={handleClientChange}\n//               onBlur={handleClientBlur}\n//             />\n//             {filteredClients.length > 0 && (\n//               <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\n//                 {filteredClients.map((client, index) => (\n//                   <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\n//                     {client.clName}\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//         <div>\n//           {inputs.map((input, index) => (\n//             <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//               <div style={{ flex: '1', marginRight: '10px' }}>\n//                 <label>Référence d'article</label>\n//                 <input\n//                   list=\"references\"\n//                   style={{ width: '100%' }}\n//                   value={input.refAr}\n//                   onChange={(e) => handleReferenceChange(e, index)}\n//                 />\n//                 <datalist id=\"references\">\n//                   {references.map((reference, idx) => (\n//                     <option key={idx} value={reference} />\n//                   ))}\n//                 </datalist>\n//               </div>\n//               <div style={{ flex: '1', marginRight: '10px' }}>\n//                 <label>Prix vente TTC</label>\n//                 <input\n//                   type=\"number\"\n//                   style={{ width: '100%' }}\n//                   value={input.price}\n//                   readOnly\n//                 />\n//               </div>\n//               <div style={{ flex: '1', marginRight: '10px' }}>\n//                 <label>Quantité</label>\n//                 <input\n//                   type=\"number\"\n//                   style={{ width: '100%' }}\n//                   value={input.quantité}\n//                   onChange={(e) => handleQuantityChange(e, index)}\n//                 />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center' }}>\n//                 <div style={{ flex: '1' }}>\n//                   <label>Remise</label>\n//                   <input\n//                     type=\"number\"\n//                     style={{ width: '100%' }}\n//                     value={input.remise}\n//                     onChange={(e) => handleRemiseChange(e, index)}\n//                     onKeyDown={handleKeyPress}\n//                     ref={remiseInputRef}\n//                   />\n//                 </div>\n//                 <div style={{ marginLeft: '10px' }}>\n//                   <button type=\"button\" onClick={handleAddInput}>+</button>\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//         <div>\n//           <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\n//             <button\n//               style={{ width: '200px', marginBottom: '10px' }}\n//               type=\"button\"\n//               onClick={handleSubmit}\n//             >\n//               Ajouter\n//             </button>\n//             <button\n//               style={{ width: '200px', marginBottom: '10px' }}\n//               type=\"submit\"\n//               onClick={handleUpdate}\n//             >\n//               {selectedFacture ? 'Mettre à jour' : 'Enregistrer'}\n//             </button><br />\n//             <button\n//               style={{ width: '200px', marginBottom: '10px' }}\n//               type=\"button\"\n//               onClick={handleClear}\n//             >\n//               Vider les champs\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ marginBottom: '20px' }}>\n//         <label>Total</label>\n//         <input\n//         // type='text'\n//         style={{ width: '100%' }}\n//         value={calculateTotal()}\n//         readOnly\n//       />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Cfvbscf;\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cfvbscf({\n  selectedFacture\n}) {\n  _s();\n  const [clName, setClName] = useState('');\n  const [client_id, setClientCode] = useState('');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0,\n    remise: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const remiseInputRef = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:7777/article').then(res => {\n      setReferences(res.data.map(article => article.ref));\n    }).catch(err => console.log('Error fetching articles:', err));\n  }, []);\n  useEffect(() => {\n    if (selectedFacture) {\n      console.log('Selected Facture in CreateFactureVente:', selectedFacture);\n      setClName(selectedFacture.clName || '');\n      setClientCode(selectedFacture.client_id || '');\n      setInputs(selectedFacture.articles || [{\n        refAr: '',\n        quantité: '',\n        price: 0,\n        remise: 0\n      }]);\n    }\n  }, [selectedFacture]);\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/factureVente/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log('Error fetching price:', err));\n  };\n  const handleReferenceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n    fetchPriceByReference(value, index);\n  };\n  const handleRemiseChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].remise = value;\n    setInputs(newInputs);\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].quantité = value;\n    if (!isNaN(value) && value !== '') {\n      axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`).then(res => {\n        const availableQuantity = res.data.quantity;\n        const remainingQuantity = availableQuantity - parseInt(value);\n        if (remainingQuantity < 0) {\n          alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n          newInputs[index].quantité = availableQuantity; // Setting the input quantity to available quantity\n        }\n        setInputs(newInputs);\n      }).catch(err => console.error('Error fetching quantity:', err));\n    } else {\n      // Handle case where value is not a valid number\n      alert('Veuillez entrer une quantité valide.');\n    }\n  };\n  const handleAddInput = () => {\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n    if (isEmpty) {\n      alert('Veuillez remplir les champs de la ligne existante avant d\\'ajouter une nouvelle ligne.');\n      return;\n    }\n    setInputs([...inputs, {\n      refAr: '',\n      quantité: '',\n      price: 0,\n      remise: 0\n    }]);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = {\n      clName,\n      client_id,\n      articles: inputs\n    };\n    axios.post('http://localhost:7777/factureVente', formData).then(res => {\n      console.log('Facture created:', res.data);\n      // Reset form\n      setClName('');\n      setClientCode('');\n      setInputs([{\n        refAr: '',\n        quantité: '',\n        price: 0,\n        remise: 0\n      }]);\n    }).catch(err => console.log('Error creating facture:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"clName\",\n        children: \"Nom du client:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"clName\",\n        value: clName,\n        onChange: e => setClName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"client_id\",\n        children: \"Code client:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"client_id\",\n        value: client_id,\n        onChange: e => setClientCode(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Articles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `refAr-${index}`,\n          children: \"R\\xE9f\\xE9rence d'article:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: `refAr-${index}`,\n          value: input.refAr,\n          onChange: e => handleReferenceChange(e, index),\n          list: \"reference-options\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `quantité-${index}`,\n          children: \"Quantit\\xE9:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: `quantité-${index}`,\n          value: input.quantité,\n          onChange: e => handleQuantityChange(e, index),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `price-${index}`,\n          children: \"Prix:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: `price-${index}`,\n          value: input.price,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `remise-${index}`,\n          children: \"Remise:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: `remise-${index}`,\n          value: input.remise,\n          onChange: e => handleRemiseChange(e, index),\n          ref: remiseInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddInput,\n        children: \"Ajouter un article\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Cr\\xE9er facture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 481,\n    columnNumber: 5\n  }, this);\n}\n_s(Cfvbscf, \"f0vrEqt6EkQlTDA6Lqv6zB4Q5so=\");\n_c = Cfvbscf;\nexport default Cfvbscf;\nvar _c;\n$RefreshReg$(_c, \"Cfvbscf\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Cfvbscf","selectedFacture","_s","clName","setClName","client_id","setClientCode","inputs","setInputs","refAr","quantité","price","remise","references","setReferences","filteredClients","setFilteredClients","remiseInputRef","get","then","res","data","map","article","ref","catch","err","console","log","articles","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","event","value","target","handleRemiseChange","handleQuantityChange","isNaN","availableQuantity","quantity","remainingQuantity","parseInt","alert","error","handleAddInput","isEmpty","some","input","handleSubmit","preventDefault","formData","post","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","e","required","list","readOnly","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/Cfvbscf.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function Cfvbscf({ selectedFacture }) {\r\n//   const [clName, setClName] = useState('');\r\n//   const [client_id, setClientCode] = useState('');\r\n//   const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//   const [references, setReferences] = useState([]);\r\n//   const [filteredClients, setFilteredClients] = useState([]);\r\n\r\n//   const remiseInputRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     axios.get('http://localhost:7777/article')\r\n//       .then(res => {\r\n//         setReferences(res.data.map(article => article.ref));\r\n//       })\r\n//       .catch(err => console.log('Error fetching articles:', err));\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (selectedFacture) {\r\n//       console.log('Selected Facture in CreateFactureVente:', selectedFacture);\r\n//       setClName(selectedFacture.clName || '');\r\n//       setClientCode(selectedFacture.client_id || '');\r\n//       setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//     }\r\n//   }, [selectedFacture]);\r\n\r\n//   const fetchPriceByReference = (reference, index) => {\r\n//     axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n//       .then(res => {\r\n//         const price = res.data.price;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].price = price;\r\n//         setInputs(newInputs);\r\n//       })\r\n//       .catch(err => console.log('Error fetching price:', err));\r\n//   };\r\n\r\n//   const handleReferenceChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].refAr = value;\r\n//     setInputs(newInputs);\r\n//     fetchPriceByReference(value, index);\r\n//   };\r\n\r\n//   const handleRemiseChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].remise = value;\r\n//     setInputs(newInputs);\r\n//   };\r\n\r\n\r\n//   const handleQuantityChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].quantité = value;\r\n  \r\n\r\n//     if (!isNaN(value) && value !== '') {\r\n//       axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//         .then(res => {\r\n//           const availableQuantity = res.data.quantity;\r\n//           const remainingQuantity = availableQuantity - parseInt(value);\r\n  \r\n//           if (remainingQuantity < 0) {\r\n//             alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//             newInputs[index].quantité = availableQuantity; // Setting the input quantity to available quantity\r\n//           }\r\n  \r\n//           setInputs(newInputs);\r\n//         })\r\n//         .catch(err => console.error('Error fetching quantity:', err));\r\n//     } else {\r\n//       // Handle case where value is not a valid number\r\n//       alert('Veuillez entrer une quantité valide.');\r\n//     }\r\n//   };\r\n  \r\n\r\n//   const handleAddInput = () => {\r\n//     const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n//     if (isEmpty) {\r\n//       alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n//       return;\r\n//     }\r\n//     setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n//   };\r\n\r\n//   const calculateTotal = () => {\r\n//     if (!inputs) return 0;\r\n//     const total = inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité) * (1 - (curr.remise / 100)), 0);\r\n//     return total.toFixed(3);\r\n//   };\r\n\r\n//   const updateStock = async (inputs) => {\r\n//     try {\r\n//       for (const input of inputs) {\r\n//         if (!isNaN(input.quantité) && input.quantité !== '') {\r\n//           const response = await axios.put(`http://localhost:7777/article/${input.refAr}/updateStock`, { quantity: input.quantité });\r\n//           console.log(`Stock updated for ${input.refAr}:`, response.data);\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error updating stock:', error);\r\n//     }\r\n//   };\r\n  \r\n  \r\n  \r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n  \r\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n  \r\n//     if (invalidReference) {\r\n//       alert(\"Sélectionner une référence valide\");\r\n//       return;\r\n//     }\r\n  \r\n//     const refArArray = nonEmptyInputs.map(input => ({\r\n//       refAr: input.refAr,\r\n//       price: input.price,\r\n//       quantité: input.quantité,\r\n//       remise: input.remise\r\n//     }));\r\n  \r\n//     const totalPrice = calculateTotal();\r\n//     try {\r\n//       const res = await axios.post('http://localhost:7777/factureVente/cfvbscf/', {\r\n//         clName,\r\n//         client_id,\r\n//         refAr: refArArray,\r\n//         totalPrice\r\n//       });\r\n//       console.log(res.data);\r\n//       await updateStock(refArArray); \r\n//       window.location.reload();\r\n//     } catch (err) {\r\n//       console.log('Error creating facture:', err);\r\n//     }\r\n//   };\r\n\r\n//   const handleKeyPress = (event) => {\r\n//     if (event.key === 'Enter') {\r\n//       handleAddInput();\r\n//     }\r\n//   };\r\n\r\n//   const handleClientSelect = (name, code) => {\r\n//     setClName(name);\r\n//     setClientCode(code);\r\n//     setFilteredClients([]);\r\n//   };\r\n\r\n//   const handleClientChange = (e) => {\r\n//     const { value } = e.target;\r\n//     setClName(value);\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//       .then(res => {\r\n//         setFilteredClients(res.data);\r\n//       })\r\n//       .catch(err => console.log('Error fetching clients:', err));\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//       .then(res => {\r\n//         if (res.data.length > 0) {\r\n//           setClientCode(res.data[0].clID);\r\n//         } else {\r\n//           setClientCode('');\r\n//         }\r\n//       })\r\n//       .catch(err => console.log('Error fetching client code:', err));\r\n//   };\r\n\r\n//   const handleClientBlur = () => {\r\n//     setFilteredClients([]);\r\n//   };\r\n\r\n//   const handleClientCodeChange = (e) => {\r\n//     const { value } = e.target;\r\n//     setClientCode(value);\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\r\n//       .then(res => {\r\n//         if (res.data.length > 0) {\r\n//           setClName(res.data[0].clName);\r\n//         } else {\r\n//           setClName('');\r\n//         }\r\n//       })\r\n//       .catch(err => console.log('Error fetching client name:', err));\r\n//   };\r\n\r\n//   const handleUpdate = async (event) => {\r\n//     event.preventDefault();\r\n  \r\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n  \r\n//     if (invalidReference) {\r\n//       alert(\"Sélectionner une référence valide\");\r\n//       return;\r\n//     }\r\n  \r\n//     const refArArray = nonEmptyInputs.map(input => ({\r\n//       refAr: input.refAr,\r\n//       price: input.price,\r\n//       quantité: input.quantité,\r\n//       remise: input.remise\r\n//     }));\r\n  \r\n//     const totalPrice = calculateTotal();\r\n//     try {\r\n//       const res = await axios.put(`http://localhost:7777/factureVente/update/${selectedFacture.id}`, {\r\n//         clName,\r\n//         client_id,\r\n//         articles: refArArray,\r\n//         totalPrice\r\n//       });\r\n//       console.log(res.data);\r\n//       await updateStock(refArArray);\r\n//       window.location.reload();\r\n//     } catch (err) {\r\n//       console.log('Error updating facture:', err);\r\n//     }\r\n//   };\r\n//   const handleClear = () => {\r\n//     setClName('');\r\n//     setClientCode('');\r\n//     setInputs([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//   };\r\n  \r\n//   return (\r\n//     <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n//       <div style={{ display: 'flex', flex: '1' }}>\r\n//         <div>\r\n//           <div style={{ marginBottom: '20px' }}>\r\n//             <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\r\n//             <input\r\n//               style={{ width: '200px' }}\r\n//               type=\"text\"\r\n//               id=\"code-client\"\r\n//               name=\"code-client\"\r\n//               value={client_id}\r\n//               onChange={handleClientCodeChange}\r\n//             />\r\n//           </div>\r\n//           <div style={{ marginBottom: '20px', position: 'relative' }}>\r\n//             <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n//             <input\r\n//               style={{ width: '200px' }}\r\n//               type=\"text\"\r\n//               id=\"client\"\r\n//               value={clName}\r\n//               onChange={handleClientChange}\r\n//               onBlur={handleClientBlur}\r\n//             />\r\n//             {filteredClients.length > 0 && (\r\n//               <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\r\n//                 {filteredClients.map((client, index) => (\r\n//                   <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\r\n//                     {client.clName}\r\n//                   </div>\r\n//                 ))}\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//         <div>\r\n//           {inputs.map((input, index) => (\r\n//             <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//               <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                 <label>Référence d'article</label>\r\n//                 <input\r\n//                   list=\"references\"\r\n//                   style={{ width: '100%' }}\r\n//                   value={input.refAr}\r\n//                   onChange={(e) => handleReferenceChange(e, index)}\r\n//                 />\r\n//                 <datalist id=\"references\">\r\n//                   {references.map((reference, idx) => (\r\n//                     <option key={idx} value={reference} />\r\n//                   ))}\r\n//                 </datalist>\r\n//               </div>\r\n//               <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                 <label>Prix vente TTC</label>\r\n//                 <input\r\n//                   type=\"number\"\r\n//                   style={{ width: '100%' }}\r\n//                   value={input.price}\r\n//                   readOnly\r\n//                 />\r\n//               </div>\r\n//               <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                 <label>Quantité</label>\r\n//                 <input\r\n//                   type=\"number\"\r\n//                   style={{ width: '100%' }}\r\n//                   value={input.quantité}\r\n//                   onChange={(e) => handleQuantityChange(e, index)}\r\n//                 />\r\n//               </div>\r\n//               <div style={{ display: 'flex', alignItems: 'center' }}>\r\n//                 <div style={{ flex: '1' }}>\r\n//                   <label>Remise</label>\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     style={{ width: '100%' }}\r\n//                     value={input.remise}\r\n//                     onChange={(e) => handleRemiseChange(e, index)}\r\n//                     onKeyDown={handleKeyPress}\r\n//                     ref={remiseInputRef}\r\n//                   />\r\n//                 </div>\r\n//                 <div style={{ marginLeft: '10px' }}>\r\n//                   <button type=\"button\" onClick={handleAddInput}>+</button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//         <div>\r\n//           <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\r\n//             <button\r\n//               style={{ width: '200px', marginBottom: '10px' }}\r\n//               type=\"button\"\r\n//               onClick={handleSubmit}\r\n//             >\r\n//               Ajouter\r\n//             </button>\r\n//             <button\r\n//               style={{ width: '200px', marginBottom: '10px' }}\r\n//               type=\"submit\"\r\n//               onClick={handleUpdate}\r\n//             >\r\n//               {selectedFacture ? 'Mettre à jour' : 'Enregistrer'}\r\n//             </button><br />\r\n//             <button\r\n//               style={{ width: '200px', marginBottom: '10px' }}\r\n//               type=\"button\"\r\n//               onClick={handleClear}\r\n//             >\r\n//               Vider les champs\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <div style={{ marginBottom: '20px' }}>\r\n//         <label>Total</label>\r\n//         <input\r\n//         // type='text'\r\n//         style={{ width: '100%' }}\r\n//         value={calculateTotal()}\r\n//         readOnly\r\n//       />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Cfvbscf;\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Cfvbscf({ selectedFacture }) {\r\n  const [clName, setClName] = useState('');\r\n  const [client_id, setClientCode] = useState('');\r\n  const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n  const [references, setReferences] = useState([]);\r\n  const [filteredClients, setFilteredClients] = useState([]);\r\n\r\n  const remiseInputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:7777/article')\r\n      .then(res => {\r\n        setReferences(res.data.map(article => article.ref));\r\n      })\r\n      .catch(err => console.log('Error fetching articles:', err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedFacture) {\r\n      console.log('Selected Facture in CreateFactureVente:', selectedFacture);\r\n      setClName(selectedFacture.clName || '');\r\n      setClientCode(selectedFacture.client_id || '');\r\n      setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n    }\r\n  }, [selectedFacture]);\r\n\r\n  const fetchPriceByReference = (reference, index) => {\r\n    axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n      .then(res => {\r\n        const price = res.data.price;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].price = price;\r\n        setInputs(newInputs);\r\n      })\r\n      .catch(err => console.log('Error fetching price:', err));\r\n  };\r\n\r\n  const handleReferenceChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].refAr = value;\r\n    setInputs(newInputs);\r\n    fetchPriceByReference(value, index);\r\n  };\r\n\r\n  const handleRemiseChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].remise = value;\r\n    setInputs(newInputs);\r\n  };\r\n\r\n\r\n  const handleQuantityChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].quantité = value;\r\n  \r\n\r\n    if (!isNaN(value) && value !== '') {\r\n      axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n        .then(res => {\r\n          const availableQuantity = res.data.quantity;\r\n          const remainingQuantity = availableQuantity - parseInt(value);\r\n  \r\n          if (remainingQuantity < 0) {\r\n            alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n            newInputs[index].quantité = availableQuantity; // Setting the input quantity to available quantity\r\n          }\r\n  \r\n          setInputs(newInputs);\r\n        })\r\n        .catch(err => console.error('Error fetching quantity:', err));\r\n    } else {\r\n      // Handle case where value is not a valid number\r\n      alert('Veuillez entrer une quantité valide.');\r\n    }\r\n  };\r\n  \r\n\r\n  const handleAddInput = () => {\r\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n    if (isEmpty) {\r\n      alert('Veuillez remplir les champs de la ligne existante avant d\\'ajouter une nouvelle ligne.');\r\n      return;\r\n    }\r\n\r\n    setInputs([...inputs, { refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const formData = {\r\n      clName,\r\n      client_id,\r\n      articles: inputs,\r\n    };\r\n    axios.post('http://localhost:7777/factureVente', formData)\r\n      .then(res => {\r\n        console.log('Facture created:', res.data);\r\n        // Reset form\r\n        setClName('');\r\n        setClientCode('');\r\n        setInputs([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n      })\r\n      .catch(err => console.log('Error creating facture:', err));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"clName\">Nom du client:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"clName\"\r\n          value={clName}\r\n          onChange={(e) => setClName(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"client_id\">Code client:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"client_id\"\r\n          value={client_id}\r\n          onChange={(e) => setClientCode(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <h3>Articles</h3>\r\n        {inputs.map((input, index) => (\r\n          <div key={index}>\r\n            <label htmlFor={`refAr-${index}`}>Référence d'article:</label>\r\n            <input\r\n              type=\"text\"\r\n              id={`refAr-${index}`}\r\n              value={input.refAr}\r\n              onChange={(e) => handleReferenceChange(e, index)}\r\n              list=\"reference-options\"\r\n              required\r\n            />\r\n            <label htmlFor={`quantité-${index}`}>Quantité:</label>\r\n            <input\r\n              type=\"number\"\r\n              id={`quantité-${index}`}\r\n              value={input.quantité}\r\n              onChange={(e) => handleQuantityChange(e, index)}\r\n              required\r\n            />\r\n            <label htmlFor={`price-${index}`}>Prix:</label>\r\n            <input\r\n              type=\"number\"\r\n              id={`price-${index}`}\r\n              value={input.price}\r\n              readOnly\r\n            />\r\n            <label htmlFor={`remise-${index}`}>Remise:</label>\r\n            <input\r\n              type=\"number\"\r\n              id={`remise-${index}`}\r\n              value={input.remise}\r\n              onChange={(e) => handleRemiseChange(e, index)}\r\n              ref={remiseInputRef}\r\n              required\r\n            />\r\n          </div>\r\n        ))}\r\n        <button type=\"button\" onClick={handleAddInput}>Ajouter un article</button>\r\n      </div>\r\n      <button type=\"submit\">Créer facture</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Cfvbscf;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}