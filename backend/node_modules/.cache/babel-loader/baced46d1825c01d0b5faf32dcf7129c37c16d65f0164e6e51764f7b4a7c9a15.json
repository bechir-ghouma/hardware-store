{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\CreateFactureVente.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function CreateFactureVente() {\n//     const [client, setClient] = useState('');\n//     const [date, setDate] = useState('');\n//     const [code, setCode] = useState('');\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0 }]);\n//     const [references, setReferences] = useState([]);\n//     const [telephone, setTelephone] = useState('');\n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/article')\n//             .then(res => {\n//                 setReferences(res.data.map(article => article.ref));\n//             })\n//             .catch(err => console.log(err));\n//     }, []);\n\n//     const fetchPriceByReference = (reference, index) => {\n//         axios.get(`http://localhost:7777/factureVente/${reference}`) \n//             .then(res => {\n//                 const price = res.data.price;\n//                 const newInputs = [...inputs];\n//                 newInputs[index].price = price;\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.log(err));\n//     };\n\n//     const handleReferenceChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].refAr = value;\n//         setInputs(newInputs);\n//         fetchPriceByReference(value, index); \n//     };\n\n//     const handleQuantityChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//             .then(res => {\n//                 const availableQuantity = res.data.quantity;\n\n//                 // Calculate the remaining quantity\n//                 const remainingQuantity = availableQuantity - parseInt(value);\n\n//                 if (remainingQuantity < 0) {\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//                     // Reset the quantity input field to the available quantity\n//                     newInputs[index].quantité = availableQuantity;\n//                 } else {\n//                     newInputs[index].quantité = value;\n//                 }\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.error(err));\n//     };\n\n//     const handleAddInput = () => {\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '' }]);\n//     };\n\n//     const calculateTotal = () => {\n//         return inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0);\n//     };\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n\n//         const invalidReference = inputs.some(input => !references.includes(input.refAr));\n//         if (invalidReference) {\n//             alert(\"Sélectionner une référence valide\");\n//             return; // Stop the submission process\n//         }\n\n//         const refArArray = [];\n//         const quantiteArray = [];\n//         inputs.forEach(input => {\n//             refArArray.push(input.refAr);\n//             quantiteArray.push(input.quantité);\n//         });\n\n//         const totalPrice = calculateTotal();\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\n//             client,\n//             date,\n//             code,\n//             refAr: refArArray,\n//             quantité: quantiteArray,\n//             totalPrice\n//         })\n//             .then(res => {\n//                 console.log(res);\n//                 // After successful posting, update the quantities in the article table\n//                 updateArticleQuantities(refArArray, quantiteArray);\n//                 window.location.reload();\n//             })\n//             .catch(err => console.log(err))\n//     };\n\n//     const updateArticleQuantities = (refArArray, quantiteArray) => {\n//         // Iterate over each article reference and its corresponding quantity\n//         refArArray.forEach((refAr, index) => {\n//             const updatedQuantity = parseInt(quantiteArray[index]);\n//             axios.put(`http://localhost:7777/article/${refAr}/updateQuantity`, {\n//                 updatedQuantity\n//             })\n//             .then(res => console.log(res))\n//             .catch(err => console.error(err));\n//         });\n//     };\n\n//     return (\n//         <div className='container mt-5'>\n//             <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Nom du client</label>\n//                         <input type='text' placeholder='Entrez le nom du client' className='form-control'\n//                             onChange={e => setClient(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Date</label>\n//                         <input type=\"date\" className='form-control'\n//                             onChange={e => setDate(e.target.value)}\n//                         />\n//                     </div>\n//                 </div>\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Code de la facture</label>\n//                         <input type='text' placeholder='Entrez le code de la facture' className='form-control'\n//                             onChange={e => setCode(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Téléphone</label>\n//                         <input\n//                             type=\"text\"\n//                             className='form-control'\n//                             placeholder=\"Entrez le numéro de téléphone\"\n//                             value={telephone}\n//                             onChange={(e) => setTelephone(e.target.value)}\n//                         />\n//                     </div>\n//                 </div>\n//                 {inputs.map((input, index) => (\n//                     <div className=\"row mb-3\" key={index}>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Référence d'article</label>\n//                             <input\n//                                 list=\"references\"\n//                                 className='form-control'\n//                                 placeholder=\"Select or type reference...\"\n//                                 value={input.refAr}\n//                                 onChange={(e) => handleReferenceChange(e, index)}\n//                             />\n//                             <datalist id=\"references\">\n//                                 {references.map((reference, idx) => (\n//                                     <option key={idx} value={reference} />\n//                                 ))}\n//                             </datalist>\n//                         </div>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Prix vente TTC</label>\n//                             <input type='number' placeholder=\"Prix d'article\" className='form-control'\n//                                 value={input.price} // Display the price\n//                                 readOnly // Make it read-only\n//                             />\n//                         </div>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Quantité</label>\n//                             <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\n//                                 value={input.quantité}\n//                                 onChange={(e) => handleQuantityChange(e, index)}\n//                             />\n//                         </div>\n//                     </div>\n//                 ))}\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Total</label>\n//                         <input type='number' placeholder='Total de la facture' className='form-control' value={calculateTotal()} readOnly />\n//                     </div>\n//                 </div>\n//                 <button type=\"button\" className='btn btn-success' onClick={handleAddInput}>Ajouter</button>\n//                 <button type=\"submit\" className='btn btn-primary'>Enregistrer</button>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default CreateFactureVente;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateFactureVente({\n  onAddFVente,\n  onDelete,\n  selectedFacture\n}) {\n  _s();\n  const [client, setClient] = useState('');\n  const [date, setDate] = useState('');\n  const [code, setCode] = useState('');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0,\n    remise: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [telephone, setTelephone] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:7777/article').then(res => {\n      setReferences(res.data.map(article => article.ref));\n    }).catch(err => console.log(err));\n  }, []);\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/factureVente/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log(err));\n  };\n  const handleReferenceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n    fetchPriceByReference(value, index);\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`).then(res => {\n      const availableQuantity = res.data.quantity;\n      const remainingQuantity = availableQuantity - parseInt(value);\n      if (remainingQuantity < 0) {\n        alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n        newInputs[index].quantité = availableQuantity;\n      } else {\n        newInputs[index].quantité = value;\n      }\n      setInputs(newInputs);\n    }).catch(err => console.error(err));\n  };\n  const handleAddInput = () => {\n    setInputs([...inputs, {\n      refAr: '',\n      price: 0,\n      quantité: '',\n      remise: 0\n    }]);\n  };\n  const calculateTotal = () => {\n    return inputs.reduce((acc, curr) => acc + curr.price * curr.quantité, 0);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const invalidReference = inputs.some(input => !references.includes(input.refAr));\n    if (invalidReference) {\n      alert(\"Sélectionner une référence valide\");\n      return;\n    }\n    const refArArray = [];\n    const quantiteArray = [];\n    const remiseArray = [];\n    inputs.forEach(input => {\n      refArArray.push(input.refAr);\n      quantiteArray.push(input.quantité);\n      remiseArray.push(input.remise);\n    });\n    const totalPrice = calculateTotal();\n    axios.post('http://localhost:7777/factureVente/createFac/', {\n      client,\n      date,\n      code,\n      refAr: refArArray,\n      quantité: quantiteArray,\n      remise: remiseArray,\n      totalPrice\n    }).then(res => {\n      console.log(res);\n      window.location.reload();\n    }).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px',\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: '0.7',\n        marginRight: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            width: '120px'\n          },\n          htmlFor: \"client\",\n          children: \"Nom du client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            width: '200px'\n          },\n          type: \"text\",\n          id: \"client\",\n          value: client,\n          onChange: e => setClient(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            width: '120px'\n          },\n          htmlFor: \"date\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            width: '200px'\n          },\n          type: \"date\",\n          id: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            width: '120px'\n          },\n          htmlFor: \"code\",\n          children: \"Code de la facture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            width: '200px'\n          },\n          type: \"text\",\n          id: \"code\",\n          value: code,\n          onChange: e => setCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            width: '120px'\n          },\n          htmlFor: \"telephone\",\n          children: \"T\\xE9l\\xE9phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            width: '200px'\n          },\n          type: \"text\",\n          id: \"telephone\",\n          value: telephone,\n          onChange: e => setTelephone(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this), inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: '1',\n            marginRight: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"R\\xE9f\\xE9rence d'article\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            list: \"references\",\n            style: {\n              width: '100%'\n            },\n            placeholder: \"S\\xE9lectionner ou saisir une r\\xE9f\\xE9rence...\",\n            value: input.refAr,\n            onChange: e => handleReferenceChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"references\",\n            children: references.map((reference, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: reference\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: '1',\n            marginRight: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Prix vente TTC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            style: {\n              width: '100%'\n            },\n            value: input.price,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: '1',\n            marginRight: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Quantit\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            style: {\n              width: '100%'\n            },\n            value: input.quantité,\n            onChange: e => handleQuantityChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: '1'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Remise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            style: {\n              width: '100%'\n            },\n            value: input.remise,\n            onChange: e => {\n              const newInputs = [...inputs];\n              newInputs[index].remise = e.target.value;\n              setInputs(newInputs);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px',\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: '1',\n            marginRight: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            style: {\n              width: '100%'\n            },\n            value: calculateTotal(),\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px',\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-success\",\n          onClick: handleAddInput,\n          children: \"Ajouter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: handleSubmit,\n          children: \"Enregistrer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateFactureVente, \"XDXlVccn13vIisppcYtblllRznA=\");\n_c = CreateFactureVente;\nexport default CreateFactureVente;\nvar _c;\n$RefreshReg$(_c, \"CreateFactureVente\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CreateFactureVente","onAddFVente","onDelete","selectedFacture","_s","client","setClient","date","setDate","code","setCode","inputs","setInputs","refAr","quantité","price","remise","references","setReferences","telephone","setTelephone","get","then","res","data","map","article","ref","catch","err","console","log","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","event","value","target","handleQuantityChange","availableQuantity","quantity","remainingQuantity","parseInt","alert","error","handleAddInput","calculateTotal","reduce","acc","curr","handleSubmit","preventDefault","invalidReference","some","input","includes","refArArray","quantiteArray","remiseArray","forEach","push","totalPrice","post","window","location","reload","style","margin","display","justifyContent","children","flex","marginRight","marginBottom","width","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","e","list","placeholder","idx","readOnly","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureVente.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function CreateFactureVente() {\r\n//     const [client, setClient] = useState('');\r\n//     const [date, setDate] = useState('');\r\n//     const [code, setCode] = useState('');\r\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0 }]);\r\n//     const [references, setReferences] = useState([]);\r\n//     const [telephone, setTelephone] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/article')\r\n//             .then(res => {\r\n//                 setReferences(res.data.map(article => article.ref));\r\n//             })\r\n//             .catch(err => console.log(err));\r\n//     }, []);\r\n\r\n//     const fetchPriceByReference = (reference, index) => {\r\n//         axios.get(`http://localhost:7777/factureVente/${reference}`) \r\n//             .then(res => {\r\n//                 const price = res.data.price;\r\n//                 const newInputs = [...inputs];\r\n//                 newInputs[index].price = price;\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.log(err));\r\n//     };\r\n\r\n//     const handleReferenceChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].refAr = value;\r\n//         setInputs(newInputs);\r\n//         fetchPriceByReference(value, index); \r\n//     };\r\n\r\n//     const handleQuantityChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n\r\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//             .then(res => {\r\n//                 const availableQuantity = res.data.quantity;\r\n\r\n//                 // Calculate the remaining quantity\r\n//                 const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n//                 if (remainingQuantity < 0) {\r\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//                     // Reset the quantity input field to the available quantity\r\n//                     newInputs[index].quantité = availableQuantity;\r\n//                 } else {\r\n//                     newInputs[index].quantité = value;\r\n//                 }\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.error(err));\r\n//     };\r\n\r\n//     const handleAddInput = () => {\r\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '' }]);\r\n//     };\r\n\r\n//     const calculateTotal = () => {\r\n//         return inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0);\r\n//     };\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n\r\n//         const invalidReference = inputs.some(input => !references.includes(input.refAr));\r\n//         if (invalidReference) {\r\n//             alert(\"Sélectionner une référence valide\");\r\n//             return; // Stop the submission process\r\n//         }\r\n\r\n//         const refArArray = [];\r\n//         const quantiteArray = [];\r\n//         inputs.forEach(input => {\r\n//             refArArray.push(input.refAr);\r\n//             quantiteArray.push(input.quantité);\r\n//         });\r\n\r\n//         const totalPrice = calculateTotal();\r\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//             client,\r\n//             date,\r\n//             code,\r\n//             refAr: refArArray,\r\n//             quantité: quantiteArray,\r\n//             totalPrice\r\n//         })\r\n//             .then(res => {\r\n//                 console.log(res);\r\n//                 // After successful posting, update the quantities in the article table\r\n//                 updateArticleQuantities(refArArray, quantiteArray);\r\n//                 window.location.reload();\r\n//             })\r\n//             .catch(err => console.log(err))\r\n//     };\r\n\r\n//     const updateArticleQuantities = (refArArray, quantiteArray) => {\r\n//         // Iterate over each article reference and its corresponding quantity\r\n//         refArArray.forEach((refAr, index) => {\r\n//             const updatedQuantity = parseInt(quantiteArray[index]);\r\n//             axios.put(`http://localhost:7777/article/${refAr}/updateQuantity`, {\r\n//                 updatedQuantity\r\n//             })\r\n//             .then(res => console.log(res))\r\n//             .catch(err => console.error(err));\r\n//         });\r\n//     };\r\n\r\n//     return (\r\n//         <div className='container mt-5'>\r\n//             <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Nom du client</label>\r\n//                         <input type='text' placeholder='Entrez le nom du client' className='form-control'\r\n//                             onChange={e => setClient(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Date</label>\r\n//                         <input type=\"date\" className='form-control'\r\n//                             onChange={e => setDate(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Code de la facture</label>\r\n//                         <input type='text' placeholder='Entrez le code de la facture' className='form-control'\r\n//                             onChange={e => setCode(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Téléphone</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             className='form-control'\r\n//                             placeholder=\"Entrez le numéro de téléphone\"\r\n//                             value={telephone}\r\n//                             onChange={(e) => setTelephone(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 {inputs.map((input, index) => (\r\n//                     <div className=\"row mb-3\" key={index}>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Référence d'article</label>\r\n//                             <input\r\n//                                 list=\"references\"\r\n//                                 className='form-control'\r\n//                                 placeholder=\"Select or type reference...\"\r\n//                                 value={input.refAr}\r\n//                                 onChange={(e) => handleReferenceChange(e, index)}\r\n//                             />\r\n//                             <datalist id=\"references\">\r\n//                                 {references.map((reference, idx) => (\r\n//                                     <option key={idx} value={reference} />\r\n//                                 ))}\r\n//                             </datalist>\r\n//                         </div>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Prix vente TTC</label>\r\n//                             <input type='number' placeholder=\"Prix d'article\" className='form-control'\r\n//                                 value={input.price} // Display the price\r\n//                                 readOnly // Make it read-only\r\n//                             />\r\n//                         </div>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Quantité</label>\r\n//                             <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\r\n//                                 value={input.quantité}\r\n//                                 onChange={(e) => handleQuantityChange(e, index)}\r\n//                             />\r\n//                         </div>\r\n//                     </div>\r\n//                 ))}\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Total</label>\r\n//                         <input type='number' placeholder='Total de la facture' className='form-control' value={calculateTotal()} readOnly />\r\n//                     </div>\r\n//                 </div>\r\n//                 <button type=\"button\" className='btn btn-success' onClick={handleAddInput}>Ajouter</button>\r\n//                 <button type=\"submit\" className='btn btn-primary'>Enregistrer</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CreateFactureVente({ onAddFVente, onDelete, selectedFacture }) {\r\n    const [client, setClient] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [code, setCode] = useState('');\r\n    const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n    const [references, setReferences] = useState([]);\r\n    const [telephone, setTelephone] = useState('');\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7777/article')\r\n            .then(res => {\r\n                setReferences(res.data.map(article => article.ref));\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    const fetchPriceByReference = (reference, index) => {\r\n        axios.get(`http://localhost:7777/factureVente/${reference}`) \r\n            .then(res => {\r\n                const price = res.data.price;\r\n                const newInputs = [...inputs];\r\n                newInputs[index].price = price;\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    const handleReferenceChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].refAr = value;\r\n        setInputs(newInputs);\r\n        fetchPriceByReference(value, index); \r\n    };\r\n\r\n    const handleQuantityChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n\r\n        axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n            .then(res => {\r\n                const availableQuantity = res.data.quantity;\r\n\r\n                const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n                if (remainingQuantity < 0) {\r\n                    alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n                    newInputs[index].quantité = availableQuantity;\r\n                } else {\r\n                    newInputs[index].quantité = value;\r\n                }\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.error(err));\r\n    };\r\n\r\n    const handleAddInput = () => {\r\n        setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n    };\r\n\r\n    const calculateTotal = () => {\r\n        return inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const invalidReference = inputs.some(input => !references.includes(input.refAr));\r\n        if (invalidReference) {\r\n            alert(\"Sélectionner une référence valide\");\r\n            return;\r\n        }\r\n\r\n        const refArArray = [];\r\n        const quantiteArray = [];\r\n        const remiseArray = [];\r\n        inputs.forEach(input => {\r\n            refArArray.push(input.refAr);\r\n            quantiteArray.push(input.quantité);\r\n            remiseArray.push(input.remise);\r\n        });\r\n\r\n        const totalPrice = calculateTotal();\r\n        axios.post('http://localhost:7777/factureVente/createFac/', {\r\n            client,\r\n            date,\r\n            code,\r\n            refAr: refArArray,\r\n            quantité: quantiteArray,\r\n            remise: remiseArray,\r\n            totalPrice\r\n        })\r\n            .then(res => {\r\n                console.log(res);\r\n                window.location.reload();\r\n            })\r\n            .catch(err => console.log(err))\r\n    };\r\n\r\n    return (\r\n        <div style={{ margin: '20px', display: 'flex', justifyContent: 'flex-end' }}>\r\n            <div style={{ flex: '0.7', marginRight: '10px' }}>\r\n                <div style={{ marginBottom: '10px' }}>\r\n                    <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n                    <input\r\n                        style={{ width: '200px' }}\r\n                        type=\"text\"\r\n                        id=\"client\"\r\n                        value={client}\r\n                        onChange={(e) => setClient(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div style={{ marginBottom: '10px' }}>\r\n                    <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n                    <input\r\n                        style={{ width: '200px' }}\r\n                        type=\"date\"\r\n                        id=\"date\"\r\n                        value={date}\r\n                        onChange={(e) => setDate(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div style={{ marginBottom: '10px' }}>\r\n                    <label style={{ width: '120px' }} htmlFor=\"code\">Code de la facture</label>\r\n                    <input\r\n                        style={{ width: '200px' }}\r\n                        type=\"text\"\r\n                        id=\"code\"\r\n                        value={code}\r\n                        onChange={(e) => setCode(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div style={{ marginBottom: '10px' }}>\r\n                    <label style={{ width: '120px' }} htmlFor=\"telephone\">Téléphone</label>\r\n                    <input\r\n                        style={{ width: '200px' }}\r\n                        type=\"text\"\r\n                        id=\"telephone\"\r\n                        value={telephone}\r\n                        onChange={(e) => setTelephone(e.target.value)}\r\n                    />\r\n                </div>\r\n                {inputs.map((input, index) => (\r\n                    <div key={index} style={{ display: 'flex', marginBottom: '10px' }}>\r\n                        <div style={{ flex: '1', marginRight: '10px' }}>\r\n                            <label>Référence d'article</label>\r\n                            <input\r\n                                list=\"references\"\r\n                                style={{ width: '100%' }}\r\n                                placeholder=\"Sélectionner ou saisir une référence...\"\r\n                                value={input.refAr}\r\n                                onChange={(e) => handleReferenceChange(e, index)}\r\n                            />\r\n                            <datalist id=\"references\">\r\n                                {references.map((reference, idx) => (\r\n                                    <option key={idx} value={reference} />\r\n                                ))}\r\n                            </datalist>\r\n                        </div>\r\n                        <div style={{ flex: '1', marginRight: '10px' }}>\r\n                            <label>Prix vente TTC</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                style={{ width: '100%' }}\r\n                                value={input.price}\r\n                                readOnly\r\n                            />\r\n                        </div>\r\n                        <div style={{ flex: '1', marginRight: '10px' }}>\r\n                            <label>Quantité</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                style={{ width: '100%' }}\r\n                                value={input.quantité}\r\n                                onChange={(e) => handleQuantityChange(e, index)}\r\n                            />\r\n                        </div>\r\n                        <div style={{ flex: '1' }}>\r\n                            <label>Remise</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                style={{ width: '100%' }}\r\n                                value={input.remise}\r\n                                onChange={(e) => {\r\n                                    const newInputs = [...inputs];\r\n                                    newInputs[index].remise = e.target.value;\r\n                                    setInputs(newInputs);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                <div style={{ marginBottom:'10px',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                }}\r\n                >\r\n                    <div style={{ flex: '1', marginRight: '10px' }}>\r\n                        <label>Total</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            style={{ width: '100%' }}\r\n                            value={calculateTotal()}\r\n                            readOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div style={{ marginBottom: '10px', display: 'flex', justifyContent: 'center' }}>\r\n                    <button type=\"button\" className=\"btn btn-success\" onClick={handleAddInput}>Ajouter</button>\r\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={handleSubmit}>Enregistrer</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateFactureVente;\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,kBAAkBA,CAAC;EAAEC,WAAW;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACpE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,IAAI,EAAEC,OA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}