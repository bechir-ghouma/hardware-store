{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\CreateFactureAchat.js\",\n  _s = $RefreshSig$();\n//   const handleUpdate = async (event) => {\n//     event.preventDefault();\n\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//     if (invalidReference) {\n//       alert(\"Sélectionner une référence valide\");\n//       return;\n//     }\n\n//     const refArArray = nonEmptyInputs.map(input => ({\n//       refAr: input.refAr,\n//       price: input.price,\n//       quantité: input.quantité,\n//       remise: input.remise\n//     }));\n\n//     const totalPrice = calculateTotal();\n//     try {\n//       const res = await axios.put(`http://localhost:7777/factureVente/update/${selectedFacture.id}`, {\n//         fssName,\n//         fssID,\n//         date,\n//         DT,\n//         articles: refArArray,\n//         totalPrice\n//       });\n//       console.log(res.data);\n//       await updateStock(refArArray); // Update stock after successful update\n//       window.location.reload();\n//     } catch (err) {\n//       console.log('Error updating facture:', err);\n//     }\n//   };\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import axios from 'axios';\n\n// function CreateFactureVente({ selectedFacture }) {\n//   const [fssName, setfssName] = useState('');\n// //  ahou kifeh kenet const [client_id, setClientCode] = useState('');\n//   const [fssID, setfssCode] = useState('');\n//   const [date, setDate] = useState('');\n//   const [DT, setDT] = useState('1.000');\n//   const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//   const [references, setReferences] = useState([]);\n//   const [filteredfss, setFilteredfss] = useState([]);\n\n//   const remiseInputRef = useRef(null);\n\n//   useEffect(() => {\n//     axios.get('http://localhost:7777/article')\n//       .then(res => {\n//         setReferences(res.data.map(article => article.ref));\n//       })\n//       .catch(err => console.log('Error fetching articles:', err));\n//   }, []);\n//   useEffect(() => {\n//     if (selectedFacture) {\n//       console.log('Selected Facture in CreateFactureAchat:', selectedFacture);\n//       setfssName(selectedFacture.fssName || '');\n//       setfssCode(selectedFacture.fssID || '');\n//       setDate(selectedFacture.date || '');\n//       setDT(selectedFacture.DT || '1.000');\n//       setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//     }\n//   }, [selectedFacture]);\n\n//   const handleAddInput = () => {\n//     const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n//     if (isEmpty) {\n//       alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n//       return;\n//     }\n//     setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\n//   };\n//   const handleKeyPress = (event) => {\n//     if (event.key === 'Enter') {\n//       handleAddInput();\n//     }\n//   };\n//   const fetchPriceByReference = (reference, index) => {\n//     axios.get(`http://localhost:7777/factureVente/${reference}`)\n//       .then(res => {\n//         const price = res.data.price;\n//         const newInputs = [...inputs];\n//         newInputs[index].price = price;\n//         setInputs(newInputs);\n//       })\n//       .catch(err => console.log('Error fetching price:', err));\n//   };\n//   const handleReferenceChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].refAr = value;\n//     setInputs(newInputs);\n//     fetchPriceByReference(value, index);\n//   };\n//   const handleQuantityChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].quantité = value;\n\n//     // Check if value is a valid number\n//     if (!isNaN(value) && value !== '') {\n//       axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//         .then(res => {\n//           const availableQuantity = res.data.quantity;\n//           const remainingQuantity = availableQuantity - parseInt(value);\n\n//           if (remainingQuantity < 0) {\n//             alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//             newInputs[index].quantité = availableQuantity; // Setting the input quantity to available quantity\n//           }\n\n//           setInputs(newInputs);\n//         })\n//         .catch(err => console.error('Error fetching quantity:', err));\n//     } \n//     else {\n//       // Handle case where value is not a valid number\n//       alert('Veuillez entrer une quantité valide.');\n//     }\n//   };\n//   const handleRemiseChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].remise = value;\n//     setInputs(newInputs);\n//   };\n//     const calculateTotal = () => {\n//     if (!inputs) return 0;\n//     const total = inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité) * (1 - (curr.remise / 100)), 0) + parseFloat(DT);\n//     return total.toFixed(3);\n//   };\n//     const updateStock = async (inputs) => {\n//     try {\n//       for (const input of inputs) {\n//         if (!isNaN(input.quantité) && input.quantité !== '') {\n//           const response = await axios.put(`http://localhost:7777/article/${input.refAr}/updateStock`, { quantity: input.quantité });\n//           console.log(`Stock updated for ${input.refAr}:`, response.data);\n//         }\n//       }\n//     } catch (error) {\n//       console.error('Error updating stock:', error);\n//     }\n//   };\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//     if (invalidReference) {\n//       alert(\"Sélectionner une référence valide\");\n//       return;\n//     }\n\n//     const refArArray = nonEmptyInputs.map(input => ({\n//       refAr: input.refAr,\n//       price: input.price,\n//       quantité: input.quantité,\n//       remise: input.remise\n//     }));\n\n//     const totalPrice = calculateTotal();\n//     const payload = {\n//       fssName,\n//       fssID,\n//       date,\n//       DT,\n//       refAr: refArArray,\n//       totalPrice\n//     };\n\n//     console.log(\"Sending payload:\", payload); // Log payload for debugging\n\n//     try {\n//       const res = await axios.post('http://localhost:7777/factureAchat/createFacAchat/', payload);\n//       console.log(res.data);\n//       await updateStock(refArArray); \n//       window.location.reload();\n//     } catch (err) {\n//       console.log(\"Error creating facture d'achat:\", err);\n//       if (err.response && err.response.data) {\n//         console.error(\"Server response:\", err.response.data); // Log server response\n//       }\n//     }\n// };\n// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n//   const handleClientSelect = (name, code) => {\n//     setfssName(name);\n//     setfssCode(code);\n//     setFilteredfss([]);\n//   };\n\n//   const handleClientChange = (e) => {\n//     const { value } = e.target;\n//     setfssName(value);\n\n//     axios.get(`http://localhost:7777/fss/search?name=${value}`)\n//       .then(res => {\n//         setFilteredfss(res.data);\n//       })\n//       .catch(err => console.log('Error fetching clients:', err));\n\n//     axios.get(`http://localhost:7777/fss/search?name=${value}`)\n//       .then(res => {\n//         if (res.data.length > 0) {\n//           setfssCode(res.data[0].clID);\n//         } else {\n//           setfssCode('');\n//         }\n//       })\n//       .catch(err => console.log('Error fetching client code:', err));\n//   };\n\n//   const handleClientBlur = () => {\n//     setFilteredfss([]);\n//   };\n\n//   const handleClientCodeChange = (e) => {\n//     const { value } = e.target;\n//     setfssCode(value);\n\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\n//       .then(res => {\n//         if (res.data.length > 0) {\n//           setfssName(res.data[0].fssName);\n//         } else {\n//           setfssName('');\n//         }\n//       })\n//       .catch(err => console.log('Error fetching client name:', err));\n//   };\n\n// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n//   return (\n//     <div style={{ margin: '20px', justifyContent: 'center' }}>\n//       <div style={{ display: 'flex', flex: '1' }}>\n//         <div>\n//           <div style={{ marginBottom: '20px' }} >\n//             <label style={{ width: '120px' }} htmlFor=\"code-client\">Code fournisseur:</label>\n//             <input\n//               style={{ width: '200px' }}\n//               type=\"text\"\n//               id=\"code-client\"\n//               name=\"code-client\"\n//               value={fssID}\n//               onChange={handleClientCodeChange}\n//             />\n//           </div>\n//           <div style={{ marginBottom: '20px', position: 'relative' }}>\n//             <label style={{ width: '120px' }} htmlFor=\"client\">Nom du fournisseur</label>\n//             <input\n//               style={{ width: '200px' }}\n//               type=\"text\"\n//               id=\"client\"\n//               value={fssName}\n//               onChange={handleClientChange}\n//               onBlur={handleClientBlur}\n//             />\n//             {filteredfss.length > 0 && (\n//               <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\n//                 {filteredfss.map((fss, index) => (\n//                   <div key={index} style={{ padding: '5px', cursor: 'pointer' }} \n//                   onClick={() => handleClientSelect(fss.fssName, fss.fssID)}\n//                   >\n//                      {fss.fssName}\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//           <div style={{ marginBottom: '20px' }}>\n//             <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\n//             <input\n//               style={{ width: '200px' }}\n//               type=\"date\"\n//               id=\"date\"\n//               value={date}\n//               onChange={(e) => setDate(e.target.value)}\n//             />\n//           </div>\n//           <div style={{ marginBottom: '20px' }}>\n//             <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\n//             <input\n//               style={{ width: '200px' }}\n//               type=\"text\"\n//               id=\"DT\"\n//               value={DT}\n//               onChange={(e) => setDT(e.target.value)}\n//             />\n//           </div>\n//         </div>\n//         <div>\n//           {inputs.map((input, index) => (\n//             <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//               <div style={{ flex: '1', marginRight: '10px' }}>\n//                 <label>Référence d'article</label>\n//                 <input\n//                   list=\"references\"\n//                   style={{ width: '100%' }}\n//                   value={input.refAr}\n//                   onChange={(e) => handleReferenceChange(e, index)}\n//                 />\n//                 <datalist id=\"references\">\n//                   {references.map((reference, idx) => (\n//                     <option key={idx} value={reference} />\n//                   ))}\n//                 </datalist>\n//               </div>\n//               <div style={{ flex: '1', marginRight: '10px' }}>\n//                 <label>Prix vente TTC</label>\n//                 <input\n//                   type=\"number\"\n//                   style={{ width: '100%' }}\n//                   value={input.price}\n//                   readOnly\n//                 />\n//               </div>\n//               <div style={{ flex: '1', marginRight: '10px' }}>\n//                 <label>Quantité</label>\n//                 <input\n//                   type=\"number\"\n//                   style={{ width: '100%' }}\n//                   value={input.quantité}\n//                   onChange={(e) => handleQuantityChange(e, index)}\n//                 />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center' }}>\n//                 <div style={{ flex: '1' }}>\n//                   <label>Remise</label>\n//                   <input\n//                     type=\"number\"\n//                     style={{ width: '100%' }}\n//                     value={input.remise}\n//                     onChange={(e) => handleRemiseChange(e, index)}\n//                     onKeyDown={handleKeyPress}\n//                     ref={remiseInputRef}\n//                   />\n//                 </div>\n//                 <div style={{ marginLeft: '10px' }}>\n//                   <button type=\"button\" onClick={handleAddInput}>+</button>\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//         <div>\n//           <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\n//             <button\n//               style={{ width: '200px', marginBottom: '10px' }}\n//               type=\"button\"\n//               onClick={handleSubmit}\n//             >\n//               Ajouter\n//             </button>\n//             <button\n//               style={{ width: '200px', marginBottom: '10px' }}\n//               type=\"submit\"\n//               // onClick={handleUpdate}\n//             >\n//               {selectedFacture ? 'Mettre à jour' : 'Enregistrer'}\n//             </button><br />\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ marginBottom: '20px' }}>\n//         <label>Total</label>\n//         <input\n//         // type='text'\n//         style={{ width: '100%' }}\n//         value={calculateTotal()}\n//         readOnly\n//       />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default CreateFactureVente;\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateFactureVente({\n  selectedFacture,\n  onFactureSubmit\n}) {\n  _s();\n  const [fssName, setfssName] = useState('');\n  const [fssID, setfssCode] = useState('');\n  const [date, setDate] = useState('');\n  const [DT, setDT] = useState('1.000');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0,\n    remise: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [filteredfss, setFilteredfss] = useState([]);\n  const remiseInputRef = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:7777/article').then(res => {\n      setReferences(res.data.map(article => article.ref));\n    }).catch(err => console.log('Error fetching articles:', err));\n  }, []);\n  useEffect(() => {\n    if (selectedFacture) {\n      console.log('Selected Facture in CreateFactureAchat:', selectedFacture);\n      setfssName(selectedFacture.fssName || '');\n      setfssCode(selectedFacture.fssID || '');\n      setDate(selectedFacture.date || '');\n      setDT(selectedFacture.DT || '1.000');\n      setInputs(selectedFacture.articles || [{\n        refAr: '',\n        quantité: '',\n        price: 0,\n        remise: 0\n      }]);\n    }\n  }, [selectedFacture]);\n  const handleAddInput = () => {\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n    if (isEmpty) {\n      alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n      return;\n    }\n    setInputs([...inputs, {\n      refAr: '',\n      price: 0,\n      quantité: '',\n      remise: 0\n    }]);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleAddInput();\n    }\n  };\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/factureVente/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log('Error fetching price:', err));\n  };\n  const handleReferenceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n    fetchPriceByReference(value, index);\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].quantité = value;\n    setInputs(newInputs);\n  };\n  const handlePriceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].price = value;\n    setInputs(newInputs);\n  };\n  const handleRemiseChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].remise = value;\n    setInputs(newInputs);\n  };\n  const handlefssNameChange = event => {\n    const {\n      value\n    } = event.target;\n    setfssName(value);\n    if (value.trim() === '') {\n      setFilteredfss([]);\n    } else {\n      axios.get(`http://localhost:7777/factureAchat?fssName=${value}`).then(res => {\n        setFilteredfss(res.data);\n      }).catch(err => console.log('Error fetching fournisseurs:', err));\n    }\n  };\n  const handlefssCodeChange = event => {\n    const {\n      value\n    } = event.target;\n    setfssCode(value);\n  };\n  const handleDateChange = event => {\n    const {\n      value\n    } = event.target;\n    setDate(value);\n  };\n  const handleDTChange = event => {\n    const {\n      value\n    } = event.target;\n    setDT(value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const hasEmptyField = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n    if (hasEmptyField) {\n      alert(\"Veuillez remplir tous les champs.\");\n      return;\n    }\n    const newFactureData = {\n      fssName,\n      fssID,\n      date,\n      DT,\n      articles: inputs.map(input => ({\n        refAr: input.refAr,\n        price: input.price,\n        quantité: input.quantité,\n        remise: input.remise\n      }))\n    };\n    onFactureSubmit(newFactureData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    onKeyPress: handleKeyPress,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fssName\",\n        children: \"Nom du fournisseur:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"fssName\",\n        value: fssName,\n        onChange: handlefssNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this), filteredfss.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: filteredfss.map(fss => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          onClick: () => {\n            setfssName(fss.fssName);\n            setFilteredfss([]);\n          },\n          children: fss.fssName\n        }, fss.fssID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fssCode\",\n        children: \"Code du fournisseur:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"fssCode\",\n        value: fssID,\n        onChange: handlefssCodeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"form-control\",\n        id: \"date\",\n        value: date,\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"DT\",\n        children: \"DT:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"DT\",\n        value: DT,\n        onChange: handleDTChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 7\n    }, this), inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-md-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `reference-${index}`,\n          children: \"R\\xE9f\\xE9rence:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: `reference-${index}`,\n          value: input.refAr,\n          onChange: event => handleReferenceChange(event, index),\n          list: \"reference-list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"reference-list\",\n          children: references.map((reference, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: reference\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-md-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `quantity-${index}`,\n          children: \"Quantit\\xE9:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: `quantity-${index}`,\n          value: input.quantité,\n          onChange: event => handleQuantityChange(event, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-md-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `price-${index}`,\n          children: \"Prix:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: `price-${index}`,\n          value: input.price,\n          onChange: event => handlePriceChange(event, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-md-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `remise-${index}`,\n          children: \"Remise:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: `remise-${index}`,\n          value: input.remise,\n          onChange: event => handleRemiseChange(event, index),\n          ref: remiseInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: handleAddInput,\n      children: \"Ajouter une ligne\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      children: \"Cr\\xE9er la facture d'achat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 538,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateFactureVente, \"CuuVlbfF0bh+/fX1ZUFkXuFE3wY=\");\n_c = CreateFactureVente;\nexport default CreateFactureVente;\nvar _c;\n$RefreshReg$(_c, \"CreateFactureVente\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","CreateFactureVente","selectedFacture","onFactureSubmit","_s","fssName","setfssName","fssID","setfssCode","date","setDate","DT","setDT","inputs","setInputs","refAr","quantité","price","remise","references","setReferences","filteredfss","setFilteredfss","remiseInputRef","get","then","res","data","map","article","ref","catch","err","console","log","articles","handleAddInput","isEmpty","some","input","alert","handleKeyPress","event","key","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","value","target","handleQuantityChange","handlePriceChange","handleRemiseChange","handlefssNameChange","trim","handlefssCodeChange","handleDateChange","handleDTChange","handleSubmit","preventDefault","hasEmptyField","newFactureData","onSubmit","onKeyPress","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","length","fss","onClick","list","i","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureAchat.js"],"sourcesContent":["\r\n\r\n\r\n//   const handleUpdate = async (event) => {\r\n//     event.preventDefault();\r\n  \r\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n  \r\n//     if (invalidReference) {\r\n//       alert(\"Sélectionner une référence valide\");\r\n//       return;\r\n//     }\r\n  \r\n//     const refArArray = nonEmptyInputs.map(input => ({\r\n//       refAr: input.refAr,\r\n//       price: input.price,\r\n//       quantité: input.quantité,\r\n//       remise: input.remise\r\n//     }));\r\n  \r\n//     const totalPrice = calculateTotal();\r\n//     try {\r\n//       const res = await axios.put(`http://localhost:7777/factureVente/update/${selectedFacture.id}`, {\r\n//         fssName,\r\n//         fssID,\r\n//         date,\r\n//         DT,\r\n//         articles: refArArray,\r\n//         totalPrice\r\n//       });\r\n//       console.log(res.data);\r\n//       await updateStock(refArArray); // Update stock after successful update\r\n//       window.location.reload();\r\n//     } catch (err) {\r\n//       console.log('Error updating facture:', err);\r\n//     }\r\n//   };\r\n  \r\n\r\n// import React, { useState, useEffect, useRef } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function CreateFactureVente({ selectedFacture }) {\r\n//   const [fssName, setfssName] = useState('');\r\n// //  ahou kifeh kenet const [client_id, setClientCode] = useState('');\r\n//   const [fssID, setfssCode] = useState('');\r\n//   const [date, setDate] = useState('');\r\n//   const [DT, setDT] = useState('1.000');\r\n//   const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//   const [references, setReferences] = useState([]);\r\n//   const [filteredfss, setFilteredfss] = useState([]);\r\n\r\n//   const remiseInputRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     axios.get('http://localhost:7777/article')\r\n//       .then(res => {\r\n//         setReferences(res.data.map(article => article.ref));\r\n//       })\r\n//       .catch(err => console.log('Error fetching articles:', err));\r\n//   }, []);\r\n//   useEffect(() => {\r\n//     if (selectedFacture) {\r\n//       console.log('Selected Facture in CreateFactureAchat:', selectedFacture);\r\n//       setfssName(selectedFacture.fssName || '');\r\n//       setfssCode(selectedFacture.fssID || '');\r\n//       setDate(selectedFacture.date || '');\r\n//       setDT(selectedFacture.DT || '1.000');\r\n//       setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//     }\r\n//   }, [selectedFacture]);\r\n\r\n//   const handleAddInput = () => {\r\n//     const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n//     if (isEmpty) {\r\n//       alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n//       return;\r\n//     }\r\n//     setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n//   };\r\n//   const handleKeyPress = (event) => {\r\n//     if (event.key === 'Enter') {\r\n//       handleAddInput();\r\n//     }\r\n//   };\r\n//   const fetchPriceByReference = (reference, index) => {\r\n//     axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n//       .then(res => {\r\n//         const price = res.data.price;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].price = price;\r\n//         setInputs(newInputs);\r\n//       })\r\n//       .catch(err => console.log('Error fetching price:', err));\r\n//   };\r\n//   const handleReferenceChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].refAr = value;\r\n//     setInputs(newInputs);\r\n//     fetchPriceByReference(value, index);\r\n//   };\r\n//   const handleQuantityChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].quantité = value;\r\n  \r\n//     // Check if value is a valid number\r\n//     if (!isNaN(value) && value !== '') {\r\n//       axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//         .then(res => {\r\n//           const availableQuantity = res.data.quantity;\r\n//           const remainingQuantity = availableQuantity - parseInt(value);\r\n  \r\n//           if (remainingQuantity < 0) {\r\n//             alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//             newInputs[index].quantité = availableQuantity; // Setting the input quantity to available quantity\r\n//           }\r\n  \r\n//           setInputs(newInputs);\r\n//         })\r\n//         .catch(err => console.error('Error fetching quantity:', err));\r\n//     } \r\n//     else {\r\n//       // Handle case where value is not a valid number\r\n//       alert('Veuillez entrer une quantité valide.');\r\n//     }\r\n//   };\r\n//   const handleRemiseChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].remise = value;\r\n//     setInputs(newInputs);\r\n//   };\r\n//     const calculateTotal = () => {\r\n//     if (!inputs) return 0;\r\n//     const total = inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité) * (1 - (curr.remise / 100)), 0) + parseFloat(DT);\r\n//     return total.toFixed(3);\r\n//   };\r\n//     const updateStock = async (inputs) => {\r\n//     try {\r\n//       for (const input of inputs) {\r\n//         if (!isNaN(input.quantité) && input.quantité !== '') {\r\n//           const response = await axios.put(`http://localhost:7777/article/${input.refAr}/updateStock`, { quantity: input.quantité });\r\n//           console.log(`Stock updated for ${input.refAr}:`, response.data);\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error updating stock:', error);\r\n//     }\r\n//   };\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//     const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n//     if (invalidReference) {\r\n//       alert(\"Sélectionner une référence valide\");\r\n//       return;\r\n//     }\r\n\r\n//     const refArArray = nonEmptyInputs.map(input => ({\r\n//       refAr: input.refAr,\r\n//       price: input.price,\r\n//       quantité: input.quantité,\r\n//       remise: input.remise\r\n//     }));\r\n\r\n//     const totalPrice = calculateTotal();\r\n//     const payload = {\r\n//       fssName,\r\n//       fssID,\r\n//       date,\r\n//       DT,\r\n//       refAr: refArArray,\r\n//       totalPrice\r\n//     };\r\n\r\n//     console.log(\"Sending payload:\", payload); // Log payload for debugging\r\n\r\n//     try {\r\n//       const res = await axios.post('http://localhost:7777/factureAchat/createFacAchat/', payload);\r\n//       console.log(res.data);\r\n//       await updateStock(refArArray); \r\n//       window.location.reload();\r\n//     } catch (err) {\r\n//       console.log(\"Error creating facture d'achat:\", err);\r\n//       if (err.response && err.response.data) {\r\n//         console.error(\"Server response:\", err.response.data); // Log server response\r\n//       }\r\n//     }\r\n// };\r\n// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n//   const handleClientSelect = (name, code) => {\r\n//     setfssName(name);\r\n//     setfssCode(code);\r\n//     setFilteredfss([]);\r\n//   };\r\n\r\n//   const handleClientChange = (e) => {\r\n//     const { value } = e.target;\r\n//     setfssName(value);\r\n\r\n//     axios.get(`http://localhost:7777/fss/search?name=${value}`)\r\n//       .then(res => {\r\n//         setFilteredfss(res.data);\r\n//       })\r\n//       .catch(err => console.log('Error fetching clients:', err));\r\n\r\n//     axios.get(`http://localhost:7777/fss/search?name=${value}`)\r\n//       .then(res => {\r\n//         if (res.data.length > 0) {\r\n//           setfssCode(res.data[0].clID);\r\n//         } else {\r\n//           setfssCode('');\r\n//         }\r\n//       })\r\n//       .catch(err => console.log('Error fetching client code:', err));\r\n//   };\r\n\r\n//   const handleClientBlur = () => {\r\n//     setFilteredfss([]);\r\n//   };\r\n\r\n//   const handleClientCodeChange = (e) => {\r\n//     const { value } = e.target;\r\n//     setfssCode(value);\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\r\n//       .then(res => {\r\n//         if (res.data.length > 0) {\r\n//           setfssName(res.data[0].fssName);\r\n//         } else {\r\n//           setfssName('');\r\n//         }\r\n//       })\r\n//       .catch(err => console.log('Error fetching client name:', err));\r\n//   };\r\n\r\n\r\n\r\n\r\n\r\n// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  \r\n//   return (\r\n//     <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n//       <div style={{ display: 'flex', flex: '1' }}>\r\n//         <div>\r\n//           <div style={{ marginBottom: '20px' }} >\r\n//             <label style={{ width: '120px' }} htmlFor=\"code-client\">Code fournisseur:</label>\r\n//             <input\r\n//               style={{ width: '200px' }}\r\n//               type=\"text\"\r\n//               id=\"code-client\"\r\n//               name=\"code-client\"\r\n//               value={fssID}\r\n//               onChange={handleClientCodeChange}\r\n//             />\r\n//           </div>\r\n//           <div style={{ marginBottom: '20px', position: 'relative' }}>\r\n//             <label style={{ width: '120px' }} htmlFor=\"client\">Nom du fournisseur</label>\r\n//             <input\r\n//               style={{ width: '200px' }}\r\n//               type=\"text\"\r\n//               id=\"client\"\r\n//               value={fssName}\r\n//               onChange={handleClientChange}\r\n//               onBlur={handleClientBlur}\r\n//             />\r\n//             {filteredfss.length > 0 && (\r\n//               <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\r\n//                 {filteredfss.map((fss, index) => (\r\n//                   <div key={index} style={{ padding: '5px', cursor: 'pointer' }} \r\n//                   onClick={() => handleClientSelect(fss.fssName, fss.fssID)}\r\n//                   >\r\n//                      {fss.fssName}\r\n//                   </div>\r\n//                 ))}\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//           <div style={{ marginBottom: '20px' }}>\r\n//             <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n//             <input\r\n//               style={{ width: '200px' }}\r\n//               type=\"date\"\r\n//               id=\"date\"\r\n//               value={date}\r\n//               onChange={(e) => setDate(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div style={{ marginBottom: '20px' }}>\r\n//             <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\r\n//             <input\r\n//               style={{ width: '200px' }}\r\n//               type=\"text\"\r\n//               id=\"DT\"\r\n//               value={DT}\r\n//               onChange={(e) => setDT(e.target.value)}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//         <div>\r\n//           {inputs.map((input, index) => (\r\n//             <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//               <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                 <label>Référence d'article</label>\r\n//                 <input\r\n//                   list=\"references\"\r\n//                   style={{ width: '100%' }}\r\n//                   value={input.refAr}\r\n//                   onChange={(e) => handleReferenceChange(e, index)}\r\n//                 />\r\n//                 <datalist id=\"references\">\r\n//                   {references.map((reference, idx) => (\r\n//                     <option key={idx} value={reference} />\r\n//                   ))}\r\n//                 </datalist>\r\n//               </div>\r\n//               <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                 <label>Prix vente TTC</label>\r\n//                 <input\r\n//                   type=\"number\"\r\n//                   style={{ width: '100%' }}\r\n//                   value={input.price}\r\n//                   readOnly\r\n//                 />\r\n//               </div>\r\n//               <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                 <label>Quantité</label>\r\n//                 <input\r\n//                   type=\"number\"\r\n//                   style={{ width: '100%' }}\r\n//                   value={input.quantité}\r\n//                   onChange={(e) => handleQuantityChange(e, index)}\r\n//                 />\r\n//               </div>\r\n//               <div style={{ display: 'flex', alignItems: 'center' }}>\r\n//                 <div style={{ flex: '1' }}>\r\n//                   <label>Remise</label>\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     style={{ width: '100%' }}\r\n//                     value={input.remise}\r\n//                     onChange={(e) => handleRemiseChange(e, index)}\r\n//                     onKeyDown={handleKeyPress}\r\n//                     ref={remiseInputRef}\r\n//                   />\r\n//                 </div>\r\n//                 <div style={{ marginLeft: '10px' }}>\r\n//                   <button type=\"button\" onClick={handleAddInput}>+</button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//         <div>\r\n//           <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\r\n//             <button\r\n//               style={{ width: '200px', marginBottom: '10px' }}\r\n//               type=\"button\"\r\n//               onClick={handleSubmit}\r\n//             >\r\n//               Ajouter\r\n//             </button>\r\n//             <button\r\n//               style={{ width: '200px', marginBottom: '10px' }}\r\n//               type=\"submit\"\r\n//               // onClick={handleUpdate}\r\n//             >\r\n//               {selectedFacture ? 'Mettre à jour' : 'Enregistrer'}\r\n//             </button><br />\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <div style={{ marginBottom: '20px' }}>\r\n//         <label>Total</label>\r\n//         <input\r\n//         // type='text'\r\n//         style={{ width: '100%' }}\r\n//         value={calculateTotal()}\r\n//         readOnly\r\n//       />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CreateFactureVente({ selectedFacture, onFactureSubmit }) {\r\n  const [fssName, setfssName] = useState('');\r\n  const [fssID, setfssCode] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [DT, setDT] = useState('1.000');\r\n  const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n  const [references, setReferences] = useState([]);\r\n  const [filteredfss, setFilteredfss] = useState([]);\r\n\r\n  const remiseInputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:7777/article')\r\n      .then(res => {\r\n        setReferences(res.data.map(article => article.ref));\r\n      })\r\n      .catch(err => console.log('Error fetching articles:', err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedFacture) {\r\n      console.log('Selected Facture in CreateFactureAchat:', selectedFacture);\r\n      setfssName(selectedFacture.fssName || '');\r\n      setfssCode(selectedFacture.fssID || '');\r\n      setDate(selectedFacture.date || '');\r\n      setDT(selectedFacture.DT || '1.000');\r\n      setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n    }\r\n  }, [selectedFacture]);\r\n\r\n  const handleAddInput = () => {\r\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n    if (isEmpty) {\r\n      alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n      return;\r\n    }\r\n    setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleAddInput();\r\n    }\r\n  };\r\n\r\n  const fetchPriceByReference = (reference, index) => {\r\n    axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n      .then(res => {\r\n        const price = res.data.price;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].price = price;\r\n        setInputs(newInputs);\r\n      })\r\n      .catch(err => console.log('Error fetching price:', err));\r\n  };\r\n\r\n  const handleReferenceChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].refAr = value;\r\n    setInputs(newInputs);\r\n    fetchPriceByReference(value, index);\r\n  };\r\n\r\n  const handleQuantityChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].quantité = value;\r\n    setInputs(newInputs);\r\n  };\r\n\r\n  const handlePriceChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].price = value;\r\n    setInputs(newInputs);\r\n  };\r\n\r\n  const handleRemiseChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].remise = value;\r\n    setInputs(newInputs);\r\n  };\r\n\r\n  const handlefssNameChange = (event) => {\r\n    const { value } = event.target;\r\n    setfssName(value);\r\n    if (value.trim() === '') {\r\n      setFilteredfss([]);\r\n    } else {\r\n      axios.get(`http://localhost:7777/factureAchat?fssName=${value}`)\r\n        .then(res => {\r\n          setFilteredfss(res.data);\r\n        })\r\n        .catch(err => console.log('Error fetching fournisseurs:', err));\r\n    }\r\n  };\r\n\r\n  const handlefssCodeChange = (event) => {\r\n    const { value } = event.target;\r\n    setfssCode(value);\r\n  };\r\n\r\n  const handleDateChange = (event) => {\r\n    const { value } = event.target;\r\n    setDate(value);\r\n  };\r\n\r\n  const handleDTChange = (event) => {\r\n    const { value } = event.target;\r\n    setDT(value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const hasEmptyField = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n    if (hasEmptyField) {\r\n      alert(\"Veuillez remplir tous les champs.\");\r\n      return;\r\n    }\r\n\r\n    const newFactureData = {\r\n      fssName,\r\n      fssID,\r\n      date,\r\n      DT,\r\n      articles: inputs.map(input => ({\r\n        refAr: input.refAr,\r\n        price: input.price,\r\n        quantité: input.quantité,\r\n        remise: input.remise\r\n      }))\r\n    };\r\n    onFactureSubmit(newFactureData);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} onKeyPress={handleKeyPress}>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"fssName\">Nom du fournisseur:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"fssName\"\r\n          value={fssName}\r\n          onChange={handlefssNameChange}\r\n        />\r\n        {filteredfss.length > 0 && (\r\n          <ul className=\"list-group\">\r\n            {filteredfss.map(fss => (\r\n              <li\r\n                key={fss.fssID}\r\n                className=\"list-group-item\"\r\n                onClick={() => {\r\n                  setfssName(fss.fssName);\r\n                  setFilteredfss([]);\r\n                }}\r\n              >\r\n                {fss.fssName}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"fssCode\">Code du fournisseur:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"fssCode\"\r\n          value={fssID}\r\n          onChange={handlefssCodeChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"date\">Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          className=\"form-control\"\r\n          id=\"date\"\r\n          value={date}\r\n          onChange={handleDateChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"DT\">DT:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"DT\"\r\n          value={DT}\r\n          onChange={handleDTChange}\r\n        />\r\n      </div>\r\n      {inputs.map((input, index) => (\r\n        <div key={index} className=\"form-row\">\r\n          <div className=\"form-group col-md-3\">\r\n            <label htmlFor={`reference-${index}`}>Référence:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id={`reference-${index}`}\r\n              value={input.refAr}\r\n              onChange={(event) => handleReferenceChange(event, index)}\r\n              list=\"reference-list\"\r\n            />\r\n            <datalist id=\"reference-list\">\r\n              {references.map((reference, i) => (\r\n                <option key={i} value={reference} />\r\n              ))}\r\n            </datalist>\r\n          </div>\r\n          <div className=\"form-group col-md-2\">\r\n            <label htmlFor={`quantity-${index}`}>Quantité:</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id={`quantity-${index}`}\r\n              value={input.quantité}\r\n              onChange={(event) => handleQuantityChange(event, index)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-2\">\r\n            <label htmlFor={`price-${index}`}>Prix:</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id={`price-${index}`}\r\n              value={input.price}\r\n              onChange={(event) => handlePriceChange(event, index)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-2\">\r\n            <label htmlFor={`remise-${index}`}>Remise:</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id={`remise-${index}`}\r\n              value={input.remise}\r\n              onChange={(event) => handleRemiseChange(event, index)}\r\n              ref={remiseInputRef}\r\n            />\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <button type=\"button\" className=\"btn btn-primary\" onClick={handleAddInput}>\r\n        Ajouter une ligne\r\n      </button>\r\n      <button type=\"submit\" className=\"btn btn-success\">\r\n        Créer la facture d'achat\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CreateFactureVente;\r\n"],"mappings":";;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,kBAAkBA,CAAC;EAAEC,eAAe;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAChE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,KAAK,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,EAAE,EAAEC,KAAK,CAAC,GAAGjB,QAAQ,CAAC,OAAO,CAAC;EACrC,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,CAAC;IAAEoB,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}