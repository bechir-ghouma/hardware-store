{"ast":null,"code":"\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import Modal from 'react-modal';\n// import CreateFactureVente from './CreateFactureVente';\n// import { FaSearch } from 'react-icons/fa';\n\n// Modal.setAppElement('#root');\n\n// function FactureVente() {\n//     const [fVente, setFVente] = useState([]);\n//     const [selectedFacture, setSelectedFacture] = useState(null);\n//     const [selectedRow, setSelectedRow] = useState(null);\n//     const [searchQuery, setSearchQuery] = useState('');\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\n\n//     useEffect(() => {\n//         axios\n//             .get('http://localhost:7777/factureVente/')\n//             .then((res) => {\n//                 const formattedFVente = res.data.map((facture) => {\n//                     const date = new Date(facture.date);\n//                     const options = { timeZone: 'Africa/Tunis' };\n//                     const formattedDate = date.toLocaleDateString('en-GB', options);\n//                     return {\n//                         ...facture,\n//                         date: formattedDate,\n//                     };\n//                 });\n//                 setFVente(formattedFVente);\n//             })\n//             .catch((err) => console.log(err));\n//     }, []);\n\n//     const handleDelete = async () => {\n//         const id = selectedFacture?.id;\n//         if (!id) return; // Exit early if no facture is selected\n//         try {\n//             await axios.delete(`http://localhost:7777/factureVente/${id}`);\n//             setFVente(fVente.filter((facture) => facture.id !== id));\n//             setSelectedFacture(null); // Reset selectedFacture after deletion\n//             setSelectedRow(null);\n//         } catch (err) {\n//             console.log(err);\n//         }\n//     };\n\n//     const handleAddFactureVente = (newFactureVente) => {\n//         setFVente([...fVente, newFactureVente]);\n//     };\n\n//     const filteredFVente = fVente.filter((facture) => {\n//         return (\n//             facture.clName?.toLowerCase()?.includes(searchQuery.toLowerCase()) ||\n//             facture.refAr?.toLowerCase()?.includes(searchQuery.toLowerCase())\n//         );\n//     });\n\n//     const handleSearch = (query) => {\n//         setSearchQuery(query);\n//     };\n\n//     const handleSubmit = (newFactureData) => {\n//         axios.post('http://localhost:7777/factureVente/', newFactureData)\n//             .then(res => {\n//                 console.log(res);\n//                 setModalIsOpen(false); // Close the modal after successfully creating the facture\n//                 setFVente([...fVente, res.data]); // Add the new facture to the list\n//             })\n//             .catch(err => console.log('Error creating facture:', err));\n//     };\n\n//     return (\n//         <div className=\"facture-vente-container\">\n//             <CreateFactureVente onFactureSubmit={handleSubmit} selectedFacture={selectedFacture} />\n//             <button onClick={() => setModalIsOpen(true)}>Voir les factures de vente</button>\n//             <Modal\n//                 isOpen={modalIsOpen}\n//                 onRequestClose={() => setModalIsOpen(false)}\n//                 contentLabel=\"Voir les factures de vente\"\n//                 style={{\n//                     content: {\n//                         top: '50%',\n//                         left: '50%',\n//                         right: 'auto',\n//                         bottom: 'auto',\n//                         marginRight: '-50%',\n//                         transform: 'translate(-50%, -50%)',\n//                         width: '80%',\n//                         maxWidth: '800px',\n//                         maxHeight: '80vh',\n//                         overflowY: 'auto',\n//                     },\n//                 }}\n//             >\n//                 <div className=\"d-flex justify-content-between align-items-center mb-3\">\n//                     <h2 className=\"mb-4\">Factures de vente :</h2>\n//                     <div className=\"input-group\">\n//                         <input\n//                             type=\"text\"\n//                             className=\"form-control\"\n//                             placeholder=\"Rechercher un client ou une référence...\"\n//                             value={searchQuery}\n//                             onChange={(e) => handleSearch(e.target.value)}\n//                         />\n//                         <span className=\"input-group-text\">\n//                             <FaSearch />\n//                         </span>\n//                     </div>\n//                 </div>\n//                 <button onClick={handleDelete}>Supprimer</button>\n//                 <div className=\"table-responsive\">\n//                     <table className=\"table table-striped\">\n//                         <thead>\n//                             <tr>\n//                                 <th>Id</th>\n//                                 <th>Code client</th>\n//                                 <th>Nom du client</th>\n//                                 <th>Total</th>\n//                             </tr>\n//                         </thead>\n//                         <tbody>\n//                         {filteredFVente.map((facture, index) => (\n//     <tr\n//         key={facture.id}\n//         onClick={() => {\n//             setSelectedFacture(facture);\n//             setSelectedRow(index);\n//         }}\n//         className={selectedRow === index ? 'table-active' : ''}\n//         style={{ cursor: 'pointer' }}\n//     >\n//         <td>{facture.id}</td>\n//         <td>{facture.client_id}</td>\n//         <td>{facture.clName}</td>\n//         <td>\n//             {facture.inputs && facture.inputs.map((item, i) => (\n//                 <span key={i}>\n//                     {`${item.refAr}: ${item.quantité} | `}\n//                 </span>\n//             ))}\n//         </td>\n//         <td>{facture.totalPrice}</td> {/* Render the totalPrice field */}\n//     </tr>\n// ))}\n\n// </tbody>\n\n//                     </table>\n//                 </div>\n//             </Modal>\n//         </div>\n//     );\n// }\n\n// export default FactureVente;","map":{"version":3,"names":[],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/FactureVente.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import Modal from 'react-modal';\r\n// import CreateFactureVente from './CreateFactureVente';\r\n// import { FaSearch } from 'react-icons/fa';\r\n\r\n// Modal.setAppElement('#root');\r\n\r\n// function FactureVente() {\r\n//     const [fVente, setFVente] = useState([]);\r\n//     const [selectedFacture, setSelectedFacture] = useState(null);\r\n//     const [selectedRow, setSelectedRow] = useState(null);\r\n//     const [searchQuery, setSearchQuery] = useState('');\r\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n\r\n//     useEffect(() => {\r\n//         axios\r\n//             .get('http://localhost:7777/factureVente/')\r\n//             .then((res) => {\r\n//                 const formattedFVente = res.data.map((facture) => {\r\n//                     const date = new Date(facture.date);\r\n//                     const options = { timeZone: 'Africa/Tunis' };\r\n//                     const formattedDate = date.toLocaleDateString('en-GB', options);\r\n//                     return {\r\n//                         ...facture,\r\n//                         date: formattedDate,\r\n//                     };\r\n//                 });\r\n//                 setFVente(formattedFVente);\r\n//             })\r\n//             .catch((err) => console.log(err));\r\n//     }, []);\r\n    \r\n\r\n//     const handleDelete = async () => {\r\n//         const id = selectedFacture?.id;\r\n//         if (!id) return; // Exit early if no facture is selected\r\n//         try {\r\n//             await axios.delete(`http://localhost:7777/factureVente/${id}`);\r\n//             setFVente(fVente.filter((facture) => facture.id !== id));\r\n//             setSelectedFacture(null); // Reset selectedFacture after deletion\r\n//             setSelectedRow(null);\r\n//         } catch (err) {\r\n//             console.log(err);\r\n//         }\r\n//     };\r\n\r\n//     const handleAddFactureVente = (newFactureVente) => {\r\n//         setFVente([...fVente, newFactureVente]);\r\n//     };\r\n\r\n//     const filteredFVente = fVente.filter((facture) => {\r\n//         return (\r\n//             facture.clName?.toLowerCase()?.includes(searchQuery.toLowerCase()) ||\r\n//             facture.refAr?.toLowerCase()?.includes(searchQuery.toLowerCase())\r\n//         );\r\n//     });\r\n\r\n//     const handleSearch = (query) => {\r\n//         setSearchQuery(query);\r\n//     };\r\n\r\n//     const handleSubmit = (newFactureData) => {\r\n//         axios.post('http://localhost:7777/factureVente/', newFactureData)\r\n//             .then(res => {\r\n//                 console.log(res);\r\n//                 setModalIsOpen(false); // Close the modal after successfully creating the facture\r\n//                 setFVente([...fVente, res.data]); // Add the new facture to the list\r\n//             })\r\n//             .catch(err => console.log('Error creating facture:', err));\r\n//     };\r\n\r\n\r\n//     return (\r\n//         <div className=\"facture-vente-container\">\r\n//             <CreateFactureVente onFactureSubmit={handleSubmit} selectedFacture={selectedFacture} />\r\n//             <button onClick={() => setModalIsOpen(true)}>Voir les factures de vente</button>\r\n//             <Modal\r\n//                 isOpen={modalIsOpen}\r\n//                 onRequestClose={() => setModalIsOpen(false)}\r\n//                 contentLabel=\"Voir les factures de vente\"\r\n//                 style={{\r\n//                     content: {\r\n//                         top: '50%',\r\n//                         left: '50%',\r\n//                         right: 'auto',\r\n//                         bottom: 'auto',\r\n//                         marginRight: '-50%',\r\n//                         transform: 'translate(-50%, -50%)',\r\n//                         width: '80%',\r\n//                         maxWidth: '800px',\r\n//                         maxHeight: '80vh',\r\n//                         overflowY: 'auto',\r\n//                     },\r\n//                 }}\r\n//             >\r\n//                 <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n//                     <h2 className=\"mb-4\">Factures de vente :</h2>\r\n//                     <div className=\"input-group\">\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             className=\"form-control\"\r\n//                             placeholder=\"Rechercher un client ou une référence...\"\r\n//                             value={searchQuery}\r\n//                             onChange={(e) => handleSearch(e.target.value)}\r\n//                         />\r\n//                         <span className=\"input-group-text\">\r\n//                             <FaSearch />\r\n//                         </span>\r\n//                     </div>\r\n//                 </div>\r\n//                 <button onClick={handleDelete}>Supprimer</button>\r\n//                 <div className=\"table-responsive\">\r\n//                     <table className=\"table table-striped\">\r\n//                         <thead>\r\n//                             <tr>\r\n//                                 <th>Id</th>\r\n//                                 <th>Code client</th>\r\n//                                 <th>Nom du client</th>\r\n//                                 <th>Total</th>\r\n//                             </tr>\r\n//                         </thead>\r\n//                         <tbody>\r\n//                         {filteredFVente.map((facture, index) => (\r\n//     <tr\r\n//         key={facture.id}\r\n//         onClick={() => {\r\n//             setSelectedFacture(facture);\r\n//             setSelectedRow(index);\r\n//         }}\r\n//         className={selectedRow === index ? 'table-active' : ''}\r\n//         style={{ cursor: 'pointer' }}\r\n//     >\r\n//         <td>{facture.id}</td>\r\n//         <td>{facture.client_id}</td>\r\n//         <td>{facture.clName}</td>\r\n//         <td>\r\n//             {facture.inputs && facture.inputs.map((item, i) => (\r\n//                 <span key={i}>\r\n//                     {`${item.refAr}: ${item.quantité} | `}\r\n//                 </span>\r\n//             ))}\r\n//         </td>\r\n//         <td>{facture.totalPrice}</td> {/* Render the totalPrice field */}\r\n//     </tr>\r\n// ))}\r\n\r\n\r\n// </tbody>\r\n\r\n//                     </table>\r\n//                 </div>\r\n//             </Modal>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default FactureVente;\r\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}