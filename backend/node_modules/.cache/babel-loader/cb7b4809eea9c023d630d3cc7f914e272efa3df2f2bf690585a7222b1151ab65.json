{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\CreateFactureVente.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import axios from 'axios';\n// import Modal from 'react-modal';\n\n// Modal.setAppElement('#root');\n\n// function CreateFactureVente({ onAddFVente, selectedFacture }) {\n//     const [client, setClient] = useState('');\n//     const [date, setDate] = useState('');\n//     const [DT, setDT] = useState('1.000');\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//     const [references, setReferences] = useState([]);\n//     const [clients, setClients] = useState([]);\n//     const [filteredClients, setFilteredClients] = useState([]);\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\n\n//     const remiseInputRef = useRef(null); // Ref for the Remise input field\n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/article')\n//             .then(res => {\n//                 setReferences(res.data.map(article => article.ref));\n//             })\n//             .catch(err => console.log('Error fetching articles:', err));\n//     }, []);\n\n//     useEffect(() => {\n//         if (selectedFacture) {\n//             setClient(selectedFacture.client || '');\n//             setDate(selectedFacture.date || '');\n//             setDT(selectedFacture.DT || '1.000');\n//             setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//             setModalIsOpen(true);\n//         }\n//     }, [selectedFacture]);\n\n//     const fetchPriceByReference = (reference, index) => {\n//         axios.get(`http://localhost:7777/factureVente/${reference}`)\n//             .then(res => {\n//                 const price = res.data.price;\n//                 const newInputs = [...inputs];\n//                 newInputs[index].price = price;\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.log('Error fetching price:', err));\n//     };\n\n//     const handleReferenceChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].refAr = value;\n//         setInputs(newInputs);\n//         fetchPriceByReference(value, index);\n//     };\n\n//     const handleRemiseChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].remise = value;\n//         setInputs(newInputs);\n//     };\n\n//     const handleQuantityChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].quantité = value;\n\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//             .then(res => {\n//                 const availableQuantity = res.data.quantity;\n//                 const remainingQuantity = availableQuantity - parseInt(value);\n\n//                 if (remainingQuantity < 0) {\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//                     newInputs[index].quantité = availableQuantity;\n//                 }\n\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.error('Error fetching quantity:', err));\n\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\n//         console.log(\"New Total:\", newTotal);\n//     };\n\n//     const handleAddInput = () => {\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n//         if (isEmpty) {\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n//             return;\n//         }\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\n//     };\n\n//     const calculateTotal = () => {\n//         if (!inputs) return 0; \n//         const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\n//         return total.toFixed(3); // Round to three decimal places\n//     };\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n\n//         // Filter out empty inputs before checking for invalid references\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//         if (invalidReference) {\n//             alert(\"Sélectionner une référence valide\");\n//             return;\n//         }\n\n//         const refArArray = [];\n//         const quantiteArray = [];\n//         const remiseArray = [];\n//         nonEmptyInputs.forEach(input => {\n//             refArArray.push(input.refAr);\n//             quantiteArray.push(input.quantité);\n//             remiseArray.push(input.remise);\n//         });\n\n//         const totalPrice = calculateTotal();\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\n//             client,\n//             date,\n//             DT,\n//             refAr: refArArray,\n//             quantité: quantiteArray,\n//             remise: remiseArray,\n//             totalPrice\n//         })\n//             .then(res => {\n//                 console.log(res);\n//                 window.location.reload();\n//             })\n//             .catch(err => console.log('Error creating facture:', err))\n//     };\n\n//     const handleKeyPress = (event) => {\n//         if (event.key === 'Enter') {\n//             handleAddInput();\n//         }\n//     };\n\n//     const handleClientChange = (e) => {\n//         const { value } = e.target;\n//         setClient(value);\n//         // Filter clients based on user input\n//         setFilteredClients(clients.filter(client => client.clName.toLowerCase().includes(value.toLowerCase())));\n//     };\n\n//     const handleClientSelect = (name) => {\n//         setClient(name);\n//         setFilteredClients([]);\n//     };\n\n//     return (\n//         <div style={{ margin: '20px', justifyContent: 'center' }}>\n//             <div style={{ display: 'flex', flex: '1' }}>\n//                 <div>\n//                 <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"text\"\n//                             id=\"code-client\"\n//                             name=\"code-client\"  \n//                         />\n//                     </div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"text\"\n//                             id=\"client\"\n//                             value={client}\n//                             onChange={handleClientChange}\n//                         />\n//                         {filteredClients.length > 0 && (\n//                             <ul style={{ listStyleType: 'none', padding: 0, margin: 0, position: 'absolute', zIndex: 1, backgroundColor: 'white', border: '1px solid #ccc', width: '200px' }}>\n//                                 {filteredClients.map((client, index) => (\n//                                     <li key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName)}>\n//                                         {client.clName}\n//                                     </li>\n//                                 ))}\n//                             </ul>\n//                         )}\n\n//                     </div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"date\"\n//                             id=\"date\"\n//                             value={date}\n//                             onChange={(e) => setDate(e.target.value)}\n//                         />\n//                     </div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"text\"\n//                             id=\"code\"\n//                             value={DT}\n//                             onChange={(e) => setDT(e.target.value)}\n//                             onBlur={handleQuantityChange} // Add onBlur event to trigger recalculation when \"Droit de timbre\" value changes\n//                         />\n//                     </div>\n//                 </div>\n//                 <div>\n//                     <div>\n//                         {inputs.map((input, index) => (\n//                             <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                                 <div style={{ flex: '1', marginRight: '10px' }}>\n//                                     <label>Référence d'article</label>\n//                                     <input\n//                                         list=\"references\"\n//                                         style={{ width: '100%' }}\n//                                         value={input.refAr}\n//                                         onChange={(e) => handleReferenceChange(e, index)}\n//                                     />\n//                                     <datalist id=\"references\">\n//                                         {references.map((reference, idx) => (\n//                                             <option key={idx} value={reference} />\n//                                         ))}\n//                                     </datalist>\n//                                 </div>\n//                                 <div style={{ flex: '1', marginRight: '10px' }}>\n//                                     <label>Prix vente TTC</label>\n//                                     <input\n//                                         type=\"number\"\n//                                         style={{ width: '100%' }}\n//                                         value={input.price}\n//                                         readOnly\n//                                     />\n//                                 </div>\n//                                 <div style={{ flex: '1', marginRight: '10px' }}>\n//                                     <label>Quantité</label>\n//                                     <input\n//                                         type=\"number\"\n//                                         style={{ width: '100%' }}\n//                                         value={input.quantité}\n//                                         onChange={(e) => handleQuantityChange(e, index)}\n//                                     />\n//                                 </div>\n//                                 <div style={{ display: 'flex', alignItems: 'center' }}>\n//                                     <div style={{ flex: '1' }}>\n//                                         <label>Remise</label>\n//                                         <input\n//                                             type=\"number\"\n//                                             style={{ width: '100%' }}\n//                                             value={input.remise}\n//                                             onChange={(e) => handleRemiseChange(e, index)}\n//                                             onKeyDown={handleKeyPress} // Call handleKeyPress on key press\n//                                             ref={remiseInputRef} // Set the ref for Remise input field\n//                                         />\n//                                     </div>\n//                                     <div style={{ marginLeft: '10px' }}>\n//                                         <button type=\"button\" onClick={handleAddInput}>+</button>\n//                                     </div>\n//                                 </div>\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </div>\n//                 <div>\n//                     <div>\n//                         <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\n//                             <button\n//                                 style={{ width: '200px', marginBottom: '10px' }}\n//                                 type=\"button\"\n//                                 onClick={handleAddInput}\n//                             >\n//                                 Ajouter\n//                             </button>\n//                             <button\n//                                 style={{ width: '200px', marginBottom: '10px' }}\n//                                 type=\"submit\"\n//                                 onClick={handleSubmit}\n//                             >\n//                                 Enregistrer\n//                             </button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//             <div style={{ marginBottom: '20px' }}>\n//                 <label>Total</label>\n//                 <input\n//                     type=\"text\" \n//                     style={{ width: '100%' }}\n//                     value={calculateTotal()}\n//                     readOnly\n//                 />\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default CreateFactureVente;\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nfunction CreateFactureVente({\n  onAddFVente,\n  selectedFacture\n}) {\n  _s();\n  const [client, setClient] = useState('');\n  const [clientCode, setClientCode] = useState('');\n  const [date, setDate] = useState('');\n  const [DT, setDT] = useState('1.000');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0,\n    remise: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [allClients, setAllClients] = useState([]); // State to hold all clients\n\n  const remiseInputRef = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:7777/article').then(res => {\n      setReferences(res.data.map(article => article.ref));\n    }).catch(err => console.log('Error fetching articles:', err));\n  }, []);\n  useEffect(() => {\n    axios.get('http://localhost:7777/clients').then(res => {\n      setAllClients(res.data); // Store all clients\n    }).catch(err => console.log('Error fetching clients:', err));\n  }, []);\n  useEffect(() => {\n    if (selectedFacture) {\n      setClient(selectedFacture.client || '');\n      setClientCode(selectedFacture.clientCode || '');\n      setDate(selectedFacture.date || '');\n      setDT(selectedFacture.DT || '1.000');\n      setInputs(selectedFacture.inputs || [{\n        refAr: '',\n        quantité: '',\n        price: 0,\n        remise: 0\n      }]);\n      setModalIsOpen(true);\n    }\n  }, [selectedFacture]);\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/factureVente/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log('Error fetching price:', err));\n  };\n  const handleReferenceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n    fetchPriceByReference(value, index);\n  };\n  const handleRemiseChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].remise = value;\n    setInputs(newInputs);\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].quantité = value;\n    axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`).then(res => {\n      const availableQuantity = res.data.quantity;\n      const remainingQuantity = availableQuantity - parseInt(value);\n      if (remainingQuantity < 0) {\n        alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n        newInputs[index].quantité = availableQuantity;\n      }\n      const remisePrice = newInputs[index].price * (1 - newInputs[index].remise / 100);\n      newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n      setInputs(newInputs);\n    }).catch(err => console.error('Error fetching quantity:', err));\n  };\n  const handleAddInput = () => {\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n    if (isEmpty) {\n      alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n      return;\n    }\n    setInputs([...inputs, {\n      refAr: '',\n      price: 0,\n      quantité: '',\n      remise: 0\n    }]);\n  };\n  const calculateTotal = () => {\n    if (!inputs) return 0;\n    const total = inputs.reduce((acc, curr) => acc + curr.price * curr.quantité / 100 * (100 - curr.remise), 0) + parseFloat(DT);\n    return total.toFixed(3);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Filter out empty inputs before checking for invalid references\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n    if (invalidReference) {\n      alert(\"Sélectionner une référence valide\");\n      return;\n    }\n\n    // Check if the client name exists in the clients table\n    const trimmedClient = client.trim().toLowerCase();\n    const clientExists = allClients.some(clientObj => clientObj.clName.trim().toLowerCase() === trimmedClient);\n    console.log('Checking client name:', client, 'Trimmed client:', trimmedClient, 'Client exists:', clientExists);\n    if (!clientExists) {\n      alert(\"Le nom du client n'existe pas dans la table des clients\");\n      return;\n    }\n    const refArArray = [];\n    const quantiteArray = [];\n    const remiseArray = [];\n    nonEmptyInputs.forEach(input => {\n      refArArray.push(input.refAr);\n      quantiteArray.push(input.quantité);\n      remiseArray.push(input.remise);\n    });\n    const totalPrice = calculateTotal();\n    axios.post('http://localhost:7777/factureVente/createFac/', {\n      client,\n      clientCode,\n      date,\n      DT,\n      refAr: refArArray,\n      quantité: quantiteArray,\n      remise: remiseArray,\n      totalPrice\n    }).then(res => {\n      console.log(res);\n      window.location.reload();\n    }).catch(err => console.log('Error creating facture:', err));\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleAddInput();\n    }\n  };\n  const handleClientChange = e => {\n    const {\n      value\n    } = e.target;\n    setClient(value);\n    axios.get(`http://localhost:7777/clients?q=${value}`).then(res => {\n      setFilteredClients(res.data);\n    }).catch(err => console.log('Error fetching clients:', err));\n  };\n  const handleClientSelect = name => {\n    const selectedClient = filteredClients.find(client => client.clName === name);\n    if (selectedClient) {\n      setClient(name);\n      setClientCode(selectedClient.clCode);\n      setFilteredClients([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flex: '1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"code-client\",\n            children: \"Code client:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"text\",\n            id: \"code-client\",\n            name: \"code-client\",\n            value: clientCode,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"client\",\n            children: \"Nom du client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"text\",\n            id: \"client\",\n            value: client,\n            onChange: handleClientChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 25\n          }, this), filteredClients.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyleType: 'none',\n              padding: 0,\n              margin: 0,\n              position: 'absolute',\n              zIndex: 1,\n              backgroundColor: 'white',\n              border: '1px solid #ccc',\n              width: '200px'\n            },\n            children: filteredClients.map((client, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                padding: '5px',\n                cursor: 'pointer'\n              },\n              onClick: () => handleClientSelect(client.clName),\n              children: client.clName\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"date\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"date\",\n            id: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"DT\",\n            children: \"Droit de timbre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"text\",\n            id: \"code\",\n            value: DT,\n            onChange: e => setDT(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: '1'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"R\\xE9f\\xE9rences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 25\n          }, this), inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: '1',\n                marginRight: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"R\\xE9f\\xE9rence d'article\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                list: \"references\",\n                style: {\n                  width: '100%'\n                },\n                value: input.refAr,\n                onChange: e => handleReferenceChange(e, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                id: \"references\",\n                children: references.map((reference, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: reference\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: '1',\n                marginRight: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Prix vente TTC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                style: {\n                  width: '100%'\n                },\n                value: input.price,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: '1',\n                marginRight: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Quantit\\xE9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                style: {\n                  width: '100%'\n                },\n                value: input.quantité,\n                onChange: e => handleQuantityChange(e, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  flex: '1'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Remise\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  style: {\n                    width: '100%'\n                  },\n                  value: input.remise,\n                  onChange: e => handleRemiseChange(e, index),\n                  onKeyDown: handleKeyPress,\n                  ref: remiseInputRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: '10px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: handleAddInput,\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"inline-block\",\n              marginBottom: '20px',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                width: '200px',\n                marginBottom: '10px'\n              },\n              type: \"button\",\n              onClick: handleAddInput,\n              children: \"Ajouter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                width: '200px',\n                marginBottom: '10px'\n              },\n              type: \"submit\",\n              onClick: handleSubmit,\n              children: \"Enregistrer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Total\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: {\n          width: '100%'\n        },\n        value: calculateTotal(),\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 490,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateFactureVente, \"gz9IiN0tfgERFZwVlepabUVfYbM=\");\n_c = CreateFactureVente;\nexport default CreateFactureVente;\nvar _c;\n$RefreshReg$(_c, \"CreateFactureVente\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Modal","jsxDEV","_jsxDEV","setAppElement","CreateFactureVente","onAddFVente","selectedFacture","_s","client","setClient","clientCode","setClientCode","date","setDate","DT","setDT","inputs","setInputs","refAr","quantité","price","remise","references","setReferences","filteredClients","setFilteredClients","modalIsOpen","setModalIsOpen","allClients","setAllClients","remiseInputRef","get","then","res","data","map","article","ref","catch","err","console","log","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","event","value","target","handleRemiseChange","handleQuantityChange","availableQuantity","quantity","remainingQuantity","parseInt","alert","remisePrice","parseFloat","toFixed","error","handleAddInput","isEmpty","some","input","calculateTotal","total","reduce","acc","curr","handleSubmit","preventDefault","nonEmptyInputs","filter","invalidReference","includes","trimmedClient","trim","toLowerCase","clientExists","clientObj","clName","refArArray","quantiteArray","remiseArray","forEach","push","totalPrice","post","window","location","reload","handleKeyPress","key","handleClientChange","e","handleClientSelect","name","selectedClient","find","clCode","style","margin","justifyContent","children","display","flex","marginBottom","width","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","readOnly","onChange","length","listStyleType","padding","position","zIndex","backgroundColor","border","cursor","onClick","alignItems","marginRight","list","idx","onKeyDown","marginLeft","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureVente.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import axios from 'axios';\r\n// import Modal from 'react-modal';\r\n\r\n// Modal.setAppElement('#root');\r\n\r\n// function CreateFactureVente({ onAddFVente, selectedFacture }) {\r\n//     const [client, setClient] = useState('');\r\n//     const [date, setDate] = useState('');\r\n//     const [DT, setDT] = useState('1.000');\r\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//     const [references, setReferences] = useState([]);\r\n//     const [clients, setClients] = useState([]);\r\n//     const [filteredClients, setFilteredClients] = useState([]);\r\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n//     const remiseInputRef = useRef(null); // Ref for the Remise input field\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/article')\r\n//             .then(res => {\r\n//                 setReferences(res.data.map(article => article.ref));\r\n//             })\r\n//             .catch(err => console.log('Error fetching articles:', err));\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         if (selectedFacture) {\r\n//             setClient(selectedFacture.client || '');\r\n//             setDate(selectedFacture.date || '');\r\n//             setDT(selectedFacture.DT || '1.000');\r\n//             setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//             setModalIsOpen(true);\r\n//         }\r\n//     }, [selectedFacture]);\r\n\r\n\r\n//     const fetchPriceByReference = (reference, index) => {\r\n//         axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n//             .then(res => {\r\n//                 const price = res.data.price;\r\n//                 const newInputs = [...inputs];\r\n//                 newInputs[index].price = price;\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.log('Error fetching price:', err));\r\n//     };\r\n\r\n//     const handleReferenceChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].refAr = value;\r\n//         setInputs(newInputs);\r\n//         fetchPriceByReference(value, index);\r\n//     };\r\n\r\n//     const handleRemiseChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].remise = value;\r\n//         setInputs(newInputs);\r\n//     };\r\n\r\n//     const handleQuantityChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].quantité = value;\r\n\r\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//             .then(res => {\r\n//                 const availableQuantity = res.data.quantity;\r\n//                 const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n//                 if (remainingQuantity < 0) {\r\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//                     newInputs[index].quantité = availableQuantity;\r\n//                 }\r\n\r\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.error('Error fetching quantity:', err));\r\n\r\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\r\n//         console.log(\"New Total:\", newTotal);\r\n//     };\r\n\r\n//     const handleAddInput = () => {\r\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n//         if (isEmpty) {\r\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n//             return;\r\n//         }\r\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n//     };\r\n\r\n//     const calculateTotal = () => {\r\n//         if (!inputs) return 0; \r\n//         const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\r\n//         return total.toFixed(3); // Round to three decimal places\r\n//     };\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n\r\n//         // Filter out empty inputs before checking for invalid references\r\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n//         if (invalidReference) {\r\n//             alert(\"Sélectionner une référence valide\");\r\n//             return;\r\n//         }\r\n\r\n//         const refArArray = [];\r\n//         const quantiteArray = [];\r\n//         const remiseArray = [];\r\n//         nonEmptyInputs.forEach(input => {\r\n//             refArArray.push(input.refAr);\r\n//             quantiteArray.push(input.quantité);\r\n//             remiseArray.push(input.remise);\r\n//         });\r\n\r\n//         const totalPrice = calculateTotal();\r\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//             client,\r\n//             date,\r\n//             DT,\r\n//             refAr: refArArray,\r\n//             quantité: quantiteArray,\r\n//             remise: remiseArray,\r\n//             totalPrice\r\n//         })\r\n//             .then(res => {\r\n//                 console.log(res);\r\n//                 window.location.reload();\r\n//             })\r\n//             .catch(err => console.log('Error creating facture:', err))\r\n//     };\r\n\r\n//     const handleKeyPress = (event) => {\r\n//         if (event.key === 'Enter') {\r\n//             handleAddInput();\r\n//         }\r\n//     };\r\n\r\n//     const handleClientChange = (e) => {\r\n//         const { value } = e.target;\r\n//         setClient(value);\r\n//         // Filter clients based on user input\r\n//         setFilteredClients(clients.filter(client => client.clName.toLowerCase().includes(value.toLowerCase())));\r\n//     };\r\n    \r\n//     const handleClientSelect = (name) => {\r\n//         setClient(name);\r\n//         setFilteredClients([]);\r\n//     };\r\n\r\n//     return (\r\n//         <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n//             <div style={{ display: 'flex', flex: '1' }}>\r\n//                 <div>\r\n//                 <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"text\"\r\n//                             id=\"code-client\"\r\n//                             name=\"code-client\"  \r\n//                         />\r\n//                     </div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"text\"\r\n//                             id=\"client\"\r\n//                             value={client}\r\n//                             onChange={handleClientChange}\r\n//                         />\r\n//                         {filteredClients.length > 0 && (\r\n//                             <ul style={{ listStyleType: 'none', padding: 0, margin: 0, position: 'absolute', zIndex: 1, backgroundColor: 'white', border: '1px solid #ccc', width: '200px' }}>\r\n//                                 {filteredClients.map((client, index) => (\r\n//                                     <li key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName)}>\r\n//                                         {client.clName}\r\n//                                     </li>\r\n//                                 ))}\r\n//                             </ul>\r\n//                         )}\r\n\r\n//                     </div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"date\"\r\n//                             id=\"date\"\r\n//                             value={date}\r\n//                             onChange={(e) => setDate(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"text\"\r\n//                             id=\"code\"\r\n//                             value={DT}\r\n//                             onChange={(e) => setDT(e.target.value)}\r\n//                             onBlur={handleQuantityChange} // Add onBlur event to trigger recalculation when \"Droit de timbre\" value changes\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <div>\r\n//                     <div>\r\n//                         {inputs.map((input, index) => (\r\n//                             <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//                                 <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                                     <label>Référence d'article</label>\r\n//                                     <input\r\n//                                         list=\"references\"\r\n//                                         style={{ width: '100%' }}\r\n//                                         value={input.refAr}\r\n//                                         onChange={(e) => handleReferenceChange(e, index)}\r\n//                                     />\r\n//                                     <datalist id=\"references\">\r\n//                                         {references.map((reference, idx) => (\r\n//                                             <option key={idx} value={reference} />\r\n//                                         ))}\r\n//                                     </datalist>\r\n//                                 </div>\r\n//                                 <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                                     <label>Prix vente TTC</label>\r\n//                                     <input\r\n//                                         type=\"number\"\r\n//                                         style={{ width: '100%' }}\r\n//                                         value={input.price}\r\n//                                         readOnly\r\n//                                     />\r\n//                                 </div>\r\n//                                 <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                                     <label>Quantité</label>\r\n//                                     <input\r\n//                                         type=\"number\"\r\n//                                         style={{ width: '100%' }}\r\n//                                         value={input.quantité}\r\n//                                         onChange={(e) => handleQuantityChange(e, index)}\r\n//                                     />\r\n//                                 </div>\r\n//                                 <div style={{ display: 'flex', alignItems: 'center' }}>\r\n//                                     <div style={{ flex: '1' }}>\r\n//                                         <label>Remise</label>\r\n//                                         <input\r\n//                                             type=\"number\"\r\n//                                             style={{ width: '100%' }}\r\n//                                             value={input.remise}\r\n//                                             onChange={(e) => handleRemiseChange(e, index)}\r\n//                                             onKeyDown={handleKeyPress} // Call handleKeyPress on key press\r\n//                                             ref={remiseInputRef} // Set the ref for Remise input field\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div style={{ marginLeft: '10px' }}>\r\n//                                         <button type=\"button\" onClick={handleAddInput}>+</button>\r\n//                                     </div>\r\n//                                 </div>\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                 </div>\r\n//                 <div>\r\n//                     <div>\r\n//                         <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\r\n//                             <button\r\n//                                 style={{ width: '200px', marginBottom: '10px' }}\r\n//                                 type=\"button\"\r\n//                                 onClick={handleAddInput}\r\n//                             >\r\n//                                 Ajouter\r\n//                             </button>\r\n//                             <button\r\n//                                 style={{ width: '200px', marginBottom: '10px' }}\r\n//                                 type=\"submit\"\r\n//                                 onClick={handleSubmit}\r\n//                             >\r\n//                                 Enregistrer\r\n//                             </button>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//             <div style={{ marginBottom: '20px' }}>\r\n//                 <label>Total</label>\r\n//                 <input\r\n//                     type=\"text\" \r\n//                     style={{ width: '100%' }}\r\n//                     value={calculateTotal()}\r\n//                     readOnly\r\n//                 />\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction CreateFactureVente({ onAddFVente, selectedFacture }) {\r\n    const [client, setClient] = useState('');\r\n    const [clientCode, setClientCode] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [DT, setDT] = useState('1.000');\r\n    const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n    const [references, setReferences] = useState([]);\r\n    const [filteredClients, setFilteredClients] = useState([]);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [allClients, setAllClients] = useState([]); // State to hold all clients\r\n\r\n    const remiseInputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7777/article')\r\n            .then(res => {\r\n                setReferences(res.data.map(article => article.ref));\r\n            })\r\n            .catch(err => console.log('Error fetching articles:', err));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7777/clients')\r\n            .then(res => {\r\n                setAllClients(res.data); // Store all clients\r\n            })\r\n            .catch(err => console.log('Error fetching clients:', err));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedFacture) {\r\n            setClient(selectedFacture.client || '');\r\n            setClientCode(selectedFacture.clientCode || '');\r\n            setDate(selectedFacture.date || '');\r\n            setDT(selectedFacture.DT || '1.000');\r\n            setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n            setModalIsOpen(true);\r\n        }\r\n    }, [selectedFacture]);\r\n\r\n    const fetchPriceByReference = (reference, index) => {\r\n        axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n            .then(res => {\r\n                const price = res.data.price;\r\n                const newInputs = [...inputs];\r\n                newInputs[index].price = price;\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.log('Error fetching price:', err));\r\n    };\r\n\r\n    const handleReferenceChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].refAr = value;\r\n        setInputs(newInputs);\r\n        fetchPriceByReference(value, index);\r\n    };\r\n\r\n    const handleRemiseChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].remise = value;\r\n        setInputs(newInputs);\r\n    };\r\n\r\n    const handleQuantityChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].quantité = value;\r\n\r\n        axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n            .then(res => {\r\n                const availableQuantity = res.data.quantity;\r\n                const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n                if (remainingQuantity < 0) {\r\n                    alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n                    newInputs[index].quantité = availableQuantity;\r\n                }\r\n\r\n                const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n                newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.error('Error fetching quantity:', err));\r\n    };\r\n\r\n    const handleAddInput = () => {\r\n        const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n        if (isEmpty) {\r\n            alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n            return;\r\n        }\r\n        setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n    };\r\n\r\n    const calculateTotal = () => {\r\n        if (!inputs) return 0;\r\n        const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT);\r\n        return total.toFixed(3);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Filter out empty inputs before checking for invalid references\r\n        const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n        const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n        if (invalidReference) {\r\n            alert(\"Sélectionner une référence valide\");\r\n            return;\r\n        }\r\n\r\n        // Check if the client name exists in the clients table\r\n        const trimmedClient = client.trim().toLowerCase();\r\n        const clientExists = allClients.some(clientObj => clientObj.clName.trim().toLowerCase() === trimmedClient);\r\n        console.log('Checking client name:', client, 'Trimmed client:', trimmedClient, 'Client exists:', clientExists);\r\n        if (!clientExists) {\r\n            alert(\"Le nom du client n'existe pas dans la table des clients\");\r\n            return;\r\n        }\r\n\r\n        const refArArray = [];\r\n        const quantiteArray = [];\r\n        const remiseArray = [];\r\n        nonEmptyInputs.forEach(input => {\r\n            refArArray.push(input.refAr);\r\n            quantiteArray.push(input.quantité);\r\n            remiseArray.push(input.remise);\r\n        });\r\n\r\n        const totalPrice = calculateTotal();\r\n        axios.post('http://localhost:7777/factureVente/createFac/', {\r\n            client,\r\n            clientCode,\r\n            date,\r\n            DT,\r\n            refAr: refArArray,\r\n            quantité: quantiteArray,\r\n            remise: remiseArray,\r\n            totalPrice\r\n        })\r\n            .then(res => {\r\n                console.log(res);\r\n                window.location.reload();\r\n            })\r\n            .catch(err => console.log('Error creating facture:', err));\r\n    };\r\n\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === 'Enter') {\r\n            handleAddInput();\r\n        }\r\n    };\r\n\r\n    const handleClientChange = (e) => {\r\n        const { value } = e.target;\r\n        setClient(value);\r\n\r\n        axios.get(`http://localhost:7777/clients?q=${value}`)\r\n            .then(res => {\r\n                setFilteredClients(res.data);\r\n            })\r\n            .catch(err => console.log('Error fetching clients:', err));\r\n    };\r\n\r\n    const handleClientSelect = (name) => {\r\n        const selectedClient = filteredClients.find(client => client.clName === name);\r\n        if (selectedClient) {\r\n            setClient(name);\r\n            setClientCode(selectedClient.clCode);\r\n            setFilteredClients([]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n            <div style={{ display: 'flex', flex: '1' }}>\r\n                <div>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\r\n                        <input\r\n                            style={{ width: '200px' }}\r\n                            type=\"text\"\r\n                            id=\"code-client\"\r\n                            name=\"code-client\"\r\n                            value={clientCode}\r\n                            readOnly\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n                        <input\r\n                            style={{ width: '200px' }}\r\n                            type=\"text\"\r\n                            id=\"client\"\r\n                            value={client}\r\n                            onChange={handleClientChange}\r\n                        />\r\n                        {filteredClients.length > 0 && (\r\n                            <ul style={{ listStyleType: 'none', padding: 0, margin: 0, position: 'absolute', zIndex: 1, backgroundColor: 'white', border: '1px solid #ccc', width: '200px' }}>\r\n                                {filteredClients.map((client, index) => (\r\n                                    <li key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName)}>\r\n                                        {client.clName}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        )}\r\n                    </div>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n                        <input\r\n                            style={{ width: '200px' }}\r\n                            type=\"date\"\r\n                            id=\"date\"\r\n                            value={date}\r\n                            onChange={(e) => setDate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\r\n                        <input\r\n                            style={{ width: '200px' }}\r\n                            type=\"text\"\r\n                            id=\"code\"\r\n                            value={DT}\r\n                            onChange={(e) => setDT(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div style={{ flex: '1' }}>\r\n                        <label>Références</label>\r\n                        {inputs.map((input, index) => (\r\n                            <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n                                <div style={{ flex: '1', marginRight: '10px' }}>\r\n                                    <label>Référence d'article</label>\r\n                                    <input\r\n                                        list=\"references\"\r\n                                        style={{ width: '100%' }}\r\n                                        value={input.refAr}\r\n                                        onChange={(e) => handleReferenceChange(e, index)}\r\n                                    />\r\n                                    <datalist id=\"references\">\r\n                                        {references.map((reference, idx) => (\r\n                                            <option key={idx} value={reference} />\r\n                                        ))}\r\n                                    </datalist>\r\n                                </div>\r\n                                <div style={{ flex: '1', marginRight: '10px' }}>\r\n                                    <label>Prix vente TTC</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        style={{ width: '100%' }}\r\n                                        value={input.price}\r\n                                        readOnly\r\n                                    />\r\n                                </div>\r\n                                <div style={{ flex: '1', marginRight: '10px' }}>\r\n                                    <label>Quantité</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        style={{ width: '100%' }}\r\n                                        value={input.quantité}\r\n                                        onChange={(e) => handleQuantityChange(e, index)}\r\n                                    />\r\n                                </div>\r\n                                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                    <div style={{ flex: '1' }}>\r\n                                        <label>Remise</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            style={{ width: '100%' }}\r\n                                            value={input.remise}\r\n                                            onChange={(e) => handleRemiseChange(e, index)}\r\n                                            onKeyDown={handleKeyPress}\r\n                                            ref={remiseInputRef}\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{ marginLeft: '10px' }}>\r\n                                        <button type=\"button\" onClick={handleAddInput}>+</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\r\n                            <button\r\n                                style={{ width: '200px', marginBottom: '10px' }}\r\n                                type=\"button\"\r\n                                onClick={handleAddInput}\r\n                            >\r\n                                Ajouter\r\n                            </button>\r\n                            <button\r\n                                style={{ width: '200px', marginBottom: '10px' }}\r\n                                type=\"submit\"\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                Enregistrer\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ marginBottom: '20px' }}>\r\n                <label>Total</label>\r\n                <input\r\n                    type=\"text\"\r\n                    style={{ width: '100%' }}\r\n                    value={calculateTotal()}\r\n                    readOnly\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateFactureVente;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhCF,KAAK,CAACG,aAAa,CAAC,OAAO,CAAC;AAE5B,SAASC,kBAAkBA,CAAC;EAAEC,WAAW;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAC1D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACkB,EAAE,EAAEC,KAAK,CAAC,GAAGnB,QAAQ,CAAC,OAAO,CAAC;EACrC,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,CAAC;IAAEsB,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,CAAC,CAAC;EACxF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC4B,eAAe,EAAEC,kBAAkB,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgC,UAAU,EAAEC,aAAa,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAElD,MAAMkC,cAAc,GAAGhC,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACZE,KAAK,CAACgC,GAAG,CAAC,+BAA+B,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAI;MACTV,aAAa,CAACU,GAAG,CAACC,IAAI,CAACC,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,GAAG,CAAC,CAAC;IACvD,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,GAAG,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN1C,SAAS,CAAC,MAAM;IACZE,KAAK,CAACgC,GAAG,CAAC,+BAA+B,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAI;MACTJ,aAAa,CAACI,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CACDI,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,GAAG,CAAC,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN1C,SAAS,CAAC,MAAM;IACZ,IAAIS,eAAe,EAAE;MACjBG,SAAS,CAACH,eAAe,CAACE,MAAM,IAAI,EAAE,CAAC;MACvCG,aAAa,CAACL,eAAe,CAACI,UAAU,IAAI,EAAE,CAAC;MAC/CG,OAAO,CAACP,eAAe,CAACM,IAAI,IAAI,EAAE,CAAC;MACnCG,KAAK,CAACT,eAAe,CAACQ,EAAE,IAAI,OAAO,CAAC;MACpCG,SAAS,CAACX,eAAe,CAACU,MAAM,IAAI,CAAC;QAAEE,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC,CAAC,CAAC;MACvFM,cAAc,CAAC,IAAI,CAAC;IACxB;EACJ,CAAC,EAAE,CAACrB,eAAe,CAAC,CAAC;EAErB,MAAMoC,qBAAqB,GAAGA,CAACC,SAAS,EAAEC,KAAK,KAAK;IAChD7C,KAAK,CAACgC,GAAG,CAAE,sCAAqCY,SAAU,EAAC,CAAC,CACvDX,IAAI,CAACC,GAAG,IAAI;MACT,MAAMb,KAAK,GAAGa,GAAG,CAACC,IAAI,CAACd,KAAK;MAC5B,MAAMyB,SAAS,GAAG,CAAC,GAAG7B,MAAM,CAAC;MAC7B6B,SAAS,CAACD,KAAK,CAAC,CAACxB,KAAK,GAAGA,KAAK;MAC9BH,SAAS,CAAC4B,SAAS,CAAC;IACxB,CAAC,CAAC,CACDP,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,GAAG,CAAC,CAAC;EAChE,CAAC;EAED,MAAMO,qBAAqB,GAAGA,CAACC,KAAK,EAAEH,KAAK,KAAK;IAC5C,MAAM;MAAEI;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9B,MAAMJ,SAAS,GAAG,CAAC,GAAG7B,MAAM,CAAC;IAC7B6B,SAAS,CAACD,KAAK,CAAC,CAAC1B,KAAK,GAAG8B,KAAK;IAC9B/B,SAAS,CAAC4B,SAAS,CAAC;IACpBH,qBAAqB,CAACM,KAAK,EAAEJ,KAAK,CAAC;EACvC,CAAC;EAED,MAAMM,kBAAkB,GAAGA,CAACH,KAAK,EAAEH,KAAK,KAAK;IACzC,MAAM;MAAEI;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9B,MAAMJ,SAAS,GAAG,CAAC,GAAG7B,MAAM,CAAC;IAC7B6B,SAAS,CAACD,KAAK,CAAC,CAACvB,MAAM,GAAG2B,KAAK;IAC/B/B,SAAS,CAAC4B,SAAS,CAAC;EACxB,CAAC;EAED,MAAMM,oBAAoB,GAAGA,CAACJ,KAAK,EAAEH,KAAK,KAAK;IAC3C,MAAM;MAAEI;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9B,MAAMJ,SAAS,GAAG,CAAC,GAAG7B,MAAM,CAAC;IAC7B6B,SAAS,CAACD,KAAK,CAAC,CAACzB,QAAQ,GAAG6B,KAAK;IAEjCjD,KAAK,CAACgC,GAAG,CAAE,iCAAgCc,SAAS,CAACD,KAAK,CAAC,CAAC1B,KAAM,WAAU,CAAC,CACxEc,IAAI,CAACC,GAAG,IAAI;MACT,MAAMmB,iBAAiB,GAAGnB,GAAG,CAACC,IAAI,CAACmB,QAAQ;MAC3C,MAAMC,iBAAiB,GAAGF,iBAAiB,GAAGG,QAAQ,CAACP,KAAK,CAAC;MAE7D,IAAIM,iBAAiB,GAAG,CAAC,EAAE;QACvBE,KAAK,CAAE,+DAA8DJ,iBAAkB,wBAAuB,CAAC;QAC/GP,SAAS,CAACD,KAAK,CAAC,CAACzB,QAAQ,GAAGiC,iBAAiB;MACjD;MAEA,MAAMK,WAAW,GAAGZ,SAAS,CAACD,KAAK,CAAC,CAACxB,KAAK,IAAI,CAAC,GAAIyB,SAAS,CAACD,KAAK,CAAC,CAACvB,MAAM,GAAG,GAAI,CAAC;MAClFwB,SAAS,CAACD,KAAK,CAAC,CAACxB,KAAK,GAAGsC,UAAU,CAACD,WAAW,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;MAC3D1C,SAAS,CAAC4B,SAAS,CAAC;IACxB,CAAC,CAAC,CACDP,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACoB,KAAK,CAAC,0BAA0B,EAAErB,GAAG,CAAC,CAAC;EACrE,CAAC;EAED,MAAMsB,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,OAAO,GAAG9C,MAAM,CAAC+C,IAAI,CAACC,KAAK,IAAIA,KAAK,CAAC9C,KAAK,KAAK,EAAE,IAAI8C,KAAK,CAAC7C,QAAQ,KAAK,EAAE,IAAI6C,KAAK,CAAC3C,MAAM,KAAK,EAAE,CAAC;IACxG,IAAIyC,OAAO,EAAE;MACTN,KAAK,CAAC,6FAA6F,CAAC;MACpG;IACJ;IACAvC,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE;MAAEE,KAAK,EAAE,EAAE;MAAEE,KAAK,EAAE,CAAC;MAAED,QAAQ,EAAE,EAAE;MAAEE,MAAM,EAAE;IAAE,CAAC,CAAC,CAAC;EAC5E,CAAC;EAED,MAAM4C,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACjD,MAAM,EAAE,OAAO,CAAC;IACrB,MAAMkD,KAAK,GAAGlD,MAAM,CAACmD,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAKC,IAAI,CAACjD,KAAK,GAAGiD,IAAI,CAAClD,QAAQ,GAAI,GAAG,IAAK,GAAG,GAAGkD,IAAI,CAAChD,MAAM,CAAC,EAAE,CAAC,CAAC,GAAGqC,UAAU,CAAC5C,EAAE,CAAC;IAChI,OAAOoD,KAAK,CAACP,OAAO,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMW,YAAY,GAAIvB,KAAK,IAAK;IAC5BA,KAAK,CAACwB,cAAc,CAAC,CAAC;;IAEtB;IACA,MAAMC,cAAc,GAAGxD,MAAM,CAACyD,MAAM,CAACT,KAAK,IAAIA,KAAK,CAAC9C,KAAK,KAAK,EAAE,IAAI8C,KAAK,CAAC7C,QAAQ,KAAK,EAAE,IAAI6C,KAAK,CAAC3C,MAAM,KAAK,EAAE,CAAC;IACjH,MAAMqD,gBAAgB,GAAGF,cAAc,CAACT,IAAI,CAACC,KAAK,IAAI,CAAC1C,UAAU,CAACqD,QAAQ,CAACX,KAAK,CAAC9C,KAAK,CAAC,CAAC;IAExF,IAAIwD,gBAAgB,EAAE;MAClBlB,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACJ;;IAEA;IACA,MAAMoB,aAAa,GAAGpE,MAAM,CAACqE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACjD,MAAMC,YAAY,GAAGnD,UAAU,CAACmC,IAAI,CAACiB,SAAS,IAAIA,SAAS,CAACC,MAAM,CAACJ,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,KAAKF,aAAa,CAAC;IAC1GpC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEjC,MAAM,EAAE,iBAAiB,EAAEoE,aAAa,EAAE,gBAAgB,EAAEG,YAAY,CAAC;IAC9G,IAAI,CAACA,YAAY,EAAE;MACfvB,KAAK,CAAC,yDAAyD,CAAC;MAChE;IACJ;IAEA,MAAM0B,UAAU,GAAG,EAAE;IACrB,MAAMC,aAAa,GAAG,EAAE;IACxB,MAAMC,WAAW,GAAG,EAAE;IACtBZ,cAAc,CAACa,OAAO,CAACrB,KAAK,IAAI;MAC5BkB,UAAU,CAACI,IAAI,CAACtB,KAAK,CAAC9C,KAAK,CAAC;MAC5BiE,aAAa,CAACG,IAAI,CAACtB,KAAK,CAAC7C,QAAQ,CAAC;MAClCiE,WAAW,CAACE,IAAI,CAACtB,KAAK,CAAC3C,MAAM,CAAC;IAClC,CAAC,CAAC;IAEF,MAAMkE,UAAU,GAAGtB,cAAc,CAAC,CAAC;IACnClE,KAAK,CAACyF,IAAI,CAAC,+CAA+C,EAAE;MACxDhF,MAAM;MACNE,UAAU;MACVE,IAAI;MACJE,EAAE;MACFI,KAAK,EAAEgE,UAAU;MACjB/D,QAAQ,EAAEgE,aAAa;MACvB9D,MAAM,EAAE+D,WAAW;MACnBG;IACJ,CAAC,CAAC,CACGvD,IAAI,CAACC,GAAG,IAAI;MACTO,OAAO,CAACC,GAAG,CAACR,GAAG,CAAC;MAChBwD,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC5B,CAAC,CAAC,CACDrD,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,GAAG,CAAC,CAAC;EAClE,CAAC;EAED,MAAMqD,cAAc,GAAI7C,KAAK,IAAK;IAC9B,IAAIA,KAAK,CAAC8C,GAAG,KAAK,OAAO,EAAE;MACvBhC,cAAc,CAAC,CAAC;IACpB;EACJ,CAAC;EAED,MAAMiC,kBAAkB,GAAIC,CAAC,IAAK;IAC9B,MAAM;MAAE/C;IAAM,CAAC,GAAG+C,CAAC,CAAC9C,MAAM;IAC1BxC,SAAS,CAACuC,KAAK,CAAC;IAEhBjD,KAAK,CAACgC,GAAG,CAAE,mCAAkCiB,KAAM,EAAC,CAAC,CAChDhB,IAAI,CAACC,GAAG,IAAI;MACTR,kBAAkB,CAACQ,GAAG,CAACC,IAAI,CAAC;IAChC,CAAC,CAAC,CACDI,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,GAAG,CAAC,CAAC;EAClE,CAAC;EAED,MAAMyD,kBAAkB,GAAIC,IAAI,IAAK;IACjC,MAAMC,cAAc,GAAG1E,eAAe,CAAC2E,IAAI,CAAC3F,MAAM,IAAIA,MAAM,CAACyE,MAAM,KAAKgB,IAAI,CAAC;IAC7E,IAAIC,cAAc,EAAE;MAChBzF,SAAS,CAACwF,IAAI,CAAC;MACftF,aAAa,CAACuF,cAAc,CAACE,MAAM,CAAC;MACpC3E,kBAAkB,CAAC,EAAE,CAAC;IAC1B;EACJ,CAAC;EAED,oBACIvB,OAAA;IAAKmG,KAAK,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACrDtG,OAAA;MAAKmG,KAAK,EAAE;QAAEI,OAAO,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAI,CAAE;MAAAF,QAAA,gBACvCtG,OAAA;QAAAsG,QAAA,gBACItG,OAAA;UAAKmG,KAAK,EAAE;YAAEM,YAAY,EAAE;UAAO,CAAE;UAAAH,QAAA,gBACjCtG,OAAA;YAAOmG,KAAK,EAAE;cAAEO,KAAK,EAAE;YAAQ,CAAE;YAACC,OAAO,EAAC,aAAa;YAAAL,QAAA,EAAC;UAAY;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5E/G,OAAA;YACImG,KAAK,EAAE;cAAEO,KAAK,EAAE;YAAQ,CAAE;YAC1BM,IAAI,EAAC,MAAM;YACXC,EAAE,EAAC,aAAa;YAChBlB,IAAI,EAAC,aAAa;YAClBjD,KAAK,EAAEtC,UAAW;YAClB0G,QAAQ;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACN/G,OAAA;UAAKmG,KAAK,EAAE;YAAEM,YAAY,EAAE;UAAO,CAAE;UAAAH,QAAA,gBACjCtG,OAAA;YAAOmG,KAAK,EAAE;cAAEO,KAAK,EAAE;YAAQ,CAAE;YAACC,OAAO,EAAC,QAAQ;YAAAL,QAAA,EAAC;UAAa;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxE/G,OAAA;YACImG,KAAK,EAAE;cAAEO,KAAK,EAAE;YAAQ,CAAE;YAC1BM,IAAI,EAAC,MAAM;YACXC,EAAE,EAAC,QAAQ;YACXnE,KAAK,EAAExC,MAAO;YACd6G,QAAQ,EAAEvB;UAAmB;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,EACDzF,eAAe,CAAC8F,MAAM,GAAG,CAAC,iBACvBpH,OAAA;YAAImG,KAAK,EAAE;cAAEkB,aAAa,EAAE,MAAM;cAAEC,OAAO,EAAE,CAAC;cAAElB,MAAM,EAAE,CAAC;cAAEmB,QAAQ,EAAE,UAAU;cAAEC,MAAM,EAAE,CAAC;cAAEC,eAAe,EAAE,OAAO;cAAEC,MAAM,EAAE,gBAAgB;cAAEhB,KAAK,EAAE;YAAQ,CAAE;YAAAJ,QAAA,EAC5JhF,eAAe,CAACW,GAAG,CAAC,CAAC3B,MAAM,EAAEoC,KAAK,kBAC/B1C,OAAA;cAAgBmG,KAAK,EAAE;gBAAEmB,OAAO,EAAE,KAAK;gBAAEK,MAAM,EAAE;cAAU,CAAE;cAACC,OAAO,EAAEA,CAAA,KAAM9B,kBAAkB,CAACxF,MAAM,CAACyE,MAAM,CAAE;cAAAuB,QAAA,EAC1GhG,MAAM,CAACyE;YAAM,GADTrC,KAAK;cAAAkE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CACP;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACN/G,OAAA;UAAKmG,KAAK,EAAE;YAAEM,YAAY,EAAE;UAAO,CAAE;UAAAH,QAAA,gBACjCtG,OAAA;YAAOmG,KAAK,EAAE;cAAEO,KAAK,EAAE;YAAQ,CAAE;YAACC,OAAO,EAAC,MAAM;YAAAL,QAAA,EAAC;UAAI;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7D/G,OAAA;YACImG,KAAK,EAAE;cAAEO,KAAK,EAAE;YAAQ,CAAE;YAC1BM,IAAI,EAAC,MAAM;YACXC,EAAE,EAAC,MAAM;YACTnE,KAAK,EAAEpC,IAAK;YACZyG,QAAQ,EAAGtB,CAAC,IAAKlF,OAAO,CAACkF,CAAC,CAAC9C,MAAM,CAACD,KAAK;UAAE;YAAA8D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACN/G,OAAA;UAAKmG,KAAK,EAAE;YAAEM,YAAY,EAAE;UAAO,CAAE;UAAAH,QAAA,gBACjCtG,OAAA;YAAOmG,KAAK,EAAE;cAAEO,KAAK,EAAE;YAAQ,CAAE;YAACC,OAAO,EAAC,IAAI;YAAAL,QAAA,EAAC;UAAe;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtE/G,OAAA;YACImG,KAAK,EAAE;cAAEO,KAAK,EAAE;YAAQ,CAAE;YAC1BM,IAAI,EAAC,MAAM;YACXC,EAAE,EAAC,MAAM;YACTnE,KAAK,EAAElC,EAAG;YACVuG,QAAQ,EAAGtB,CAAC,IAAKhF,KAAK,CAACgF,CAAC,CAAC9C,MAAM,CAACD,KAAK;UAAE;YAAA8D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACN/G,OAAA;UAAKmG,KAAK,EAAE;YAAEK,IAAI,EAAE;UAAI,CAAE;UAAAF,QAAA,gBACtBtG,OAAA;YAAAsG,QAAA,EAAO;UAAU;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EACxBjG,MAAM,CAACmB,GAAG,CAAC,CAAC6B,KAAK,EAAEpB,KAAK,kBACrB1C,OAAA;YAAiBmG,KAAK,EAAE;cAAEI,OAAO,EAAE,MAAM;cAAEsB,UAAU,EAAE,QAAQ;cAAEpB,YAAY,EAAE;YAAO,CAAE;YAAAH,QAAA,gBACpFtG,OAAA;cAAKmG,KAAK,EAAE;gBAAEK,IAAI,EAAE,GAAG;gBAAEsB,WAAW,EAAE;cAAO,CAAE;cAAAxB,QAAA,gBAC3CtG,OAAA;gBAAAsG,QAAA,EAAO;cAAmB;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAClC/G,OAAA;gBACI+H,IAAI,EAAC,YAAY;gBACjB5B,KAAK,EAAE;kBAAEO,KAAK,EAAE;gBAAO,CAAE;gBACzB5D,KAAK,EAAEgB,KAAK,CAAC9C,KAAM;gBACnBmG,QAAQ,EAAGtB,CAAC,IAAKjD,qBAAqB,CAACiD,CAAC,EAAEnD,KAAK;cAAE;gBAAAkE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpD,CAAC,eACF/G,OAAA;gBAAUiH,EAAE,EAAC,YAAY;gBAAAX,QAAA,EACpBlF,UAAU,CAACa,GAAG,CAAC,CAACQ,SAAS,EAAEuF,GAAG,kBAC3BhI,OAAA;kBAAkB8C,KAAK,EAAEL;gBAAU,GAAtBuF,GAAG;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAqB,CACxC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eACN/G,OAAA;cAAKmG,KAAK,EAAE;gBAAEK,IAAI,EAAE,GAAG;gBAAEsB,WAAW,EAAE;cAAO,CAAE;cAAAxB,QAAA,gBAC3CtG,OAAA;gBAAAsG,QAAA,EAAO;cAAc;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC7B/G,OAAA;gBACIgH,IAAI,EAAC,QAAQ;gBACbb,KAAK,EAAE;kBAAEO,KAAK,EAAE;gBAAO,CAAE;gBACzB5D,KAAK,EAAEgB,KAAK,CAAC5C,KAAM;gBACnBgG,QAAQ;cAAA;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eACN/G,OAAA;cAAKmG,KAAK,EAAE;gBAAEK,IAAI,EAAE,GAAG;gBAAEsB,WAAW,EAAE;cAAO,CAAE;cAAAxB,QAAA,gBAC3CtG,OAAA;gBAAAsG,QAAA,EAAO;cAAQ;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACvB/G,OAAA;gBACIgH,IAAI,EAAC,QAAQ;gBACbb,KAAK,EAAE;kBAAEO,KAAK,EAAE;gBAAO,CAAE;gBACzB5D,KAAK,EAAEgB,KAAK,CAAC7C,QAAS;gBACtBkG,QAAQ,EAAGtB,CAAC,IAAK5C,oBAAoB,CAAC4C,CAAC,EAAEnD,KAAK;cAAE;gBAAAkE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eACN/G,OAAA;cAAKmG,KAAK,EAAE;gBAAEI,OAAO,EAAE,MAAM;gBAAEsB,UAAU,EAAE;cAAS,CAAE;cAAAvB,QAAA,gBAClDtG,OAAA;gBAAKmG,KAAK,EAAE;kBAAEK,IAAI,EAAE;gBAAI,CAAE;gBAAAF,QAAA,gBACtBtG,OAAA;kBAAAsG,QAAA,EAAO;gBAAM;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACrB/G,OAAA;kBACIgH,IAAI,EAAC,QAAQ;kBACbb,KAAK,EAAE;oBAAEO,KAAK,EAAE;kBAAO,CAAE;kBACzB5D,KAAK,EAAEgB,KAAK,CAAC3C,MAAO;kBACpBgG,QAAQ,EAAGtB,CAAC,IAAK7C,kBAAkB,CAAC6C,CAAC,EAAEnD,KAAK,CAAE;kBAC9CuF,SAAS,EAAEvC,cAAe;kBAC1BvD,GAAG,EAAEP;gBAAe;kBAAAgF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,eACN/G,OAAA;gBAAKmG,KAAK,EAAE;kBAAE+B,UAAU,EAAE;gBAAO,CAAE;gBAAA5B,QAAA,eAC/BtG,OAAA;kBAAQgH,IAAI,EAAC,QAAQ;kBAACY,OAAO,EAAEjE,cAAe;kBAAA2C,QAAA,EAAC;gBAAC;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA,GAhDArE,KAAK;YAAAkE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAiDV,CACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACN/G,OAAA;QAAAsG,QAAA,eACItG,OAAA;UAAAsG,QAAA,eACItG,OAAA;YAAKmG,KAAK,EAAE;cAAEI,OAAO,EAAE,cAAc;cAAEE,YAAY,EAAE,MAAM;cAAE0B,SAAS,EAAE;YAAS,CAAE;YAAA7B,QAAA,gBAC/EtG,OAAA;cACImG,KAAK,EAAE;gBAAEO,KAAK,EAAE,OAAO;gBAAED,YAAY,EAAE;cAAO,CAAE;cAChDO,IAAI,EAAC,QAAQ;cACbY,OAAO,EAAEjE,cAAe;cAAA2C,QAAA,EAC3B;YAED;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT/G,OAAA;cACImG,KAAK,EAAE;gBAAEO,KAAK,EAAE,OAAO;gBAAED,YAAY,EAAE;cAAO,CAAE;cAChDO,IAAI,EAAC,QAAQ;cACbY,OAAO,EAAExD,YAAa;cAAAkC,QAAA,EACzB;YAED;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACN/G,OAAA;MAAKmG,KAAK,EAAE;QAAEM,YAAY,EAAE;MAAO,CAAE;MAAAH,QAAA,gBACjCtG,OAAA;QAAAsG,QAAA,EAAO;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpB/G,OAAA;QACIgH,IAAI,EAAC,MAAM;QACXb,KAAK,EAAE;UAAEO,KAAK,EAAE;QAAO,CAAE;QACzB5D,KAAK,EAAEiB,cAAc,CAAC,CAAE;QACxBmD,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC1G,EAAA,CA/TQH,kBAAkB;AAAAkI,EAAA,GAAlBlI,kBAAkB;AAiU3B,eAAeA,kBAAkB;AAAC,IAAAkI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}