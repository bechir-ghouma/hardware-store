{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\Article.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n// import CreateArticle from './CreateArticle';\n\n// function Article() {\n//     const [articles, setArticles] = useState([]);\n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/article/')\n//             .then(res => setArticles(res.data))\n//             .catch(err => console.log(err));\n//     }, []);\n\n//     const handleDelete = async (id) => {\n//         try {\n//             await axios.delete(`http://localhost:7777/article/${id}`);\n//             setArticles(articles.filter(article => article.arID !== id));\n//         } catch (err) {\n//             console.log(err);\n//         }\n//     }\n\n//     const handleAddArticle = (newArticle) => {\n//         setArticles([...articles, newArticle]);\n//     }\n\n//     return (\n//         <div className='article-container'>\n//             <CreateArticle onAddArticle={handleAddArticle} /><br />\n//             <h2>Liste des Articles</h2>\n//             <div className='table-responsive'>\n//                 <table className='table table-striped'>\n//                     <thead>\n//                         <tr>\n//                             <th>Id</th> \n//                             <th>Nom</th>\n//                             <th>Référence</th>\n//                             <th>Achat brut</th>\n//                             <th>Remise1</th>\n//                             <th>Prix d'achat AR1</th>\n//                             <th>Remise2</th>\n//                             <th>Achat AR2 HT</th>\n//                             <th>TVA</th>\n//                             <th>Prix TTC</th>\n//                             <th>Marge bénéficiaire</th>\n//                             <th>Vente HT</th>\n//                             <th>Vente TTC</th>\n//                             {/* <th>Modifier</th>\n//                             <th>Supprimer</th> */}\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {articles.map(article => (\n//                             <tr key={article.arID}>\n//                                 <td>{article.arID}</td>\n//                                 <td>{article.arName}</td>\n//                                 <td>{article.ref}</td>\n//                                 <td>{article.prachat}</td>\n//                                 <td>{article.remise1}</td>\n//                                 <td>{article.prar1}</td>\n//                                 <td>{article.remise2}</td>\n//                                 <td>{article.prar2}</td>\n//                                 <td>{article.tva}%</td>\n//                                 <td>{article.achatc}</td>\n//                                 <td>{article.margeben}</td>\n//                                 <td>{article.prventeht}</td>\n//                                 <td>{article.prventettc}</td>\n//                                 {/* <td>\n//                                     <Link to={`updateAr/${article.arID}`} className='btn btn-primary'>Modifier</Link>\n//                                 </td>\n//                                 <td>\n//                                     <button className='btn btn-danger ms-2' onClick={() => handleDelete(article.arID)}>Supprimer</button>\n//                                 </td> */}\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Article;\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import CreateArticle from './CreateArticle';\n\n// function Article() {\n//     const [articles, setArticles] = useState([]);\n//     const [additionalColumns, setAdditionalColumns] = useState([]);\n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/article/')\n//             .then(res => setArticles(res.data))\n//             .catch(err => console.log(err));\n//     }, []);\n\n//     const handleDelete = async (id) => {\n//         try {\n//             await axios.delete(`http://localhost:7777/article/${id}`);\n//             setArticles(articles.filter(article => article.arID !== id));\n//         } catch (err) {\n//             console.log(err);\n//         }\n//     }\n\n//     const handleAddArticle = (newArticle) => {\n//         setArticles([...articles, newArticle]);\n//     }\n\n//     const toggleColumn = (columnName) => {\n//         if (additionalColumns.includes(columnName)) {\n//             setAdditionalColumns(additionalColumns.filter(col => col !== columnName));\n//         } else {\n//             setAdditionalColumns([...additionalColumns, columnName]);\n//         }\n//     }\n\n//     // Debugging: Log the additionalColumns array to console\n//     console.log('Additional Columns:', additionalColumns);\n\n//     return (\n//         <div className='article-container'>\n//             <CreateArticle onAddArticle={handleAddArticle} /><br />\n//             <h2>Liste des Articles</h2>\n//             <div className='table-responsive'>\n//                 <table className='table table-striped'>\n//                     <thead>\n//                         <tr>\n//                             <th>Id</th> \n//                             <th>Nom</th>\n//                             <th>Référence</th>\n//                             <th>TVA</th>\n//                             <th>Prix TTC</th>\n//                             <th>Vente TTC</th>\n//                             {additionalColumns.map(column => (\n//                                 <th key={column}>\n//                                     <button onClick={() => toggleColumn(column)} className=\"btn btn-link\">{column}</button>\n//                                 </th>\n//                             ))}\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {articles.map(article => (\n//                             <tr key={article.arID}>\n//                                 <td>{article.arID}</td>\n//                                 <td>{article.arName}</td>\n//                                 <td>{article.ref}</td>\n//                                 <td>{article.tva}%</td>\n//                                 <td>{article.achatc}</td>\n//                                 <td>{article.prventettc}</td>\n//                                 {additionalColumns.map(column => (\n//                                     <td key={column}>{article[column]}</td>\n//                                 ))}\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Article;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { FaPlus } from 'react-icons/fa';\n// import './Article.css'; // Importing the CSS file\n// import CreateArticle from './CreateArticle';\n\n// function Article() {\n//     const [articles, setArticles] = useState([]);\n//     const [selectedColumns, setSelectedColumns] = useState(['arID', 'arName', 'ref', 'achatc', 'tva', 'prventettc']);\n//     const [showColumnSelector, setShowColumnSelector] = useState(false);\n\n//     const additionalColumns = [\n//         { name: \"Prix d'achat AR1\", key: \"prar1\" },\n//         { name: \"Remise2\", key: \"remise2\" },\n//         { name: \"Achat AR2 HT\", key: \"prar2\" },\n//         { name: \"Marge bénéficiaire\", key: \"margeben\" },\n//         { name: \"Vente HT\", key: \"prventeht\" }\n//     ];\n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/article/')\n//             .then(res => setArticles(res.data))\n//             .catch(err => console.log(err));\n//     }, []);\n\n//     const handleDelete = async (id) => {\n//         try {\n//             await axios.delete(`http://localhost:7777/article/${id}`);\n//             setArticles(articles.filter(article => article.arID !== id));\n//         } catch (err) {\n//             console.log(err);\n//         }\n//     }\n\n//     const handleAddArticle = (newArticle) => {\n//         setArticles([...articles, newArticle]);\n//     }\n\n//     const handleColumnSelect = (colKey) => {\n//         if (!selectedColumns.includes(colKey)) {\n//             setSelectedColumns([...selectedColumns, colKey]);\n//         }\n//     };\n\n//     const handleRemoveColumn = (colKey) => {\n//         setSelectedColumns(selectedColumns.filter(col => col !== colKey));\n//     };\n\n//     return (\n//         <div className='article-container'>\n//             <CreateArticle onAddArticle={handleAddArticle} /><br />\n//             <h2>Liste des Articles</h2>\n//             <div className='table-responsive'>\n//                 <table className='table table-striped'>\n//                     <thead>\n//                         <tr>\n//                             {selectedColumns.map((colKey) => (\n//                                 <th key={colKey}>\n//                                     {colKey === 'arID' ? 'Id' :\n//                                         colKey === 'arName' ? 'Nom' :\n//                                             colKey === 'ref' ? 'Référence' :\n//                                                 colKey === 'achatc' ? 'Prix TTC' :\n//                                                     colKey === 'tva' ? 'TVA' :\n//                                                         colKey === 'prventettc' ? 'Vente TTC' :\n//                                                             additionalColumns.find(col => col.key === colKey).name}\n//                                     {additionalColumns.some(col => col.key === colKey) && (\n//                                         <button className=\"btn btn-link btn-sm\" onClick={() => handleRemoveColumn(colKey)}>×</button>\n//                                     )}\n//                                 </th>\n//                             ))}\n//                             <th>\n//                                 <div className='column-selector-container'>\n//                                     <button\n//                                         className='btn btn-secondary column-selector-btn'\n//                                         onClick={() => setShowColumnSelector(!showColumnSelector)}\n//                                     >\n//                                         <FaPlus />\n//                                     </button>\n//                                     {showColumnSelector && (\n//                                         <div className='column-selector'>\n//                                             <h3>Ajouter des Colonnes</h3>\n//                                             <ul>\n//                                                 {additionalColumns.map((col) => (\n//                                                     <li key={col.key}>\n//                                                         <button\n//                                                             className='btn btn-link'\n//                                                             onClick={() => handleColumnSelect(col.key)}\n//                                                             disabled={selectedColumns.includes(col.key)}\n//                                                         >\n//                                                             {col.name}\n//                                                         </button>\n//                                                     </li>\n//                                                 ))}\n//                                             </ul>\n//                                         </div>\n//                                     )}\n//                                 </div>\n//                             </th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {articles.map(article => (\n//                             <tr key={article.arID}>\n//                                 {selectedColumns.map((colKey) => (\n//                                     <td key={colKey}>{article[colKey]}</td>\n//                                 ))}\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Article;\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { FaPlus } from 'react-icons/fa';\nimport { Modal, Button } from 'react-bootstrap'; // Importing the Modal component\nimport './Article.css'; // Importing the CSS file\nimport CreateArticle from './CreateArticle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Article() {\n  _s();\n  const defaultColumns = ['arID', 'arName', 'ref', 'achatc', 'tva', 'prventettc'];\n  const [articles, setArticles] = useState([]);\n  const [selectedColumns, setSelectedColumns] = useState(defaultColumns);\n  const [showPopup, setShowPopup] = useState(false); // State for showing the popup\n\n  const additionalColumns = [{\n    name: \"Prix d'achat AR1\",\n    key: \"prar1\"\n  }, {\n    name: \"Remise2\",\n    key: \"remise2\"\n  }, {\n    name: \"Achat AR2 HT\",\n    key: \"prar2\"\n  }, {\n    name: \"Marge bénéficiaire\",\n    key: \"margeben\"\n  }, {\n    name: \"Vente HT\",\n    key: \"prventeht\"\n  }];\n\n  // Retrieve selected columns from localStorage on component mount\n  useEffect(() => {\n    const savedColumns = JSON.parse(localStorage.getItem('selectedColumns'));\n    if (savedColumns) {\n      setSelectedColumns(savedColumns);\n    }\n  }, []);\n\n  // Fetch articles from the API\n  useEffect(() => {\n    axios.get('http://localhost:7777/article/').then(res => setArticles(res.data)).catch(err => console.log(err));\n  }, []);\n\n  // Save selected columns to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('selectedColumns', JSON.stringify(selectedColumns));\n  }, [selectedColumns]);\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:7777/article/${id}`);\n      setArticles(articles.filter(article => article.arID !== id));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const handleAddArticle = newArticle => {\n    setArticles([...articles, newArticle]);\n  };\n  const handleColumnSelect = colKey => {\n    if (!selectedColumns.includes(colKey)) {\n      setSelectedColumns([...selectedColumns, colKey]);\n    }\n  };\n  const handleRemoveColumn = colKey => {\n    setSelectedColumns(selectedColumns.filter(col => col !== colKey));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"article-container\",\n    children: [/*#__PURE__*/_jsxDEV(CreateArticle, {\n      onAddArticle: handleAddArticle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [selectedColumns.map(colKey => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [colKey === 'arID' ? 'Id' : colKey === 'arName' ? 'Nom' : colKey === 'achatc' ? 'Prix TTC' : colKey === 'tva' ? 'TVA' : colKey === 'prventettc' ? 'Vente TTC' : additionalColumns.find(col => col.key === colKey).name, additionalColumns.some(col => col.key === colKey) && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-link btn-sm\",\n                onClick: () => handleRemoveColumn(colKey),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 41\n              }, this)]\n            }, colKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"column-selector-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-secondary column-selector-btn\",\n                  onClick: () => setShowPopup(true) // Show popup when clicking on the plus icon\n                  ,\n                  children: /*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                  show: showPopup,\n                  onHide: () => setShowPopup(false),\n                  children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n                    closeButton: true,\n                    children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                      children: \"Ajouter des Colonnes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n                    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                      children: additionalColumns.map(col => /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"btn btn-link\",\n                          onClick: () => handleColumnSelect(col.key),\n                          disabled: selectedColumns.includes(col.key),\n                          children: col.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 392,\n                          columnNumber: 57\n                        }, this)\n                      }, col.key, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 391,\n                        columnNumber: 53\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: articles.map(article => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: selectedColumns.map(colKey => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: article[colKey]\n            }, colKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 37\n            }, this))\n          }, article.arID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 9\n  }, this);\n}\n_s(Article, \"X12gC5IHG9lY5hSCaxpJQZ4dTig=\");\n_c = Article;\nexport default Article;\nvar _c;\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"names":["React","useEffect","useState","axios","FaPlus","Modal","Button","CreateArticle","jsxDEV","_jsxDEV","Article","_s","defaultColumns","articles","setArticles","selectedColumns","setSelectedColumns","showPopup","setShowPopup","additionalColumns","name","key","savedColumns","JSON","parse","localStorage","getItem","get","then","res","data","catch","err","console","log","setItem","stringify","handleDelete","id","delete","filter","article","arID","handleAddArticle","newArticle","handleColumnSelect","colKey","includes","handleRemoveColumn","col","className","children","onAddArticle","fileName","_jsxFileName","lineNumber","columnNumber","map","find","some","onClick","show","onHide","Header","closeButton","Title","Body","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/Article.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { Link } from 'react-router-dom';\r\n// import CreateArticle from './CreateArticle';\r\n\r\n// function Article() {\r\n//     const [articles, setArticles] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/article/')\r\n//             .then(res => setArticles(res.data))\r\n//             .catch(err => console.log(err));\r\n//     }, []);\r\n\r\n//     const handleDelete = async (id) => {\r\n//         try {\r\n//             await axios.delete(`http://localhost:7777/article/${id}`);\r\n//             setArticles(articles.filter(article => article.arID !== id));\r\n//         } catch (err) {\r\n//             console.log(err);\r\n//         }\r\n//     }\r\n\r\n//     const handleAddArticle = (newArticle) => {\r\n//         setArticles([...articles, newArticle]);\r\n//     }\r\n\r\n//     return (\r\n//         <div className='article-container'>\r\n//             <CreateArticle onAddArticle={handleAddArticle} /><br />\r\n//             <h2>Liste des Articles</h2>\r\n//             <div className='table-responsive'>\r\n//                 <table className='table table-striped'>\r\n//                     <thead>\r\n//                         <tr>\r\n//                             <th>Id</th> \r\n//                             <th>Nom</th>\r\n//                             <th>Référence</th>\r\n//                             <th>Achat brut</th>\r\n//                             <th>Remise1</th>\r\n//                             <th>Prix d'achat AR1</th>\r\n//                             <th>Remise2</th>\r\n//                             <th>Achat AR2 HT</th>\r\n//                             <th>TVA</th>\r\n//                             <th>Prix TTC</th>\r\n//                             <th>Marge bénéficiaire</th>\r\n//                             <th>Vente HT</th>\r\n//                             <th>Vente TTC</th>\r\n//                             {/* <th>Modifier</th>\r\n//                             <th>Supprimer</th> */}\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {articles.map(article => (\r\n//                             <tr key={article.arID}>\r\n//                                 <td>{article.arID}</td>\r\n//                                 <td>{article.arName}</td>\r\n//                                 <td>{article.ref}</td>\r\n//                                 <td>{article.prachat}</td>\r\n//                                 <td>{article.remise1}</td>\r\n//                                 <td>{article.prar1}</td>\r\n//                                 <td>{article.remise2}</td>\r\n//                                 <td>{article.prar2}</td>\r\n//                                 <td>{article.tva}%</td>\r\n//                                 <td>{article.achatc}</td>\r\n//                                 <td>{article.margeben}</td>\r\n//                                 <td>{article.prventeht}</td>\r\n//                                 <td>{article.prventettc}</td>\r\n//                                 {/* <td>\r\n//                                     <Link to={`updateAr/${article.arID}`} className='btn btn-primary'>Modifier</Link>\r\n//                                 </td>\r\n//                                 <td>\r\n//                                     <button className='btn btn-danger ms-2' onClick={() => handleDelete(article.arID)}>Supprimer</button>\r\n//                                 </td> */}\r\n//                             </tr>\r\n//                         ))}\r\n//                     </tbody>\r\n//                 </table>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Article;\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import CreateArticle from './CreateArticle';\r\n\r\n// function Article() {\r\n//     const [articles, setArticles] = useState([]);\r\n//     const [additionalColumns, setAdditionalColumns] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/article/')\r\n//             .then(res => setArticles(res.data))\r\n//             .catch(err => console.log(err));\r\n//     }, []);\r\n\r\n//     const handleDelete = async (id) => {\r\n//         try {\r\n//             await axios.delete(`http://localhost:7777/article/${id}`);\r\n//             setArticles(articles.filter(article => article.arID !== id));\r\n//         } catch (err) {\r\n//             console.log(err);\r\n//         }\r\n//     }\r\n\r\n//     const handleAddArticle = (newArticle) => {\r\n//         setArticles([...articles, newArticle]);\r\n//     }\r\n\r\n//     const toggleColumn = (columnName) => {\r\n//         if (additionalColumns.includes(columnName)) {\r\n//             setAdditionalColumns(additionalColumns.filter(col => col !== columnName));\r\n//         } else {\r\n//             setAdditionalColumns([...additionalColumns, columnName]);\r\n//         }\r\n//     }\r\n\r\n//     // Debugging: Log the additionalColumns array to console\r\n//     console.log('Additional Columns:', additionalColumns);\r\n\r\n//     return (\r\n//         <div className='article-container'>\r\n//             <CreateArticle onAddArticle={handleAddArticle} /><br />\r\n//             <h2>Liste des Articles</h2>\r\n//             <div className='table-responsive'>\r\n//                 <table className='table table-striped'>\r\n//                     <thead>\r\n//                         <tr>\r\n//                             <th>Id</th> \r\n//                             <th>Nom</th>\r\n//                             <th>Référence</th>\r\n//                             <th>TVA</th>\r\n//                             <th>Prix TTC</th>\r\n//                             <th>Vente TTC</th>\r\n//                             {additionalColumns.map(column => (\r\n//                                 <th key={column}>\r\n//                                     <button onClick={() => toggleColumn(column)} className=\"btn btn-link\">{column}</button>\r\n//                                 </th>\r\n//                             ))}\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {articles.map(article => (\r\n//                             <tr key={article.arID}>\r\n//                                 <td>{article.arID}</td>\r\n//                                 <td>{article.arName}</td>\r\n//                                 <td>{article.ref}</td>\r\n//                                 <td>{article.tva}%</td>\r\n//                                 <td>{article.achatc}</td>\r\n//                                 <td>{article.prventettc}</td>\r\n//                                 {additionalColumns.map(column => (\r\n//                                     <td key={column}>{article[column]}</td>\r\n//                                 ))}\r\n//                             </tr>\r\n//                         ))}\r\n//                     </tbody>\r\n//                 </table>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Article;\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { FaPlus } from 'react-icons/fa';\r\n// import './Article.css'; // Importing the CSS file\r\n// import CreateArticle from './CreateArticle';\r\n\r\n// function Article() {\r\n//     const [articles, setArticles] = useState([]);\r\n//     const [selectedColumns, setSelectedColumns] = useState(['arID', 'arName', 'ref', 'achatc', 'tva', 'prventettc']);\r\n//     const [showColumnSelector, setShowColumnSelector] = useState(false);\r\n\r\n//     const additionalColumns = [\r\n//         { name: \"Prix d'achat AR1\", key: \"prar1\" },\r\n//         { name: \"Remise2\", key: \"remise2\" },\r\n//         { name: \"Achat AR2 HT\", key: \"prar2\" },\r\n//         { name: \"Marge bénéficiaire\", key: \"margeben\" },\r\n//         { name: \"Vente HT\", key: \"prventeht\" }\r\n//     ];\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/article/')\r\n//             .then(res => setArticles(res.data))\r\n//             .catch(err => console.log(err));\r\n//     }, []);\r\n\r\n//     const handleDelete = async (id) => {\r\n//         try {\r\n//             await axios.delete(`http://localhost:7777/article/${id}`);\r\n//             setArticles(articles.filter(article => article.arID !== id));\r\n//         } catch (err) {\r\n//             console.log(err);\r\n//         }\r\n//     }\r\n\r\n//     const handleAddArticle = (newArticle) => {\r\n//         setArticles([...articles, newArticle]);\r\n//     }\r\n\r\n//     const handleColumnSelect = (colKey) => {\r\n//         if (!selectedColumns.includes(colKey)) {\r\n//             setSelectedColumns([...selectedColumns, colKey]);\r\n//         }\r\n//     };\r\n\r\n//     const handleRemoveColumn = (colKey) => {\r\n//         setSelectedColumns(selectedColumns.filter(col => col !== colKey));\r\n//     };\r\n\r\n//     return (\r\n//         <div className='article-container'>\r\n//             <CreateArticle onAddArticle={handleAddArticle} /><br />\r\n//             <h2>Liste des Articles</h2>\r\n//             <div className='table-responsive'>\r\n//                 <table className='table table-striped'>\r\n//                     <thead>\r\n//                         <tr>\r\n//                             {selectedColumns.map((colKey) => (\r\n//                                 <th key={colKey}>\r\n//                                     {colKey === 'arID' ? 'Id' :\r\n//                                         colKey === 'arName' ? 'Nom' :\r\n//                                             colKey === 'ref' ? 'Référence' :\r\n//                                                 colKey === 'achatc' ? 'Prix TTC' :\r\n//                                                     colKey === 'tva' ? 'TVA' :\r\n//                                                         colKey === 'prventettc' ? 'Vente TTC' :\r\n//                                                             additionalColumns.find(col => col.key === colKey).name}\r\n//                                     {additionalColumns.some(col => col.key === colKey) && (\r\n//                                         <button className=\"btn btn-link btn-sm\" onClick={() => handleRemoveColumn(colKey)}>×</button>\r\n//                                     )}\r\n//                                 </th>\r\n//                             ))}\r\n//                             <th>\r\n//                                 <div className='column-selector-container'>\r\n//                                     <button\r\n//                                         className='btn btn-secondary column-selector-btn'\r\n//                                         onClick={() => setShowColumnSelector(!showColumnSelector)}\r\n//                                     >\r\n//                                         <FaPlus />\r\n//                                     </button>\r\n//                                     {showColumnSelector && (\r\n//                                         <div className='column-selector'>\r\n//                                             <h3>Ajouter des Colonnes</h3>\r\n//                                             <ul>\r\n//                                                 {additionalColumns.map((col) => (\r\n//                                                     <li key={col.key}>\r\n//                                                         <button\r\n//                                                             className='btn btn-link'\r\n//                                                             onClick={() => handleColumnSelect(col.key)}\r\n//                                                             disabled={selectedColumns.includes(col.key)}\r\n//                                                         >\r\n//                                                             {col.name}\r\n//                                                         </button>\r\n//                                                     </li>\r\n//                                                 ))}\r\n//                                             </ul>\r\n//                                         </div>\r\n//                                     )}\r\n//                                 </div>\r\n//                             </th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {articles.map(article => (\r\n//                             <tr key={article.arID}>\r\n//                                 {selectedColumns.map((colKey) => (\r\n//                                     <td key={colKey}>{article[colKey]}</td>\r\n//                                 ))}\r\n//                             </tr>\r\n//                         ))}\r\n//                     </tbody>\r\n//                 </table>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Article;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FaPlus } from 'react-icons/fa';\r\nimport { Modal, Button } from 'react-bootstrap'; // Importing the Modal component\r\nimport './Article.css'; // Importing the CSS file\r\nimport CreateArticle from './CreateArticle';\r\n\r\nfunction Article() {\r\n    const defaultColumns = ['arID', 'arName', 'ref', 'achatc', 'tva', 'prventettc'];\r\n    const [articles, setArticles] = useState([]);\r\n    const [selectedColumns, setSelectedColumns] = useState(defaultColumns);\r\n    const [showPopup, setShowPopup] = useState(false); // State for showing the popup\r\n\r\n    const additionalColumns = [\r\n        { name: \"Prix d'achat AR1\", key: \"prar1\" },\r\n        { name: \"Remise2\", key: \"remise2\" },\r\n        { name: \"Achat AR2 HT\", key: \"prar2\" },\r\n        { name: \"Marge bénéficiaire\", key: \"margeben\" },\r\n        { name: \"Vente HT\", key: \"prventeht\" }\r\n    ];\r\n\r\n    // Retrieve selected columns from localStorage on component mount\r\n    useEffect(() => {\r\n        const savedColumns = JSON.parse(localStorage.getItem('selectedColumns'));\r\n        if (savedColumns) {\r\n            setSelectedColumns(savedColumns);\r\n        }\r\n    }, []);\r\n\r\n    // Fetch articles from the API\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7777/article/')\r\n            .then(res => setArticles(res.data))\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    // Save selected columns to localStorage whenever they change\r\n    useEffect(() => {\r\n        localStorage.setItem('selectedColumns', JSON.stringify(selectedColumns));\r\n    }, [selectedColumns]);\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await axios.delete(`http://localhost:7777/article/${id}`);\r\n            setArticles(articles.filter(article => article.arID !== id));\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const handleAddArticle = (newArticle) => {\r\n        setArticles([...articles, newArticle]);\r\n    };\r\n\r\n    const handleColumnSelect = (colKey) => {\r\n        if (!selectedColumns.includes(colKey)) {\r\n            setSelectedColumns([...selectedColumns, colKey]);\r\n        }\r\n    };\r\n\r\n    const handleRemoveColumn = (colKey) => {\r\n        setSelectedColumns(selectedColumns.filter(col => col !== colKey));\r\n    };\r\n\r\n    return (\r\n        <div className='article-container'>\r\n            <CreateArticle onAddArticle={handleAddArticle} />\r\n            {/* <h2>Liste des Articles</h2> */}\r\n            <div className='table-responsive'>\r\n                <table className='table table-striped'>\r\n                    <thead>\r\n                        <tr>\r\n                            {selectedColumns.map((colKey) => (\r\n                                <th key={colKey}>\r\n                                    {colKey === 'arID' ? 'Id' :\r\n                                        \r\n                                        colKey === 'arName' ? 'Nom' :\r\n                                            \r\n                                                colKey === 'achatc' ? 'Prix TTC' :\r\n                                                    colKey === 'tva' ? 'TVA' :\r\n                                                        colKey === 'prventettc' ? 'Vente TTC' :\r\n                                                            additionalColumns.find(col => col.key === colKey).name}\r\n                                    {additionalColumns.some(col => col.key === colKey) && (\r\n                                        <button className=\"btn btn-link btn-sm\" onClick={() => handleRemoveColumn(colKey)}>×</button>\r\n                                    )}\r\n                                </th>\r\n                            ))}\r\n                            <th>\r\n                                <div className='column-selector-container'>\r\n                                    <button\r\n                                        className='btn btn-secondary column-selector-btn'\r\n                                        onClick={() => setShowPopup(true)} // Show popup when clicking on the plus icon\r\n                                    >\r\n                                        <FaPlus />\r\n                                    </button>\r\n                                    <Modal show={showPopup} onHide={() => setShowPopup(false)}>\r\n                                        <Modal.Header closeButton>\r\n                                            <Modal.Title>Ajouter des Colonnes</Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Body>\r\n                                            <ul>\r\n                                                {additionalColumns.map((col) => (\r\n                                                    <li key={col.key}>\r\n                                                        <button\r\n                                                            className='btn btn-link'\r\n                                                            onClick={() => handleColumnSelect(col.key)}\r\n                                                            disabled={selectedColumns.includes(col.key)}\r\n                                                        >\r\n                                                            {col.name}\r\n                                                        </button>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </Modal.Body>\r\n                                    </Modal>\r\n                                </div>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {articles.map(article => (\r\n                            <tr key={article.arID}>\r\n                                {selectedColumns.map((colKey) => (\r\n                                    <td key={colKey}>{article[colKey]}</td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Article;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}