{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\CreateFactureVente.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function CreateFactureVente({ onAddFVente, onDelete, selectedFacture }) {\n//     const [client, setClient] = useState('');\n//     const [date, setDate] = useState('');\n//     const [code, setCode] = useState('');\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//     const [references, setReferences] = useState([]);\n//     const [telephone, setTelephone] = useState('');\n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/article')\n//             .then(res => {\n//                 setReferences(res.data.map(article => article.ref));\n//             })\n//             .catch(err => console.log('Error fetching articles:', err));\n//     }, []);\n\n//     const fetchPriceByReference = (reference, index) => {\n//         axios.get(`http://localhost:7777/factureVente/${reference}`) \n//             .then(res => {\n//                 const price = res.data.price;\n//                 const newInputs = [...inputs];\n//                 newInputs[index].price = price;\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.log('Error fetching price:', err));\n//     };\n\n//     const handleReferenceChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].refAr = value;\n//         setInputs(newInputs);\n//         fetchPriceByReference(value, index); \n//     };\n\n//     const handleRemiseChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].remise = value;\n//         setInputs(newInputs);\n//     };\n\n//     const handleQuantityChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].quantité = value;\n\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//             .then(res => {\n//                 const availableQuantity = res.data.quantity;\n//                 const remainingQuantity = availableQuantity - parseInt(value);\n\n//                 if (remainingQuantity < 0) {\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//                     newInputs[index].quantité = availableQuantity;\n//                 }\n\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.error('Error fetching quantity:', err));\n\n//         // Recalculate total\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0);\n//         console.log(\"New Total:\", newTotal);\n//     };\n\n//     const handleAddInput = () => {\n//         // Check if any previous input fields are empty\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n\n//         // If any previous input field is empty, display an alert\n//         if (isEmpty) {\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n//             return;\n//         }\n\n//         // If all previous input fields are filled, add a new input line\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\n//     };\n\n//     const calculateTotal = () => {\n//         return inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité)/100) * (100 - curr.remise), 0);\n//     };\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n\n//         // Filter out empty inputs before checking for invalid references\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//         if (invalidReference) {\n//             alert(\"Sélectionner une référence valide\");\n//             return;\n//         }\n\n//         const refArArray = [];\n//         const quantiteArray = [];\n//         const remiseArray = [];\n//         nonEmptyInputs.forEach(input => {\n//             refArArray.push(input.refAr);\n//             quantiteArray.push(input.quantité);\n//             remiseArray.push(input.remise);\n//         });\n\n//         const totalPrice = calculateTotal();\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\n//             client,\n//             date,\n//             code,\n//             refAr: refArArray,\n//             quantité: quantiteArray,\n//             remise: remiseArray,\n//             totalPrice\n//         })\n//             .then(res => {\n//                 console.log(res);\n//                 window.location.reload();\n//             })\n//             .catch(err => console.log('Error creating facture:', err))\n//     };\n\n//     return (\n//         <div style={{ margin: '20px', justifyContent: 'center' }}>\n//             <div style={{ display: 'flex', flex: '1' }}>\n//                 <div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"text\"\n//                             id=\"client\"\n//                             value={client}\n//                             onChange={(e) => setClient(e.target.value)}\n//                         />\n//                     </div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"date\"\n//                             id=\"date\"\n//                             value={date}\n//                             onChange={(e) => setDate(e.target.value)}\n//                         />\n//                     </div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"code\">Code facture</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"text\"\n//                             id=\"code\"\n//                             value={code}\n//                             onChange={(e) => setCode(e.target.value)}\n//                         />\n//                     </div>\n//                     <div style={{ marginBottom: '20px' }}>\n//                         <label style={{ width: '120px' }} htmlFor=\"telephone\">Téléphone</label>\n//                         <input\n//                             style={{ width: '200px' }}\n//                             type=\"text\"\n//                             id=\"telephone\"\n//                             value={telephone}\n//                             onChange={(e) => setTelephone(e.target.value)}\n//                         />\n//                     </div>\n//                 </div>\n//                 <div>\n//                     <div>\n//                         {inputs.map((input, index) => (\n//     <div key={index} style={{ display: 'flex', marginBottom: '10px' }}>\n//         <div style={{ flex: '1', marginRight: '10px' }}>\n//             <label>Référence d'article</label>\n//             <input\n//                 list=\"references\"\n//                 style={{ width: '100%' }}\n//                 value={input.refAr}\n//                 onChange={(e) => handleReferenceChange(e, index)}\n//             />\n//             <datalist id=\"references\">\n//                 {references.map((reference, idx) => (\n//                     <option key={idx} value={reference} />\n//                 ))}\n//             </datalist>\n//         </div>\n//         <div style={{ flex: '1', marginRight: '10px' }}>\n//             <label>Prix vente TTC</label>\n//             <input\n//                 type=\"number\"\n//                 style={{ width: '100%' }}\n//                 value={input.price}\n//                 readOnly\n//             />\n//         </div>\n//         <div style={{ flex: '1', marginRight:'10px' }}>\n//             <label>Quantité</label>\n//             <input\n//                 type=\"number\"\n//                 style={{ width: '100%' }}\n//                 value={input.quantité}\n//                 onChange={(e) =>handleQuantityChange(e, index)}\n//             />\n//         </div>\n//         <div style={{ flex: '1' }}>\n//             <label>Remise</label>\n//             <input\n//                 type=\"number\"\n//                 style={{ width: '100%' }}\n//                 value={input.remise}\n//                 onChange={(e) => handleRemiseChange\n// (e, index)}\n//                                     />\n//                                 </div>\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </div>\n//                 <div>\n//                     <div>\n//                         <div style={{ display:\"inline-block\", marginBottom: '20px', textAlign: 'center'}}>\n//                             <button\n//                                 style={{ width: '200px', marginBottom: '10px' }}\n//                                 type=\"button\"\n//                                 onClick={handleAddInput}\n//                             >\n//                                 Ajouter\n//                             </button>\n//                             <button\n//                                 style={{ width: '200px', marginBottom: '10px' }}\n//                                 type=\"submit\"\n//                                 onClick={handleSubmit}\n//                             >\n//                                 Enregistrer\n//                             </button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>    \n//             <div style={{ marginBottom: '20px' }}>\n//                 <label>Total</label>\n//                 <input\n//                     type=\"number\"\n//                     style={{ width: '100%' }}\n//                     value={calculateTotal()}\n//                     readOnly\n//                 />\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default CreateFactureVente;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nfunction CreateFactureVente({\n  onAddFVente,\n  selectedFacture\n}) {\n  _s();\n  const [client, setClient] = useState('');\n  const [date, setDate] = useState('');\n  const [DT, setDT] = useState('1.000');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0,\n    remise: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [telephone, setTelephone] = useState('');\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  useEffect(() => {\n    axios.get('http://localhost:7777/article').then(res => {\n      setReferences(res.data.map(article => article.ref));\n    }).catch(err => console.log('Error fetching articles:', err));\n  }, []);\n  useEffect(() => {\n    if (selectedFacture) {\n      setClient(selectedFacture.client || '');\n      setDate(selectedFacture.date || '');\n      setDT(selectedFacture.DT || '1.000');\n      setInputs(selectedFacture.inputs || [{\n        refAr: '',\n        quantité: '',\n        price: 0,\n        remise: 0\n      }]);\n      setTelephone(selectedFacture.telephone || '');\n      setModalIsOpen(true); // Open the modal when a facture is selected\n    }\n  }, [selectedFacture]);\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/factureVente/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log('Error fetching price:', err));\n  };\n  const handleReferenceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n    fetchPriceByReference(value, index);\n  };\n  const handleRemiseChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].remise = value;\n    setInputs(newInputs);\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].quantité = value;\n    axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`).then(res => {\n      const availableQuantity = res.data.quantity;\n      const remainingQuantity = availableQuantity - parseInt(value);\n      if (remainingQuantity < 0) {\n        alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n        newInputs[index].quantité = availableQuantity;\n      }\n      const remisePrice = newInputs[index].price * (1 - newInputs[index].remise / 100);\n      newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n      setInputs(newInputs);\n    }).catch(err => console.error('Error fetching quantity:', err));\n\n    // Recalculate total\n    const newTotal = newInputs.reduce((acc, curr) => acc + curr.price * curr.quantité, 0);\n    console.log(\"New Total:\", newTotal);\n  };\n  const handleAddInput = () => {\n    // Check if any previous input fields are empty\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n\n    // If any previous input field is empty, display an alert\n    if (isEmpty) {\n      alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n      return;\n    }\n\n    // If all previous input fields are filled, add a new input line\n    setInputs([...inputs, {\n      refAr: '',\n      price: 0,\n      quantité: '',\n      remise: 0\n    }]);\n  };\n  const calculateTotal = () => {\n    if (!inputs) return 0; // Check if inputs array is defined\n    return inputs.reduce((acc, curr) => acc + curr.price * curr.quantité / 100 * (100 - curr.remise), 0);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Filter out empty inputs before checking for invalid references\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n    if (invalidReference) {\n      alert(\"Sélectionner une référence valide\");\n      return;\n    }\n    const refArArray = [];\n    const quantiteArray = [];\n    const remiseArray = [];\n    nonEmptyInputs.forEach(input => {\n      refArArray.push(input.refAr);\n      quantiteArray.push(input.quantité);\n      remiseArray.push(input.remise);\n    });\n    const totalPrice = calculateTotal();\n    axios.post('http://localhost:7777/factureVente/createFac/', {\n      client,\n      date,\n      DT,\n      refAr: refArArray,\n      quantité: quantiteArray,\n      remise: remiseArray,\n      totalPrice\n    }).then(res => {\n      console.log(res);\n      window.location.reload();\n    }).catch(err => console.log('Error creating facture:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flex: '1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"client\",\n            children: \"Nom du client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"text\",\n            id: \"client\",\n            value: client,\n            onChange: e => setClient(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"date\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"date\",\n            id: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"DT\",\n            children: \"Droit de timbre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"text\",\n            id: \"code\",\n            value: DT,\n            onChange: e => setDT(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"telephone\",\n            children: \"T\\xE9l\\xE9phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"text\",\n            id: \"telephone\",\n            value: telephone,\n            onChange: e => setTelephone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: '1',\n                marginRight: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"R\\xE9f\\xE9rence d'article\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                list: \"references\",\n                style: {\n                  width: '100%'\n                },\n                value: input.refAr,\n                onChange: e => handleReferenceChange(e, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                id: \"references\",\n                children: references.map((reference, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: reference\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: '1',\n                marginRight: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Prix vente TTC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                style: {\n                  width: '100%'\n                },\n                value: input.price,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: '1',\n                marginRight: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Quantit\\xE9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                style: {\n                  width: '100%'\n                },\n                value: input.quantité,\n                onChange: e => handleQuantityChange(e, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: '1'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Remise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                style: {\n                  width: '100%'\n                },\n                value: input.remise,\n                onChange: e => handleRemiseChange(e, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"inline-block\",\n              marginBottom: '20px',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                width: '200px',\n                marginBottom: '10px'\n              },\n              type: \"button\",\n              onClick: handleAddInput,\n              children: \"Ajouter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                width: '200px',\n                marginBottom: '10px'\n              },\n              type: \"submit\",\n              onClick: handleSubmit,\n              children: \"Enregistrer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Total\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        style: {\n          width: '100%'\n        },\n        value: calculateTotal(),\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 402,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateFactureVente, \"kX55+aqhV8QSgnMjDc1JqQ9Tto0=\");\n_c = CreateFactureVente;\nexport default CreateFactureVente;\nvar _c;\n$RefreshReg$(_c, \"CreateFactureVente\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","jsxDEV","_jsxDEV","setAppElement","CreateFactureVente","onAddFVente","selectedFacture","_s","client","setClient","date","setDate","DT","setDT","inputs","setInputs","refAr","quantité","price","remise","references","setReferences","telephone","setTelephone","modalIsOpen","setModalIsOpen","get","then","res","data","map","article","ref","catch","err","console","log","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","event","value","target","handleRemiseChange","handleQuantityChange","availableQuantity","quantity","remainingQuantity","parseInt","alert","remisePrice","parseFloat","toFixed","error","newTotal","reduce","acc","curr","handleAddInput","isEmpty","some","input","calculateTotal","handleSubmit","preventDefault","nonEmptyInputs","filter","invalidReference","includes","refArArray","quantiteArray","remiseArray","forEach","push","totalPrice","post","window","location","reload","style","margin","justifyContent","children","display","flex","marginBottom","width","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","e","marginRight","list","idx","readOnly","textAlign","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureVente.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function CreateFactureVente({ onAddFVente, onDelete, selectedFacture }) {\r\n//     const [client, setClient] = useState('');\r\n//     const [date, setDate] = useState('');\r\n//     const [code, setCode] = useState('');\r\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//     const [references, setReferences] = useState([]);\r\n//     const [telephone, setTelephone] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/article')\r\n//             .then(res => {\r\n//                 setReferences(res.data.map(article => article.ref));\r\n//             })\r\n//             .catch(err => console.log('Error fetching articles:', err));\r\n//     }, []);\r\n\r\n//     const fetchPriceByReference = (reference, index) => {\r\n//         axios.get(`http://localhost:7777/factureVente/${reference}`) \r\n//             .then(res => {\r\n//                 const price = res.data.price;\r\n//                 const newInputs = [...inputs];\r\n//                 newInputs[index].price = price;\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.log('Error fetching price:', err));\r\n//     };\r\n\r\n//     const handleReferenceChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].refAr = value;\r\n//         setInputs(newInputs);\r\n//         fetchPriceByReference(value, index); \r\n//     };\r\n\r\n//     const handleRemiseChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].remise = value;\r\n//         setInputs(newInputs);\r\n//     };\r\n    \r\n//     const handleQuantityChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].quantité = value;\r\n\r\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//             .then(res => {\r\n//                 const availableQuantity = res.data.quantity;\r\n//                 const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n//                 if (remainingQuantity < 0) {\r\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//                     newInputs[index].quantité = availableQuantity;\r\n//                 }\r\n\r\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.error('Error fetching quantity:', err));\r\n\r\n//         // Recalculate total\r\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0);\r\n//         console.log(\"New Total:\", newTotal);\r\n//     };\r\n    \r\n//     const handleAddInput = () => {\r\n//         // Check if any previous input fields are empty\r\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n\r\n//         // If any previous input field is empty, display an alert\r\n//         if (isEmpty) {\r\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n//             return;\r\n//         }\r\n\r\n//         // If all previous input fields are filled, add a new input line\r\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n//     };\r\n\r\n//     const calculateTotal = () => {\r\n//         return inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité)/100) * (100 - curr.remise), 0);\r\n//     };\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n\r\n//         // Filter out empty inputs before checking for invalid references\r\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n//         if (invalidReference) {\r\n//             alert(\"Sélectionner une référence valide\");\r\n//             return;\r\n//         }\r\n\r\n//         const refArArray = [];\r\n//         const quantiteArray = [];\r\n//         const remiseArray = [];\r\n//         nonEmptyInputs.forEach(input => {\r\n//             refArArray.push(input.refAr);\r\n//             quantiteArray.push(input.quantité);\r\n//             remiseArray.push(input.remise);\r\n//         });\r\n\r\n//         const totalPrice = calculateTotal();\r\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//             client,\r\n//             date,\r\n//             code,\r\n//             refAr: refArArray,\r\n//             quantité: quantiteArray,\r\n//             remise: remiseArray,\r\n//             totalPrice\r\n//         })\r\n//             .then(res => {\r\n//                 console.log(res);\r\n//                 window.location.reload();\r\n//             })\r\n//             .catch(err => console.log('Error creating facture:', err))\r\n//     };\r\n\r\n//     return (\r\n//         <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n//             <div style={{ display: 'flex', flex: '1' }}>\r\n//                 <div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"text\"\r\n//                             id=\"client\"\r\n//                             value={client}\r\n//                             onChange={(e) => setClient(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"date\"\r\n//                             id=\"date\"\r\n//                             value={date}\r\n//                             onChange={(e) => setDate(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"code\">Code facture</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"text\"\r\n//                             id=\"code\"\r\n//                             value={code}\r\n//                             onChange={(e) => setCode(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div style={{ marginBottom: '20px' }}>\r\n//                         <label style={{ width: '120px' }} htmlFor=\"telephone\">Téléphone</label>\r\n//                         <input\r\n//                             style={{ width: '200px' }}\r\n//                             type=\"text\"\r\n//                             id=\"telephone\"\r\n//                             value={telephone}\r\n//                             onChange={(e) => setTelephone(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <div>\r\n//                     <div>\r\n//                         {inputs.map((input, index) => (\r\n//     <div key={index} style={{ display: 'flex', marginBottom: '10px' }}>\r\n//         <div style={{ flex: '1', marginRight: '10px' }}>\r\n//             <label>Référence d'article</label>\r\n//             <input\r\n//                 list=\"references\"\r\n//                 style={{ width: '100%' }}\r\n//                 value={input.refAr}\r\n//                 onChange={(e) => handleReferenceChange(e, index)}\r\n//             />\r\n//             <datalist id=\"references\">\r\n//                 {references.map((reference, idx) => (\r\n//                     <option key={idx} value={reference} />\r\n//                 ))}\r\n//             </datalist>\r\n//         </div>\r\n//         <div style={{ flex: '1', marginRight: '10px' }}>\r\n//             <label>Prix vente TTC</label>\r\n//             <input\r\n//                 type=\"number\"\r\n//                 style={{ width: '100%' }}\r\n//                 value={input.price}\r\n//                 readOnly\r\n//             />\r\n//         </div>\r\n//         <div style={{ flex: '1', marginRight:'10px' }}>\r\n//             <label>Quantité</label>\r\n//             <input\r\n//                 type=\"number\"\r\n//                 style={{ width: '100%' }}\r\n//                 value={input.quantité}\r\n//                 onChange={(e) =>handleQuantityChange(e, index)}\r\n//             />\r\n//         </div>\r\n//         <div style={{ flex: '1' }}>\r\n//             <label>Remise</label>\r\n//             <input\r\n//                 type=\"number\"\r\n//                 style={{ width: '100%' }}\r\n//                 value={input.remise}\r\n//                 onChange={(e) => handleRemiseChange\r\n// (e, index)}\r\n//                                     />\r\n//                                 </div>\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                 </div>\r\n//                 <div>\r\n//                     <div>\r\n//                         <div style={{ display:\"inline-block\", marginBottom: '20px', textAlign: 'center'}}>\r\n//                             <button\r\n//                                 style={{ width: '200px', marginBottom: '10px' }}\r\n//                                 type=\"button\"\r\n//                                 onClick={handleAddInput}\r\n//                             >\r\n//                                 Ajouter\r\n//                             </button>\r\n//                             <button\r\n//                                 style={{ width: '200px', marginBottom: '10px' }}\r\n//                                 type=\"submit\"\r\n//                                 onClick={handleSubmit}\r\n//                             >\r\n//                                 Enregistrer\r\n//                             </button>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>    \r\n//             <div style={{ marginBottom: '20px' }}>\r\n//                 <label>Total</label>\r\n//                 <input\r\n//                     type=\"number\"\r\n//                     style={{ width: '100%' }}\r\n//                     value={calculateTotal()}\r\n//                     readOnly\r\n//                 />\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction CreateFactureVente({ onAddFVente, selectedFacture }) {\r\n    const [client, setClient] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [DT, setDT] = useState('1.000');\r\n    const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n    const [references, setReferences] = useState([]);\r\n    const [telephone, setTelephone] = useState('');\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7777/article')\r\n            .then(res => {\r\n                setReferences(res.data.map(article => article.ref));\r\n            })\r\n            .catch(err => console.log('Error fetching articles:', err));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedFacture) {\r\n            setClient(selectedFacture.client || '');\r\n            setDate(selectedFacture.date || '');\r\n            setDT(selectedFacture.DT || '1.000');\r\n            setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n            setTelephone(selectedFacture.telephone || '');\r\n            setModalIsOpen(true); // Open the modal when a facture is selected\r\n        }\r\n    }, [selectedFacture]);\r\n\r\n    const fetchPriceByReference = (reference, index) => {\r\n        axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n            .then(res => {\r\n                const price = res.data.price;\r\n                const newInputs = [...inputs];\r\n                newInputs[index].price = price;\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.log('Error fetching price:', err));\r\n    };\r\n\r\n    const handleReferenceChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].refAr = value;\r\n        setInputs(newInputs);\r\n        fetchPriceByReference(value, index);\r\n    };\r\n\r\n    const handleRemiseChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].remise = value;\r\n        setInputs(newInputs);\r\n    };\r\n\r\n    const handleQuantityChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].quantité = value;\r\n\r\n        axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n            .then(res => {\r\n                const availableQuantity = res.data.quantity;\r\n                const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n                if (remainingQuantity < 0) {\r\n                    alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n                    newInputs[index].quantité = availableQuantity;\r\n                }\r\n\r\n                const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n                newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.error('Error fetching quantity:', err));\r\n\r\n        // Recalculate total\r\n        const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0);\r\n        console.log(\"New Total:\", newTotal);\r\n    };\r\n\r\n    const handleAddInput = () => {\r\n        // Check if any previous input fields are empty\r\n        const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n\r\n        // If any previous input field is empty, display an alert\r\n        if (isEmpty) {\r\n            alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n            return;\r\n        }\r\n\r\n        // If all previous input fields are filled, add a new input line\r\n        setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n    };\r\n\r\n    const calculateTotal = () => {\r\n        if (!inputs) return 0; // Check if inputs array is defined\r\n        return inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Filter out empty inputs before checking for invalid references\r\n        const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n        const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n        if (invalidReference) {\r\n            alert(\"Sélectionner une référence valide\");\r\n            return;\r\n        }\r\n\r\n        const refArArray = [];\r\n        const quantiteArray = [];\r\n        const remiseArray = [];\r\n        nonEmptyInputs.forEach(input => {\r\n            refArArray.push(input.refAr);\r\n            quantiteArray.push(input.quantité);\r\n            remiseArray.push(input.remise);\r\n        });\r\n\r\n        const totalPrice = calculateTotal();\r\n        axios.post('http://localhost:7777/factureVente/createFac/', {\r\n            client,\r\n            date,\r\n            DT,\r\n            refAr: refArArray,\r\n            quantité: quantiteArray,\r\n            remise: remiseArray,\r\n            totalPrice\r\n        })\r\n            .then(res => {\r\n                console.log(res);\r\n                window.location.reload();\r\n            })\r\n            .catch(err => console.log('Error creating facture:', err))\r\n    };\r\n\r\n    return (\r\n        <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n            <div style={{ display: 'flex', flex: '1' }}>\r\n                <div>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n                        <input\r\n                            style={{ width: '200px' }}\r\n                            type=\"text\"\r\n                            id=\"client\"\r\n                            value={client}\r\n                            onChange={(e) => setClient(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n                        <input\r\n                            style={{ width: '200px' }}\r\n                            type=\"date\"\r\n                            id=\"date\"\r\n                            value={date}\r\n                            onChange={(e) => setDate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\r\n                        <input\r\n                            style={{ width: '200px' }}\r\n                            type=\"text\"\r\n                            id=\"code\"\r\n                            value={DT}\r\n                            onChange={(e) => setDT(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <label style={{ width: '120px' }} htmlFor=\"telephone\">Téléphone</label>\r\n                        <input\r\n                            style={{ width: '200px' }}\r\n                            type=\"text\"\r\n                            id=\"telephone\"\r\n                            value={telephone}\r\n                            onChange={(e) => setTelephone(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        {inputs.map((input, index) => (\r\n                            <div key={index} style={{ display: 'flex', marginBottom: '10px' }}>\r\n                                <div style={{ flex: '1', marginRight: '10px' }}>\r\n                                    <label>Référence d'article</label>\r\n                                    <input\r\n                                        list=\"references\"\r\n                                        style={{ width: '100%' }}\r\n                                        value={input.refAr}\r\n                                        onChange={(e) => handleReferenceChange(e, index)}\r\n                                    />\r\n                                    <datalist id=\"references\">\r\n                                        {references.map((reference, idx) => (\r\n                                            <option key={idx} value={reference} />\r\n                                        ))}\r\n                                    </datalist>\r\n                                </div>\r\n                                <div style={{ flex: '1', marginRight: '10px' }}>\r\n                                    <label>Prix vente TTC</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        style={{ width: '100%' }}\r\n                                        value={input.price}\r\n                                        readOnly\r\n                                    />\r\n                                </div>\r\n                                <div style={{ flex: '1', marginRight: '10px' }}>\r\n                                    <label>Quantité</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        style={{ width: '100%' }}\r\n                                        value={input.quantité}\r\n                                        onChange={(e) => handleQuantityChange(e, index)}\r\n                                    />\r\n                                </div>\r\n                                <div style={{ flex: '1' }}>\r\n                                    <label>Remise</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        style={{ width: '100%' }}\r\n                                        value={input.remise}\r\n                                        onChange={(e) => handleRemiseChange(e, index)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\r\n                            <button\r\n                                style={{ width: '200px', marginBottom: '10px' }}\r\n                                type=\"button\"\r\n                                onClick={handleAddInput}\r\n                            >\r\n                                Ajouter\r\n                            </button>\r\n                            <button\r\n                                style={{ width: '200px', marginBottom: '10px' }}\r\n                                type=\"submit\"\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                Enregistrer\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ marginBottom: '20px' }}>\r\n                <label>Total</label>\r\n                <input\r\n                    type=\"number\"\r\n                    style={{ width: '100%' }}\r\n                    value={calculateTotal()}\r\n                    readOnly\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateFactureVente;\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}