{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\CreateFactureVente.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function CreateFactureVente() {\n//     const [client, setClient] = useState('');\n//     const [date, setDate] = useState('');\n//     const [code, setCode] = useState('');\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0 }]);\n//     const [references, setReferences] = useState([]);\n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/references')\n//             .then(res => {\n//                 setReferences(res.data);\n//             })\n//             .catch(err => console.log(err));\n//     }, []);\n\n//     function handleSubmit(event) {\n//         event.preventDefault();\n//         const totalPrice = inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0);\n//         // axios.post('http://localhost:7777/factureVente/createFac/', {\n//         //     client,\n//         //     date,\n//         //     code,\n//         //     inputs,\n//         //     totalPrice \n//         // })\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\n//     client: client,\n//     date: date,\n//     code: code,\n//     refAr: inputs.map(input => input.refAr), // Extract refAr values from inputs\n//     quantité: inputs.map(input => input.quantité), // Extract quantité values from inputs\n//     totalPrice: totalPrice \n// })\n\n//         .then(res => {\n//             console.log(res);\n//             window.location.reload();\n//         })\n//         .catch(err => console.log(err))\n//     }\n\n//     function handleQuantityChange(event, index) {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].quantité = value;\n//         setInputs(newInputs);\n//     }\n\n//     function handleReferenceChange(event, index) {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].refAr = value;\n//         setInputs(newInputs);\n//     }\n\n//     function handlePriceChange(event, index) {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].price = value;\n//         setInputs(newInputs);\n//     }\n\n//     function handleAddInput() {\n//         setInputs([...inputs, { refAr: '', price: 0 , quantité: ''}]);\n//     }\n\n//     return (\n//         <div className='container mt-5'>\n//             <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Nom du client</label>\n//                         <input type='text' placeholder='Entrez le nom du client' className='form-control'\n//                             onChange={e => setClient(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Date</label>\n//                         <input type=\"date\" className='form-control'\n//                             onChange={e => setDate(e.target.value)}\n//                         />\n//                     </div>\n//                 </div>\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Code de la facture</label>\n//                         <input type='text' placeholder='Entrez le code de la facture' className='form-control'\n//                             onChange={e => setCode(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Référence d'article</label>\n//                         <input\n//                             list=\"references\"\n//                             className='form-control'\n//                             placeholder=\"Select or type reference...\"\n//                             value={inputs[0].refAr}\n//                             onChange={(e) => handleReferenceChange(e, 0)}\n//                         />\n//                         <datalist id=\"references\">\n//                             {references.map((reference, index) => (\n//                                 <option key={index} value={reference.refAr} />\n//                             ))}\n//                         </datalist>\n//                     </div>\n//                 </div>\n//                 {inputs.map((input, index) => (\n//                     <div className=\"row mb-3\" key={index}>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Référence d'article</label>\n//                             <input\n//                                 list=\"references\"\n//                                 className='form-control'\n//                                 placeholder=\"Select or type reference...\"\n//                                 value={input.refAr}\n//                                 onChange={(e) => handleReferenceChange(e, index)}\n//                             />\n//                             <datalist id=\"references\">\n//                                 {references.map((reference, idx) => (\n//                                     <option key={idx} value={reference.refAr} />\n//                                 ))}\n//                             </datalist>\n//                         </div>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Prix Article</label>\n//                             <input type='number' placeholder=\"Prix d'article\" className='form-control'\n//                                 value={input.price}\n//                                 onChange={(e) => handlePriceChange(e, index)}\n//                             />\n//                         </div>\n//                         <div className='col'>\n//                             <label htmlFor=\"\">Quantité</label>\n//                             <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\n//                                 value={input.quantité}\n//                                 onChange={(e) => handleQuantityChange(e, index)}\n//                             />\n//                         </div>\n//                     </div>\n//                 ))}\n//                 <div className=\"row mb-3\">\n//                     <div className='col'>\n//                         <label htmlFor=\"\">Total</label>\n//                         <input type='number' placeholder='Total de la facture' className='form-control'\n//                             // value={inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0)}\n//                             // disabled\n//                         />\n//                     </div>\n//                 </div>\n//                 <button type=\"button\" className='btn btn-success' onClick={handleAddInput}>Ajouter</button>\n//                 <button type=\"submit\" className='btn btn-primary'>Enregistrer</button>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default CreateFactureVente;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateFactureVente() {\n  _s();\n  const [client, setClient] = useState('');\n  const [date, setDate] = useState('');\n  const [code, setCode] = useState('');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [telephone, setTelephone] = useState(''); // New state variable for telephone input\n\n  useEffect(() => {\n    axios.get('http://localhost:7777/references').then(res => {\n      setReferences(res.data);\n    }).catch(err => console.log(err));\n  }, []);\n  function handleSubmit(event) {\n    event.preventDefault();\n    const totalPrice = inputs.reduce((acc, curr) => acc + curr.quantité * curr.price, 0);\n    axios.post('http://localhost:7777/factureVente/createFac/', {\n      client,\n      date,\n      code,\n      refAr: inputs.map(input => input.refAr),\n      quantité: inputs.map(input => input.quantité),\n      totalPrice\n    }).then(res => {\n      console.log(res);\n      window.location.reload();\n    }).catch(err => console.log(err));\n  }\n  function handleQuantityChange(event, index) {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].quantité = value;\n    setInputs(newInputs);\n  }\n  function handleReferenceChange(event, index) {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n  }\n  function handlePriceChange(event, index) {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].price = value;\n    setInputs(newInputs);\n  }\n  function handleAddInput() {\n    setInputs([...inputs, {\n      refAr: '',\n      price: 0,\n      quantité: ''\n    }]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Ajouter une facture de vente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Nom du client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Entrez le nom du client\",\n            className: \"form-control\",\n            onChange: e => setClient(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"form-control\",\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Code de la facture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Entrez le code de la facture\",\n            className: \"form-control\",\n            onChange: e => setCode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"T\\xE9l\\xE9phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\" // Changed input type to text\n            ,\n            className: \"form-control\",\n            placeholder: \"Entrez le num\\xE9ro de t\\xE9l\\xE9phone\",\n            value: telephone,\n            onChange: e => setTelephone(e.target.value) // Update telephone state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"R\\xE9f\\xE9rence d'article\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            list: \"references\",\n            className: \"form-control\",\n            placeholder: \"Select or type reference...\",\n            value: input.refAr,\n            onChange: e => handleReferenceChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"references\",\n            children: references.map((reference, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: reference.refAr\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Prix Article\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Prix d'article\",\n            className: \"form-control\",\n            value: input.price,\n            onChange: e => handlePriceChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Quantit\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Entrez la quantit\\xE9 d\\xE9sir\\xE9e\",\n            className: \"form-control\",\n            value: input.quantité,\n            onChange: e => handleQuantityChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Total de la facture\",\n            className: \"form-control\"\n            // value={inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0)}\n            // disabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-success\",\n        onClick: handleAddInput,\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Enregistrer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateFactureVente, \"2c7+BquAykFcvd24OCu/84tqGp0=\");\n_c = CreateFactureVente;\nexport default CreateFactureVente;\nvar _c;\n$RefreshReg$(_c, \"CreateFactureVente\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CreateFactureVente","_s","client","setClient","date","setDate","code","setCode","inputs","setInputs","refAr","quantité","price","references","setReferences","telephone","setTelephone","get","then","res","data","catch","err","console","log","handleSubmit","event","preventDefault","totalPrice","reduce","acc","curr","post","map","input","window","location","reload","handleQuantityChange","index","value","target","newInputs","handleReferenceChange","handlePriceChange","handleAddInput","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","placeholder","onChange","e","list","id","reference","idx","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureVente.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function CreateFactureVente() {\r\n//     const [client, setClient] = useState('');\r\n//     const [date, setDate] = useState('');\r\n//     const [code, setCode] = useState('');\r\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0 }]);\r\n//     const [references, setReferences] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/references')\r\n//             .then(res => {\r\n//                 setReferences(res.data);\r\n//             })\r\n//             .catch(err => console.log(err));\r\n//     }, []);\r\n\r\n//     function handleSubmit(event) {\r\n//         event.preventDefault();\r\n//         const totalPrice = inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0);\r\n//         // axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//         //     client,\r\n//         //     date,\r\n//         //     code,\r\n//         //     inputs,\r\n//         //     totalPrice \r\n//         // })\r\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//     client: client,\r\n//     date: date,\r\n//     code: code,\r\n//     refAr: inputs.map(input => input.refAr), // Extract refAr values from inputs\r\n//     quantité: inputs.map(input => input.quantité), // Extract quantité values from inputs\r\n//     totalPrice: totalPrice \r\n// })\r\n\r\n//         .then(res => {\r\n//             console.log(res);\r\n//             window.location.reload();\r\n//         })\r\n//         .catch(err => console.log(err))\r\n//     }\r\n\r\n//     function handleQuantityChange(event, index) {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].quantité = value;\r\n//         setInputs(newInputs);\r\n//     }\r\n\r\n//     function handleReferenceChange(event, index) {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].refAr = value;\r\n//         setInputs(newInputs);\r\n//     }\r\n\r\n//     function handlePriceChange(event, index) {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].price = value;\r\n//         setInputs(newInputs);\r\n//     }\r\n\r\n//     function handleAddInput() {\r\n//         setInputs([...inputs, { refAr: '', price: 0 , quantité: ''}]);\r\n//     }\r\n\r\n//     return (\r\n//         <div className='container mt-5'>\r\n//             <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Nom du client</label>\r\n//                         <input type='text' placeholder='Entrez le nom du client' className='form-control'\r\n//                             onChange={e => setClient(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Date</label>\r\n//                         <input type=\"date\" className='form-control'\r\n//                             onChange={e => setDate(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Code de la facture</label>\r\n//                         <input type='text' placeholder='Entrez le code de la facture' className='form-control'\r\n//                             onChange={e => setCode(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Référence d'article</label>\r\n//                         <input\r\n//                             list=\"references\"\r\n//                             className='form-control'\r\n//                             placeholder=\"Select or type reference...\"\r\n//                             value={inputs[0].refAr}\r\n//                             onChange={(e) => handleReferenceChange(e, 0)}\r\n//                         />\r\n//                         <datalist id=\"references\">\r\n//                             {references.map((reference, index) => (\r\n//                                 <option key={index} value={reference.refAr} />\r\n//                             ))}\r\n//                         </datalist>\r\n//                     </div>\r\n//                 </div>\r\n//                 {inputs.map((input, index) => (\r\n//                     <div className=\"row mb-3\" key={index}>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Référence d'article</label>\r\n//                             <input\r\n//                                 list=\"references\"\r\n//                                 className='form-control'\r\n//                                 placeholder=\"Select or type reference...\"\r\n//                                 value={input.refAr}\r\n//                                 onChange={(e) => handleReferenceChange(e, index)}\r\n//                             />\r\n//                             <datalist id=\"references\">\r\n//                                 {references.map((reference, idx) => (\r\n//                                     <option key={idx} value={reference.refAr} />\r\n//                                 ))}\r\n//                             </datalist>\r\n//                         </div>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Prix Article</label>\r\n//                             <input type='number' placeholder=\"Prix d'article\" className='form-control'\r\n//                                 value={input.price}\r\n//                                 onChange={(e) => handlePriceChange(e, index)}\r\n//                             />\r\n//                         </div>\r\n//                         <div className='col'>\r\n//                             <label htmlFor=\"\">Quantité</label>\r\n//                             <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\r\n//                                 value={input.quantité}\r\n//                                 onChange={(e) => handleQuantityChange(e, index)}\r\n//                             />\r\n//                         </div>\r\n//                     </div>\r\n//                 ))}\r\n//                 <div className=\"row mb-3\">\r\n//                     <div className='col'>\r\n//                         <label htmlFor=\"\">Total</label>\r\n//                         <input type='number' placeholder='Total de la facture' className='form-control'\r\n//                             // value={inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0)}\r\n//                             // disabled\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//                 <button type=\"button\" className='btn btn-success' onClick={handleAddInput}>Ajouter</button>\r\n//                 <button type=\"submit\" className='btn btn-primary'>Enregistrer</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CreateFactureVente() {\r\n    const [client, setClient] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [code, setCode] = useState('');\r\n    const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0 }]);\r\n    const [references, setReferences] = useState([]);\r\n    const [telephone, setTelephone] = useState(''); // New state variable for telephone input\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7777/references')\r\n            .then(res => {\r\n                setReferences(res.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const totalPrice = inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0);\r\n        axios.post('http://localhost:7777/factureVente/createFac/', {\r\n            client,\r\n            date,\r\n            code,\r\n            refAr: inputs.map(input => input.refAr),\r\n            quantité: inputs.map(input => input.quantité),\r\n            totalPrice\r\n        })\r\n            .then(res => {\r\n                console.log(res);\r\n                window.location.reload();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function handleQuantityChange(event, index) {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].quantité = value;\r\n        setInputs(newInputs);\r\n    }\r\n\r\n    function handleReferenceChange(event, index) {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].refAr = value;\r\n        setInputs(newInputs);\r\n    }\r\n\r\n    function handlePriceChange(event, index) {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].price = value;\r\n        setInputs(newInputs);\r\n    }\r\n\r\n    function handleAddInput() {\r\n        setInputs([...inputs, { refAr: '', price: 0, quantité: '' }]);\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h2 className=\"mb-4\">Ajouter une facture de vente</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"row mb-3\">\r\n                    <div className='col'>\r\n                        <label htmlFor=\"\">Nom du client</label>\r\n                        <input type='text' placeholder='Entrez le nom du client' className='form-control'\r\n                            onChange={e => setClient(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className='col'>\r\n                        <label htmlFor=\"\">Date</label>\r\n                        <input type=\"date\" className='form-control'\r\n                            onChange={e => setDate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mb-3\">\r\n                    <div className='col'>\r\n                        <label htmlFor=\"\">Code de la facture</label>\r\n                        <input type='text' placeholder='Entrez le code de la facture' className='form-control'\r\n                            onChange={e => setCode(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className='col'>\r\n                        <label htmlFor=\"\">Téléphone</label>\r\n                        <input\r\n                            type=\"text\" // Changed input type to text\r\n                            className='form-control'\r\n                            placeholder=\"Entrez le numéro de téléphone\"\r\n                            value={telephone}\r\n                            onChange={(e) => setTelephone(e.target.value)} // Update telephone state\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {inputs.map((input, index) => (\r\n                    <div className=\"row mb-3\" key={index}>\r\n                        <div className='col'>\r\n                            <label htmlFor=\"\">Référence d'article</label>\r\n                            <input\r\n                                list=\"references\"\r\n                                className='form-control'\r\n                                placeholder=\"Select or type reference...\"\r\n                                value={input.refAr}\r\n                                onChange={(e) => handleReferenceChange(e, index)}\r\n                            />\r\n                            <datalist id=\"references\">\r\n                                {references.map((reference, idx) => (\r\n                                    <option key={idx} value={reference.refAr} />\r\n                                ))}\r\n                            </datalist>\r\n                        </div>\r\n                        <div className='col'>\r\n                            <label htmlFor=\"\">Prix Article</label>\r\n                            <input type='number' placeholder=\"Prix d'article\" className='form-control'\r\n                                value={input.price}\r\n                                onChange={(e) => handlePriceChange(e, index)}\r\n                            />\r\n                        </div>\r\n                        <div className='col'>\r\n                            <label htmlFor=\"\">Quantité</label>\r\n                            <input type='number' placeholder='Entrez la quantité désirée' className='form-control'\r\n                                value={input.quantité}\r\n                                onChange={(e) => handleQuantityChange(e, index)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                <div className=\"row mb-3\">\r\n                    <div className='col'>\r\n                        <label htmlFor=\"\">Total</label>\r\n                        <input type='number' placeholder='Total de la facture' className='form-control'\r\n                            // value={inputs.reduce((acc, curr) => acc + (curr.quantité * curr.price), 0)}\r\n                            // disabled\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" className='btn btn-success' onClick={handleAddInput}>Ajouter</button>\r\n                <button type=\"submit\" className='btn btn-primary'>Enregistrer</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateFactureVente;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}