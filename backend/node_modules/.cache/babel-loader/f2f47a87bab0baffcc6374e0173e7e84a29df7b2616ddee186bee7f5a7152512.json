{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\CreateFactureVente.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import axios from 'axios';\n\n// function CreateFactureVente({ selectedFacture }) {\n//     const [clName, setClName] = useState('');\n//     const [client_id, setClientCode] = useState('');\n//     const [date, setDate] = useState('');\n//     const [DT, setDT] = useState('1.000');\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//     const [references, setReferences] = useState([]);\n//     const [filteredClients, setFilteredClients] = useState([]);\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\n\n//     const remiseInputRef = useRef(null); \n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/article')\n//             .then(res => {\n//                 setReferences(res.data.map(article => article.ref));\n//             })\n//             .catch(err => console.log('Error fetching articles:', err));\n//     }, []);\n\n//      useEffect(() => {\n//         if (selectedFacture) {\n//             setClName(selectedFacture.clName || '');\n//             setClientCode(selectedFacture.client_id || '');\n//             setDate(selectedFacture.date || '');\n//             setDT(selectedFacture.DT || '1.000');\n//             setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//         }\n//     }, [selectedFacture]);\n\n//     const fetchPriceByReference = (reference, index) => {\n//         axios.get(`http://localhost:7777/factureVente/${reference}`)\n//             .then(res => {\n//                 const price = res.data.price;\n//                 const newInputs = [...inputs];\n//                 newInputs[index].price = price;\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.log('Error fetching price:', err));\n//     };\n\n//     const handleReferenceChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].refAr = value;\n//         setInputs(newInputs);\n//         fetchPriceByReference(value, index);\n//     };\n\n//     const handleRemiseChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].remise = value;\n//         setInputs(newInputs);\n//     };\n\n//     const handleQuantityChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].quantité = value;\n\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//             .then(res => {\n//                 const availableQuantity = res.data.quantity;\n//                 const remainingQuantity = availableQuantity - parseInt(value);\n\n//                 if (remainingQuantity < 0) {\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//                     newInputs[index].quantité = availableQuantity;\n//                 }\n\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.error('Error fetching quantity:', err));\n\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\n//         console.log(\"New Total:\", newTotal);\n//     };\n\n//     const handleAddInput = () => {\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n//         if (isEmpty) {\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n//             return;\n//         }\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\n//     };\n\n//     const calculateTotal = () => {\n//         if (!inputs) return 0; \n//         const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\n//         return total.toFixed(3); // Round to three decimal places\n//     };\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n\n//         // Filter out empty inputs before checking for invalid references\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//         if (invalidReference) {\n//             alert(\"Sélectionner une référence valide\");\n//             return;\n//         }\n\n//         const refArArray = [];\n//         const quantiteArray = [];\n//         const remiseArray = [];\n//         nonEmptyInputs.forEach(input => {\n//             refArArray.push(input.refAr);\n//             quantiteArray.push(input.quantité);\n//             remiseArray.push(input.remise);\n//         });\n\n//         const totalPrice = calculateTotal();\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\n//             clName,\n//             client_id,\n//             date,\n//             DT,\n//             refAr: refArArray,\n//             quantité: quantiteArray,\n//             remise: remiseArray,\n//             totalPrice\n//         })\n//             .then(res => {\n//                 console.log(res);\n//                 window.location.reload();\n//             })\n//             .catch(err => console.log('Error creating facture:', err))\n//     };\n\n//     const handleKeyPress = (event) => {\n//         if (event.key === 'Enter') {\n//             handleAddInput();\n//         }\n//     };\n\n//     const handleClientSelect = (name, code) => {\n//         setClName(name);\n//         setClientCode(code);\n//         setFilteredClients([]);\n//     };\n\n//     const handleClientChange = (e) => {\n//         const { value } = e.target;\n//         setClName(value);\n\n//         // Fetch filtered clients from the server\n//         axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//             .then(res => {\n//                 setFilteredClients(res.data);\n//             })\n//             .catch(err => console.log('Error fetching clients:', err));\n\n//         // Retrieve the client code based on the entered client name\n//         axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//             .then(res => {\n//                 if (res.data.length > 0) {\n//                     // Assuming the client code is stored in res.data[0].clID\n//                     setClientCode(res.data[0].clID);\n//                 } else {\n//                     // Clear the client code if no matching client is found\n//                     setClientCode('');\n//                 }\n//             })\n//             .catch(err => console.log('Error fetching client code:', err));\n//     };\n\n// const handleClientBlur = () => {\n//     // Clear the filtered clients list when the input field loses focus\n//     setFilteredClients([]);\n// };\n// const handleClientCodeChange = (e) => {\n//     const { value } = e.target;\n//     setClientCode(value);\n\n//     // Fetch client name based on the entered code\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\n//         .then(res => {\n//             if (res.data.length > 0) {\n//                 // Assuming the client name is stored in res.data[0].clName\n//                 setClName(res.data[0].clName);\n//             } else {\n//                 // Clear the client name if no matching client is found\n//                 setClName('');\n//             }\n//         })\n//         .catch(err => console.log('Error fetching client name:', err));\n// };\n\n// return (\n//     <div style={{ margin: '20px', justifyContent: 'center' }}>\n//         <div style={{ display: 'flex', flex: '1' }}>\n//             <div>\n//                 <div style={{ marginBottom: '20px' }}>\n//                     <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\n//                     <input\n// style={{ width: '200px' }}\n// type=\"text\"\n// id=\"code-client\"\n// name=\"code-client\"\n// value={client_id} // Display the client code\n// onChange={handleClientCodeChange} // Fetch and display client name based on code\n// />\n\n//                 </div>\n//                 <div style={{ marginBottom: '20px', position: 'relative' }}>\n//                     <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\n//                     <input\n//                         style={{ width: '200px' }}\n//                         type=\"text\"\n//                         id=\"client\"\n//                         value={clName}\n//                         onChange={handleClientChange}\n//                         onBlur={handleClientBlur} // Add onBlur event to clear filtered clients list\n//                     />\n//                     {filteredClients.length > 0 && (\n//                         <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\n//                             {filteredClients.map((client, index) => (\n//                                 <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\n//                                     {client.clName}\n//                                 </div>\n//                             ))}\n//                         </div>\n//                     )}\n//                 </div>\n//                 <div style={{ marginBottom: '20px' }}>\n//                     <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\n//                     <input\n//                         style={{ width: '200px' }}\n//                         type=\"date\"\n//                         id=\"date\"\n//                         value={date}\n//                         onChange={(e) => setDate(e.target.value)}\n//                     />\n//                 </div>\n//                 <div style={{ marginBottom: '20px' }}>\n//                     <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\n//                     <input\n//                         style={{ width: '200px' }}\n//                         type=\"text\"\n//                         id=\"code\"\n//                         value={DT}\n//                         onChange={(e) => setDT(e.target.value)}\n//                         onBlur={handleQuantityChange} // Add onBlur event to trigger recalculation when \"Droit de timbre\" value changes\n//                     />\n//                 </div>\n//             </div>\n//             <div>\n//                 <div>\n//                     {inputs.map((input, index) => (\n//                         <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                             <div style={{ flex: '1', marginRight: '10px' }}>\n//                                 <label>Référence d'article</label>\n//                                 <input\n//                                     list=\"references\"\n//                                     style={{ width: '100%' }}\n//                                     value={input.refAr}\n//                                     onChange={(e) => handleReferenceChange(e, index)}\n//                                 />\n//                                 <datalist id=\"references\">\n//                                     {references.map((reference, idx) => (\n//                                         <option key={idx} value={reference} />\n//                                     ))}\n//                                 </datalist>\n//                             </div>\n//                             <div style={{ flex: '1', marginRight: '10px' }}>\n//                                 <label>Prix vente TTC</label>\n//                                 <input\n//                                     type=\"number\"\n//                                     style={{ width: '100%' }}\n//                                     value={input.price}\n//                                     readOnly\n//                                 />\n//                             </div>\n//                             <div style={{ flex: '1', marginRight: '10px' }}>\n//                                 <label>Quantité</label>\n//                                 <input\n//                                     type=\"number\"\n//                                     style={{ width: '100%' }}\n//                                     value={input.quantité}\n//                                     onChange={(e) => handleQuantityChange(e, index)}\n//                                 />\n//                             </div>\n//                             <div style={{ display: 'flex', alignItems: 'center' }}>\n//                                 <div style={{ flex: '1' }}>\n//                                     <label>Remise</label>\n//                                     <input\n//                                         type=\"number\"\n//                                         style={{ width: '100%' }}\n//                                         value={input.remise}\n//                                         onChange={(e) => handleRemiseChange(e, index)}\n//                                         onKeyDown={handleKeyPress} // Call handleKeyPress on key press\n//                                         ref={remiseInputRef} // Set the ref for Remise input field\n//                                     />\n//                                 </div>\n//                                 <div style={{ marginLeft: '10px' }}>\n//                                     <button type=\"button\" onClick={handleAddInput}>+</button>\n//                                 </div>\n//                             </div>\n//                         </div>\n//                     ))}\n//                 </div>\n//             </div>\n//             <div>\n//                 <div>\n//                     <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\n//                         <button\n//                             style={{ width: '200px', marginBottom: '10px' }}\n//                             type=\"button\"\n//                             onClick={handleAddInput}\n//                         >\n//                             Ajouter\n//                         </button>\n//                         <button\n//                             style={{ width: '200px', marginBottom: '10px' }}\n//                             type=\"submit\"\n//                             onClick={handleSubmit}\n//                         >\n//                             Enregistrer\n//                         </button><br />\n//                         <button\n//                             style={{ width: '200px', marginBottom: '10px' }}\n//                             type=\"button\"\n//                         >\n//                             Supprimer\n//                         </button>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//         <div style={{ marginBottom: '20px' }}>\n//             <label>Total</label>\n//             <input\n//                 type=\"text\" \n//                 style={{ width: '100%' }}\n//                 value={calculateTotal()}\n//                 readOnly\n//             />\n//         </div>\n//     </div>\n// );\n// }\n\n// export default CreateFactureVente;\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateFactureVente({\n  onFactureSubmit,\n  selectedFacture\n}) {\n  _s();\n  const [clName, setClName] = useState('');\n  const [client_id, setClientCode] = useState('');\n  const [date, setDate] = useState('');\n  const [DT, setDT] = useState('1.000');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0,\n    remise: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const remiseInputRef = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:7777/article').then(res => {\n      setReferences(res.data.map(article => article.ref));\n    }).catch(err => console.log('Error fetching articles:', err));\n  }, []);\n  useEffect(() => {\n    if (selectedFacture) {\n      setClName(selectedFacture.clName || '');\n      setClientCode(selectedFacture.client_id || '');\n      setDate(selectedFacture.date || '');\n      setDT(selectedFacture.DT || '1.000');\n      setInputs(selectedFacture.inputs || [{\n        refAr: '',\n        quantité: '',\n        price: 0,\n        remise: 0\n      }]);\n    }\n  }, [selectedFacture]);\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/factureVente/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log('Error fetching price:', err));\n  };\n  const handleReferenceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n    fetchPriceByReference(value, index);\n  };\n  const handleRemiseChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].remise = value;\n    setInputs(newInputs);\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].quantité = value;\n    axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`).then(res => {\n      const availableQuantity = res.data.quantity;\n      const remainingQuantity = availableQuantity - parseInt(value);\n      if (remainingQuantity < 0) {\n        alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n        newInputs[index].quantité = availableQuantity;\n      }\n      const remisePrice = newInputs[index].price * (1 - newInputs[index].remise / 100);\n      newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n      setInputs(newInputs);\n    }).catch(err => console.error('Error fetching quantity:', err));\n    const newTotal = newInputs.reduce((acc, curr) => acc + curr.price * curr.quantité, 0) + parseFloat(DT);\n    console.log(\"New Total:\", newTotal);\n  };\n  const handleAddInput = () => {\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n    if (isEmpty) {\n      alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n      return;\n    }\n    setInputs([...inputs, {\n      refAr: '',\n      price: 0,\n      quantité: '',\n      remise: 0\n    }]);\n  };\n  const calculateTotal = () => {\n    if (!inputs) return 0;\n    const total = inputs.reduce((acc, curr) => acc + curr.price * curr.quantité / 100 * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\n    return total.toFixed(3); // Round to three decimal places\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Filter out empty inputs before checking for invalid references\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n    if (invalidReference) {\n      alert(\"Sélectionner une référence valide\");\n      return;\n    }\n    const refArArray = [];\n    const quantiteArray = [];\n    const remiseArray = [];\n    nonEmptyInputs.forEach(input => {\n      refArArray.push(input.refAr);\n      quantiteArray.push(input.quantité);\n      remiseArray.push(input.remise);\n    });\n    const totalPrice = calculateTotal();\n    const newFacture = {\n      clName,\n      client_id,\n      date,\n      DT,\n      refAr: refArArray,\n      quantité: quantiteArray,\n      remise: remiseArray,\n      totalPrice\n    };\n    axios.post('http://localhost:7777/factureVente/createFac/', newFacture).then(res => {\n      console.log(res);\n      onFactureSubmit(newFacture);\n      window.location.reload();\n    }).catch(err => console.log('Error creating facture:', err));\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleAddInput();\n    }\n  };\n  const handleClientSelect = (name, code) => {\n    setClName(name);\n    setClientCode(code);\n    setFilteredClients([]);\n  };\n  const handleClientChange = e => {\n    const {\n      value\n    } = e.target;\n    setClName(value);\n\n    // Fetch filtered clients from the server\n    axios.get(`http://localhost:7777/clients/search?name=${value}`).then(res => {\n      setFilteredClients(res.data);\n    }).catch(err => console.log('Error fetching clients:', err));\n\n    // Retrieve the client code based on the entered client name\n    axios.get(`http://localhost:7777/clients/search?name=${value}`).then(res => {\n      if (res.data.length > 0) {\n        // Assuming the client code is stored in res.data[0].clID\n        setClientCode(res.data[0].clID);\n      } else {\n        // Clear the client code if no matching client is found\n        setClientCode('');\n      }\n    }).catch(err => console.log('Error fetching clients:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"clName\",\n          children: \"Nom du client:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"clName\",\n          name: \"clName\",\n          value: clName,\n          onChange: handleClientChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 21\n        }, this), filteredClients.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            backgroundColor: 'white',\n            border: '1px solid #ccc'\n          },\n          children: filteredClients.map(client => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '5px',\n              cursor: 'pointer'\n            },\n            onMouseDown: () => handleClientSelect(client.clName, client.clID),\n            children: client.clName\n          }, client.clID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"date\",\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"date\",\n            id: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"dt\",\n            children: \"Timbre fiscale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"number\",\n            id: \"dt\",\n            name: \"dt\",\n            value: DT,\n            onChange: e => setDT(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: '1',\n                marginRight: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"R\\xE9f\\xE9rence\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                list: \"references\",\n                style: {\n                  width: '100%'\n                },\n                value: input.refAr,\n                onChange: e => handleReferenceChange(e, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                id: \"references\",\n                children: references.map((reference, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: reference\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: '1',\n                marginRight: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Prix vente TTC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                style: {\n                  width: '100%'\n                },\n                value: input.price,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: '1',\n                marginRight: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Quantit\\xE9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                style: {\n                  width: '100%'\n                },\n                value: input.quantité,\n                onChange: e => handleQuantityChange(e, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  flex: '1'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Remise\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  style: {\n                    width: '100%'\n                  },\n                  value: input.remise,\n                  onChange: e => handleRemiseChange(e, index),\n                  onKeyDown: handleKeyPress,\n                  ref: index === inputs.length - 1 ? remiseInputRef : null // Set the ref only for the last input\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: '10px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: handleAddInput,\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block',\n            marginBottom: '20px',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: '200px',\n              marginBottom: '10px'\n            },\n            type: \"button\",\n            onClick: handleAddInput,\n            children: \"Ajouter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: '200px',\n              marginBottom: '10px'\n            },\n            type: \"submit\",\n            onClick: handleSubmit,\n            children: \"Enregistrer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: '200px',\n              marginBottom: '10px'\n            },\n            type: \"button\",\n            children: \"Supprimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Total\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: {\n          width: '100%'\n        },\n        value: calculateTotal(),\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 532,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateFactureVente, \"NerleMNO+MryuD1pDId+sWbE0Rc=\");\n_c = CreateFactureVente;\nexport default CreateFactureVente;\nvar _c;\n$RefreshReg$(_c, \"CreateFactureVente\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","CreateFactureVente","onFactureSubmit","selectedFacture","_s","clName","setClName","client_id","setClientCode","date","setDate","DT","setDT","inputs","setInputs","refAr","quantité","price","remise","references","setReferences","filteredClients","setFilteredClients","modalIsOpen","setModalIsOpen","remiseInputRef","get","then","res","data","map","article","ref","catch","err","console","log","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","event","value","target","handleRemiseChange","handleQuantityChange","availableQuantity","quantity","remainingQuantity","parseInt","alert","remisePrice","parseFloat","toFixed","error","newTotal","reduce","acc","curr","handleAddInput","isEmpty","some","input","calculateTotal","total","handleSubmit","preventDefault","nonEmptyInputs","filter","invalidReference","includes","refArArray","quantiteArray","remiseArray","forEach","push","totalPrice","newFacture","post","window","location","reload","handleKeyPress","key","handleClientSelect","name","code","handleClientChange","e","length","clID","children","style","display","justifyContent","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","position","backgroundColor","border","client","padding","cursor","onMouseDown","marginBottom","width","flexDirection","alignItems","flex","marginRight","list","idx","readOnly","onKeyDown","marginLeft","onClick","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureVente.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function CreateFactureVente({ selectedFacture }) {\r\n//     const [clName, setClName] = useState('');\r\n//     const [client_id, setClientCode] = useState('');\r\n//     const [date, setDate] = useState('');\r\n//     const [DT, setDT] = useState('1.000');\r\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//     const [references, setReferences] = useState([]);\r\n//     const [filteredClients, setFilteredClients] = useState([]);\r\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n//     const remiseInputRef = useRef(null); \r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/article')\r\n//             .then(res => {\r\n//                 setReferences(res.data.map(article => article.ref));\r\n//             })\r\n//             .catch(err => console.log('Error fetching articles:', err));\r\n//     }, []);\r\n\r\n//      useEffect(() => {\r\n//         if (selectedFacture) {\r\n//             setClName(selectedFacture.clName || '');\r\n//             setClientCode(selectedFacture.client_id || '');\r\n//             setDate(selectedFacture.date || '');\r\n//             setDT(selectedFacture.DT || '1.000');\r\n//             setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//         }\r\n//     }, [selectedFacture]);\r\n\r\n//     const fetchPriceByReference = (reference, index) => {\r\n//         axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n//             .then(res => {\r\n//                 const price = res.data.price;\r\n//                 const newInputs = [...inputs];\r\n//                 newInputs[index].price = price;\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.log('Error fetching price:', err));\r\n//     };\r\n\r\n//     const handleReferenceChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].refAr = value;\r\n//         setInputs(newInputs);\r\n//         fetchPriceByReference(value, index);\r\n//     };\r\n\r\n//     const handleRemiseChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].remise = value;\r\n//         setInputs(newInputs);\r\n//     };\r\n\r\n//     const handleQuantityChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].quantité = value;\r\n\r\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//             .then(res => {\r\n//                 const availableQuantity = res.data.quantity;\r\n//                 const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n//                 if (remainingQuantity < 0) {\r\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//                     newInputs[index].quantité = availableQuantity;\r\n//                 }\r\n\r\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.error('Error fetching quantity:', err));\r\n            \r\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\r\n//         console.log(\"New Total:\", newTotal);\r\n//     };\r\n\r\n//     const handleAddInput = () => {\r\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n//         if (isEmpty) {\r\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n//             return;\r\n//         }\r\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n//     };\r\n\r\n//     const calculateTotal = () => {\r\n//         if (!inputs) return 0; \r\n//         const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\r\n//         return total.toFixed(3); // Round to three decimal places\r\n//     };\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n\r\n//         // Filter out empty inputs before checking for invalid references\r\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n//         if (invalidReference) {\r\n//             alert(\"Sélectionner une référence valide\");\r\n//             return;\r\n//         }\r\n\r\n//         const refArArray = [];\r\n//         const quantiteArray = [];\r\n//         const remiseArray = [];\r\n//         nonEmptyInputs.forEach(input => {\r\n//             refArArray.push(input.refAr);\r\n//             quantiteArray.push(input.quantité);\r\n//             remiseArray.push(input.remise);\r\n//         });\r\n\r\n//         const totalPrice = calculateTotal();\r\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//             clName,\r\n//             client_id,\r\n//             date,\r\n//             DT,\r\n//             refAr: refArArray,\r\n//             quantité: quantiteArray,\r\n//             remise: remiseArray,\r\n//             totalPrice\r\n//         })\r\n//             .then(res => {\r\n//                 console.log(res);\r\n//                 window.location.reload();\r\n//             })\r\n//             .catch(err => console.log('Error creating facture:', err))\r\n//     };\r\n\r\n//     const handleKeyPress = (event) => {\r\n//         if (event.key === 'Enter') {\r\n//             handleAddInput();\r\n//         }\r\n//     };\r\n\r\n//     const handleClientSelect = (name, code) => {\r\n//         setClName(name);\r\n//         setClientCode(code);\r\n//         setFilteredClients([]);\r\n//     };\r\n\r\n//     const handleClientChange = (e) => {\r\n//         const { value } = e.target;\r\n//         setClName(value);\r\n\r\n//         // Fetch filtered clients from the server\r\n//         axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//             .then(res => {\r\n//                 setFilteredClients(res.data);\r\n//             })\r\n//             .catch(err => console.log('Error fetching clients:', err));\r\n\r\n//         // Retrieve the client code based on the entered client name\r\n//         axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//             .then(res => {\r\n//                 if (res.data.length > 0) {\r\n//                     // Assuming the client code is stored in res.data[0].clID\r\n//                     setClientCode(res.data[0].clID);\r\n//                 } else {\r\n//                     // Clear the client code if no matching client is found\r\n//                     setClientCode('');\r\n//                 }\r\n//             })\r\n//             .catch(err => console.log('Error fetching client code:', err));\r\n//     };\r\n\r\n// const handleClientBlur = () => {\r\n//     // Clear the filtered clients list when the input field loses focus\r\n//     setFilteredClients([]);\r\n// };\r\n// const handleClientCodeChange = (e) => {\r\n//     const { value } = e.target;\r\n//     setClientCode(value);\r\n\r\n//     // Fetch client name based on the entered code\r\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\r\n//         .then(res => {\r\n//             if (res.data.length > 0) {\r\n//                 // Assuming the client name is stored in res.data[0].clName\r\n//                 setClName(res.data[0].clName);\r\n//             } else {\r\n//                 // Clear the client name if no matching client is found\r\n//                 setClName('');\r\n//             }\r\n//         })\r\n//         .catch(err => console.log('Error fetching client name:', err));\r\n// };\r\n\r\n// return (\r\n//     <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n//         <div style={{ display: 'flex', flex: '1' }}>\r\n//             <div>\r\n//                 <div style={{ marginBottom: '20px' }}>\r\n//                     <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\r\n//                     <input\r\n// style={{ width: '200px' }}\r\n// type=\"text\"\r\n// id=\"code-client\"\r\n// name=\"code-client\"\r\n// value={client_id} // Display the client code\r\n// onChange={handleClientCodeChange} // Fetch and display client name based on code\r\n// />\r\n\r\n//                 </div>\r\n//                 <div style={{ marginBottom: '20px', position: 'relative' }}>\r\n//                     <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n//                     <input\r\n//                         style={{ width: '200px' }}\r\n//                         type=\"text\"\r\n//                         id=\"client\"\r\n//                         value={clName}\r\n//                         onChange={handleClientChange}\r\n//                         onBlur={handleClientBlur} // Add onBlur event to clear filtered clients list\r\n//                     />\r\n//                     {filteredClients.length > 0 && (\r\n//                         <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\r\n//                             {filteredClients.map((client, index) => (\r\n//                                 <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\r\n//                                     {client.clName}\r\n//                                 </div>\r\n//                             ))}\r\n//                         </div>\r\n//                     )}\r\n//                 </div>\r\n//                 <div style={{ marginBottom: '20px' }}>\r\n//                     <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n//                     <input\r\n//                         style={{ width: '200px' }}\r\n//                         type=\"date\"\r\n//                         id=\"date\"\r\n//                         value={date}\r\n//                         onChange={(e) => setDate(e.target.value)}\r\n//                     />\r\n//                 </div>\r\n//                 <div style={{ marginBottom: '20px' }}>\r\n//                     <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\r\n//                     <input\r\n//                         style={{ width: '200px' }}\r\n//                         type=\"text\"\r\n//                         id=\"code\"\r\n//                         value={DT}\r\n//                         onChange={(e) => setDT(e.target.value)}\r\n//                         onBlur={handleQuantityChange} // Add onBlur event to trigger recalculation when \"Droit de timbre\" value changes\r\n//                     />\r\n//                 </div>\r\n//             </div>\r\n//             <div>\r\n//                 <div>\r\n//                     {inputs.map((input, index) => (\r\n//                         <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//                             <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                                 <label>Référence d'article</label>\r\n//                                 <input\r\n//                                     list=\"references\"\r\n//                                     style={{ width: '100%' }}\r\n//                                     value={input.refAr}\r\n//                                     onChange={(e) => handleReferenceChange(e, index)}\r\n//                                 />\r\n//                                 <datalist id=\"references\">\r\n//                                     {references.map((reference, idx) => (\r\n//                                         <option key={idx} value={reference} />\r\n//                                     ))}\r\n//                                 </datalist>\r\n//                             </div>\r\n//                             <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                                 <label>Prix vente TTC</label>\r\n//                                 <input\r\n//                                     type=\"number\"\r\n//                                     style={{ width: '100%' }}\r\n//                                     value={input.price}\r\n//                                     readOnly\r\n//                                 />\r\n//                             </div>\r\n//                             <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                                 <label>Quantité</label>\r\n//                                 <input\r\n//                                     type=\"number\"\r\n//                                     style={{ width: '100%' }}\r\n//                                     value={input.quantité}\r\n//                                     onChange={(e) => handleQuantityChange(e, index)}\r\n//                                 />\r\n//                             </div>\r\n//                             <div style={{ display: 'flex', alignItems: 'center' }}>\r\n//                                 <div style={{ flex: '1' }}>\r\n//                                     <label>Remise</label>\r\n//                                     <input\r\n//                                         type=\"number\"\r\n//                                         style={{ width: '100%' }}\r\n//                                         value={input.remise}\r\n//                                         onChange={(e) => handleRemiseChange(e, index)}\r\n//                                         onKeyDown={handleKeyPress} // Call handleKeyPress on key press\r\n//                                         ref={remiseInputRef} // Set the ref for Remise input field\r\n//                                     />\r\n//                                 </div>\r\n//                                 <div style={{ marginLeft: '10px' }}>\r\n//                                     <button type=\"button\" onClick={handleAddInput}>+</button>\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             </div>\r\n//             <div>\r\n//                 <div>\r\n//                     <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\r\n//                         <button\r\n//                             style={{ width: '200px', marginBottom: '10px' }}\r\n//                             type=\"button\"\r\n//                             onClick={handleAddInput}\r\n//                         >\r\n//                             Ajouter\r\n//                         </button>\r\n//                         <button\r\n//                             style={{ width: '200px', marginBottom: '10px' }}\r\n//                             type=\"submit\"\r\n//                             onClick={handleSubmit}\r\n//                         >\r\n//                             Enregistrer\r\n//                         </button><br />\r\n//                         <button\r\n//                             style={{ width: '200px', marginBottom: '10px' }}\r\n//                             type=\"button\"\r\n//                         >\r\n//                             Supprimer\r\n//                         </button>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//         <div style={{ marginBottom: '20px' }}>\r\n//             <label>Total</label>\r\n//             <input\r\n//                 type=\"text\" \r\n//                 style={{ width: '100%' }}\r\n//                 value={calculateTotal()}\r\n//                 readOnly\r\n//             />\r\n//         </div>\r\n//     </div>\r\n// );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CreateFactureVente({ onFactureSubmit, selectedFacture }) {\r\n    const [clName, setClName] = useState('');\r\n    const [client_id, setClientCode] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [DT, setDT] = useState('1.000');\r\n    const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n    const [references, setReferences] = useState([]);\r\n    const [filteredClients, setFilteredClients] = useState([]);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n    const remiseInputRef = useRef(null); \r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7777/article')\r\n            .then(res => {\r\n                setReferences(res.data.map(article => article.ref));\r\n            })\r\n            .catch(err => console.log('Error fetching articles:', err));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedFacture) {\r\n            setClName(selectedFacture.clName || '');\r\n            setClientCode(selectedFacture.client_id || '');\r\n            setDate(selectedFacture.date || '');\r\n            setDT(selectedFacture.DT || '1.000');\r\n            setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n        }\r\n    }, [selectedFacture]);\r\n\r\n    const fetchPriceByReference = (reference, index) => {\r\n        axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n            .then(res => {\r\n                const price = res.data.price;\r\n                const newInputs = [...inputs];\r\n                newInputs[index].price = price;\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.log('Error fetching price:', err));\r\n    };\r\n\r\n    const handleReferenceChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].refAr = value;\r\n        setInputs(newInputs);\r\n        fetchPriceByReference(value, index);\r\n    };\r\n\r\n    const handleRemiseChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].remise = value;\r\n        setInputs(newInputs);\r\n    };\r\n\r\n    const handleQuantityChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].quantité = value;\r\n\r\n        axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n            .then(res => {\r\n                const availableQuantity = res.data.quantity;\r\n                const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n                if (remainingQuantity < 0) {\r\n                    alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n                    newInputs[index].quantité = availableQuantity;\r\n                }\r\n\r\n                const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n                newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.error('Error fetching quantity:', err));\r\n            \r\n        const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\r\n        console.log(\"New Total:\", newTotal);\r\n    };\r\n\r\n    const handleAddInput = () => {\r\n        const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n        if (isEmpty) {\r\n            alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n            return;\r\n        }\r\n        setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n    };\r\n\r\n    const calculateTotal = () => {\r\n        if (!inputs) return 0; \r\n        const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\r\n        return total.toFixed(3); // Round to three decimal places\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Filter out empty inputs before checking for invalid references\r\n        const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n        const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n        if (invalidReference) {\r\n            alert(\"Sélectionner une référence valide\");\r\n            return;\r\n        }\r\n\r\n        const refArArray = [];\r\n        const quantiteArray = [];\r\n        const remiseArray = [];\r\n        nonEmptyInputs.forEach(input => {\r\n            refArArray.push(input.refAr);\r\n            quantiteArray.push(input.quantité);\r\n            remiseArray.push(input.remise);\r\n        });\r\n\r\n        const totalPrice = calculateTotal();\r\n        const newFacture = {\r\n            clName,\r\n            client_id,\r\n            date,\r\n            DT,\r\n            refAr: refArArray,\r\n            quantité: quantiteArray,\r\n            remise: remiseArray,\r\n            totalPrice\r\n        };\r\n\r\n        axios.post('http://localhost:7777/factureVente/createFac/', newFacture)\r\n            .then(res => {\r\n                console.log(res);\r\n                onFactureSubmit(newFacture);\r\n                window.location.reload();\r\n            })\r\n            .catch(err => console.log('Error creating facture:', err))\r\n    };\r\n\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === 'Enter') {\r\n            handleAddInput();\r\n        }\r\n    };\r\n\r\n    const handleClientSelect = (name, code) => {\r\n        setClName(name);\r\n        setClientCode(code);\r\n        setFilteredClients([]);\r\n    };\r\n\r\n    const handleClientChange = (e) => {\r\n        const { value } = e.target;\r\n        setClName(value);\r\n\r\n        // Fetch filtered clients from the server\r\n        axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n            .then(res => {\r\n                setFilteredClients(res.data);\r\n            })\r\n            .catch(err => console.log('Error fetching clients:', err));\r\n\r\n        // Retrieve the client code based on the entered client name\r\n        axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n            .then(res => {\r\n                if (res.data.length > 0) {\r\n                    // Assuming the client code is stored in res.data[0].clID\r\n                    setClientCode(res.data[0].clID);\r\n                } else {\r\n                    // Clear the client code if no matching client is found\r\n                    setClientCode('');\r\n                }\r\n            })\r\n            .catch(err => console.log('Error fetching clients:', err));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <div>\r\n                    <label htmlFor=\"clName\">Nom du client:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"clName\"\r\n                        name=\"clName\"\r\n                        value={clName}\r\n                        onChange={handleClientChange}\r\n                    />\r\n                    {filteredClients.length > 0 && (\r\n                        <div style={{ position: 'absolute', backgroundColor: 'white', border: '1px solid #ccc' }}>\r\n                            {filteredClients.map(client => (\r\n                                <div key={client.clID} style={{ padding: '5px', cursor: 'pointer' }} onMouseDown={() => handleClientSelect(client.clName, client.clID)}>\r\n                                    {client.clName}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <label style={{ width: '120px' }} htmlFor=\"date\">Date:</label>\r\n                        <input\r\n                            style={{ width: '200px' }}\r\n                            type=\"date\"\r\n                            id=\"date\"\r\n                            value={date}\r\n                            onChange={(e) => setDate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <label style={{ width: '120px' }} htmlFor=\"dt\">Timbre fiscale</label>\r\n                        <input\r\n                            style={{ width: '200px' }}\r\n                            type=\"number\"\r\n                            id=\"dt\"\r\n                            name=\"dt\"\r\n                            value={DT}\r\n                            onChange={(e) => setDT(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ marginBottom: '20px' }}>\r\n                <div>\r\n                    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                        {inputs.map((input, index) => (\r\n                            <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n                                <div style={{ flex: '1', marginRight: '10px' }}>\r\n                                    <label>Référence</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        list=\"references\"\r\n                                        style={{ width: '100%' }}\r\n                                        value={input.refAr}\r\n                                        onChange={(e) => handleReferenceChange(e, index)}\r\n                                    />\r\n                                    <datalist id=\"references\">\r\n                                        {references.map((reference, idx) => (\r\n                                            <option key={idx} value={reference} />\r\n                                        ))}\r\n                                    </datalist>\r\n                                </div>\r\n                                <div style={{ flex: '1', marginRight: '10px' }}>\r\n                                    <label>Prix vente TTC</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        style={{ width: '100%' }}\r\n                                        value={input.price}\r\n                                        readOnly\r\n                                    />\r\n                                </div>\r\n                                <div style={{ flex: '1', marginRight: '10px' }}>\r\n                                    <label>Quantité</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        style={{ width: '100%' }}\r\n                                        value={input.quantité}\r\n                                        onChange={(e) => handleQuantityChange(e, index)}\r\n                                    />\r\n                                </div>\r\n                                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                    <div style={{ flex: '1' }}>\r\n                                        <label>Remise</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            style={{ width: '100%' }}\r\n                                            value={input.remise}\r\n                                            onChange={(e) => handleRemiseChange(e, index)}\r\n                                            onKeyDown={handleKeyPress}\r\n                                            ref={index === inputs.length - 1 ? remiseInputRef : null} // Set the ref only for the last input\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{ marginLeft: '10px' }}>\r\n                                        <button type=\"button\" onClick={handleAddInput}>+</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div style={{ display: 'inline-block', marginBottom: '20px', textAlign: 'center' }}>\r\n                        <button\r\n                            style={{ width: '200px', marginBottom: '10px' }}\r\n                            type=\"button\"\r\n                            onClick={handleAddInput}\r\n                        >\r\n                            Ajouter\r\n                        </button>\r\n                        <button\r\n                            style={{ width: '200px', marginBottom: '10px' }}\r\n                            type=\"submit\"\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            Enregistrer\r\n                        </button><br />\r\n                        <button\r\n                            style={{ width: '200px', marginBottom: '10px' }}\r\n                            type=\"button\"\r\n                        >\r\n                            Supprimer\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ marginBottom: '20px' }}>\r\n                <label>Total</label>\r\n                <input\r\n                    type=\"text\"\r\n                    style={{ width: '100%' }}\r\n                    value={calculateTotal()}\r\n                    readOnly\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateFactureVente;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}