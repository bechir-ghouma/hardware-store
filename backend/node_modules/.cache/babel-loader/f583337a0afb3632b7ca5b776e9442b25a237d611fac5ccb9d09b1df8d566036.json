{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\CreateFactureVente.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import axios from 'axios';\n\n// function CreateFactureVente({ selectedFacture }) {\n//     const [clName, setClName] = useState('');\n//     const [client_id, setClientCode] = useState('');\n//     const [date, setDate] = useState('');\n//     const [DT, setDT] = useState('1.000');\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//     const [references, setReferences] = useState([]);\n//     const [filteredClients, setFilteredClients] = useState([]);\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\n\n//     const remiseInputRef = useRef(null); \n\n//     useEffect(() => {\n//         axios.get('http://localhost:7777/article')\n//             .then(res => {\n//                 setReferences(res.data.map(article => article.ref));\n//             })\n//             .catch(err => console.log('Error fetching articles:', err));\n//     }, []);\n\n//      useEffect(() => {\n//         if (selectedFacture) {\n//             setClName(selectedFacture.clName || '');\n//             setClientCode(selectedFacture.client_id || '');\n//             setDate(selectedFacture.date || '');\n//             setDT(selectedFacture.DT || '1.000');\n//             setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//         }\n//     }, [selectedFacture]);\n\n//     const fetchPriceByReference = (reference, index) => {\n//         axios.get(`http://localhost:7777/factureVente/${reference}`)\n//             .then(res => {\n//                 const price = res.data.price;\n//                 const newInputs = [...inputs];\n//                 newInputs[index].price = price;\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.log('Error fetching price:', err));\n//     };\n\n//     const handleReferenceChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].refAr = value;\n//         setInputs(newInputs);\n//         fetchPriceByReference(value, index);\n//     };\n\n//     const handleRemiseChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].remise = value;\n//         setInputs(newInputs);\n//     };\n\n//     const handleQuantityChange = (event, index) => {\n//         const { value } = event.target;\n//         const newInputs = [...inputs];\n//         newInputs[index].quantité = value;\n\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//             .then(res => {\n//                 const availableQuantity = res.data.quantity;\n//                 const remainingQuantity = availableQuantity - parseInt(value);\n\n//                 if (remainingQuantity < 0) {\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//                     newInputs[index].quantité = availableQuantity;\n//                 }\n\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n//                 setInputs(newInputs);\n//             })\n//             .catch(err => console.error('Error fetching quantity:', err));\n\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\n//         console.log(\"New Total:\", newTotal);\n//     };\n\n//     const handleAddInput = () => {\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n//         if (isEmpty) {\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n//             return;\n//         }\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\n//     };\n\n//     const calculateTotal = () => {\n//         if (!inputs) return 0; \n//         const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\n//         return total.toFixed(3); // Round to three decimal places\n//     };\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n\n//         // Filter out empty inputs before checking for invalid references\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n\n//         if (invalidReference) {\n//             alert(\"Sélectionner une référence valide\");\n//             return;\n//         }\n\n//         const refArArray = [];\n//         const quantiteArray = [];\n//         const remiseArray = [];\n//         nonEmptyInputs.forEach(input => {\n//             refArArray.push(input.refAr);\n//             quantiteArray.push(input.quantité);\n//             remiseArray.push(input.remise);\n//         });\n\n//         const totalPrice = calculateTotal();\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\n//             clName,\n//             client_id,\n//             date,\n//             DT,\n//             refAr: refArArray,\n//             quantité: quantiteArray,\n//             remise: remiseArray,\n//             totalPrice\n//         })\n//             .then(res => {\n//                 console.log(res);\n//                 window.location.reload();\n//             })\n//             .catch(err => console.log('Error creating facture:', err))\n//     };\n\n//     const handleKeyPress = (event) => {\n//         if (event.key === 'Enter') {\n//             handleAddInput();\n//         }\n//     };\n\n//     const handleClientSelect = (name, code) => {\n//         setClName(name);\n//         setClientCode(code);\n//         setFilteredClients([]);\n//     };\n\n//     const handleClientChange = (e) => {\n//         const { value } = e.target;\n//         setClName(value);\n\n//         // Fetch filtered clients from the server\n//         axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//             .then(res => {\n//                 setFilteredClients(res.data);\n//             })\n//             .catch(err => console.log('Error fetching clients:', err));\n\n//         // Retrieve the client code based on the entered client name\n//         axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//             .then(res => {\n//                 if (res.data.length > 0) {\n//                     // Assuming the client code is stored in res.data[0].clID\n//                     setClientCode(res.data[0].clID);\n//                 } else {\n//                     // Clear the client code if no matching client is found\n//                     setClientCode('');\n//                 }\n//             })\n//             .catch(err => console.log('Error fetching client code:', err));\n//     };\n\n// const handleClientBlur = () => {\n//     // Clear the filtered clients list when the input field loses focus\n//     setFilteredClients([]);\n// };\n// const handleClientCodeChange = (e) => {\n//     const { value } = e.target;\n//     setClientCode(value);\n\n//     // Fetch client name based on the entered code\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\n//         .then(res => {\n//             if (res.data.length > 0) {\n//                 // Assuming the client name is stored in res.data[0].clName\n//                 setClName(res.data[0].clName);\n//             } else {\n//                 // Clear the client name if no matching client is found\n//                 setClName('');\n//             }\n//         })\n//         .catch(err => console.log('Error fetching client name:', err));\n// };\n\n// return (\n//     <div style={{ margin: '20px', justifyContent: 'center' }}>\n//         <div style={{ display: 'flex', flex: '1' }}>\n//             <div>\n//                 <div style={{ marginBottom: '20px' }}>\n//                     <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\n//                     <input\n// style={{ width: '200px' }}\n// type=\"text\"\n// id=\"code-client\"\n// name=\"code-client\"\n// value={client_id} // Display the client code\n// onChange={handleClientCodeChange} // Fetch and display client name based on code\n// />\n\n//                 </div>\n//                 <div style={{ marginBottom: '20px', position: 'relative' }}>\n//                     <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\n//                     <input\n//                         style={{ width: '200px' }}\n//                         type=\"text\"\n//                         id=\"client\"\n//                         value={clName}\n//                         onChange={handleClientChange}\n//                         onBlur={handleClientBlur} // Add onBlur event to clear filtered clients list\n//                     />\n//                     {filteredClients.length > 0 && (\n//                         <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\n//                             {filteredClients.map((client, index) => (\n//                                 <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\n//                                     {client.clName}\n//                                 </div>\n//                             ))}\n//                         </div>\n//                     )}\n//                 </div>\n//                 <div style={{ marginBottom: '20px' }}>\n//                     <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\n//                     <input\n//                         style={{ width: '200px' }}\n//                         type=\"date\"\n//                         id=\"date\"\n//                         value={date}\n//                         onChange={(e) => setDate(e.target.value)}\n//                     />\n//                 </div>\n//                 <div style={{ marginBottom: '20px' }}>\n//                     <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\n//                     <input\n//                         style={{ width: '200px' }}\n//                         type=\"text\"\n//                         id=\"code\"\n//                         value={DT}\n//                         onChange={(e) => setDT(e.target.value)}\n//                         onBlur={handleQuantityChange} // Add onBlur event to trigger recalculation when \"Droit de timbre\" value changes\n//                     />\n//                 </div>\n//             </div>\n//             <div>\n//                 <div>\n//                     {inputs.map((input, index) => (\n//                         <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                             <div style={{ flex: '1', marginRight: '10px' }}>\n//                                 <label>Référence d'article</label>\n//                                 <input\n//                                     list=\"references\"\n//                                     style={{ width: '100%' }}\n//                                     value={input.refAr}\n//                                     onChange={(e) => handleReferenceChange(e, index)}\n//                                 />\n//                                 <datalist id=\"references\">\n//                                     {references.map((reference, idx) => (\n//                                         <option key={idx} value={reference} />\n//                                     ))}\n//                                 </datalist>\n//                             </div>\n//                             <div style={{ flex: '1', marginRight: '10px' }}>\n//                                 <label>Prix vente TTC</label>\n//                                 <input\n//                                     type=\"number\"\n//                                     style={{ width: '100%' }}\n//                                     value={input.price}\n//                                     readOnly\n//                                 />\n//                             </div>\n//                             <div style={{ flex: '1', marginRight: '10px' }}>\n//                                 <label>Quantité</label>\n//                                 <input\n//                                     type=\"number\"\n//                                     style={{ width: '100%' }}\n//                                     value={input.quantité}\n//                                     onChange={(e) => handleQuantityChange(e, index)}\n//                                 />\n//                             </div>\n//                             <div style={{ display: 'flex', alignItems: 'center' }}>\n//                                 <div style={{ flex: '1' }}>\n//                                     <label>Remise</label>\n//                                     <input\n//                                         type=\"number\"\n//                                         style={{ width: '100%' }}\n//                                         value={input.remise}\n//                                         onChange={(e) => handleRemiseChange(e, index)}\n//                                         onKeyDown={handleKeyPress} // Call handleKeyPress on key press\n//                                         ref={remiseInputRef} // Set the ref for Remise input field\n//                                     />\n//                                 </div>\n//                                 <div style={{ marginLeft: '10px' }}>\n//                                     <button type=\"button\" onClick={handleAddInput}>+</button>\n//                                 </div>\n//                             </div>\n//                         </div>\n//                     ))}\n//                 </div>\n//             </div>\n//             <div>\n//                 <div>\n//                     <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\n//                         <button\n//                             style={{ width: '200px', marginBottom: '10px' }}\n//                             type=\"button\"\n//                             onClick={handleAddInput}\n//                         >\n//                             Ajouter\n//                         </button>\n//                         <button\n//                             style={{ width: '200px', marginBottom: '10px' }}\n//                             type=\"submit\"\n//                             onClick={handleSubmit}\n//                         >\n//                             Enregistrer\n//                         </button><br />\n//                         <button\n//                             style={{ width: '200px', marginBottom: '10px' }}\n//                             type=\"button\"\n//                         >\n//                             Supprimer\n//                         </button>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//         <div style={{ marginBottom: '20px' }}>\n//             <label>Total</label>\n//             <input\n//                 type=\"text\" \n//                 style={{ width: '100%' }}\n//                 value={calculateTotal()}\n//                 readOnly\n//             />\n//         </div>\n//     </div>\n// );\n// }\n\n// export default CreateFactureVente;\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateFactureVente({\n  selectedFacture\n}) {\n  _s();\n  const [clName, setClName] = useState('');\n  const [client_id, setClientCode] = useState('');\n  const [date, setDate] = useState('');\n  const [DT, setDT] = useState('1.000');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0,\n    remise: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const remiseInputRef = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:7777/article').then(res => {\n      setReferences(res.data.map(article => article.ref));\n    }).catch(err => console.log('Error fetching articles:', err));\n  }, []);\n  useEffect(() => {\n    if (selectedFacture) {\n      setClName(selectedFacture.clName || '');\n      setClientCode(selectedFacture.client_id || '');\n      setDate(selectedFacture.date || '');\n      setDT(selectedFacture.DT || '1.000');\n      setInputs(selectedFacture.inputs || [{\n        refAr: '',\n        quantité: '',\n        price: 0,\n        remise: 0\n      }]);\n      setModalIsOpen(true);\n    }\n  }, [selectedFacture]);\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/factureVente/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log('Error fetching price:', err));\n  };\n  const handleReferenceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n    fetchPriceByReference(value, index);\n  };\n  const handleRemiseChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].remise = value;\n    setInputs(newInputs);\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].quantité = value;\n    axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`).then(res => {\n      const availableQuantity = res.data.quantity;\n      const remainingQuantity = availableQuantity - parseInt(value);\n      if (remainingQuantity < 0) {\n        alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n        newInputs[index].quantité = availableQuantity;\n      }\n      const remisePrice = newInputs[index].price * (1 - newInputs[index].remise / 100);\n      newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n      setInputs(newInputs);\n    }).catch(err => console.error('Error fetching quantity:', err));\n    const newTotal = newInputs.reduce((acc, curr) => {\n      const itemTotal = curr.price * curr.quantité;\n      return acc + itemTotal;\n    }, 0);\n    setTotalPrice(parseFloat(newTotal.toFixed(3)));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newFactureVente = {\n      client_id,\n      clName,\n      date,\n      DT,\n      inputs\n    };\n    axios.post('http://localhost:7777/factureVente', newFactureVente).then(res => {\n      alert('Facture vente created successfully');\n    }).catch(err => console.error('Error creating facture vente:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Client Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: client_id,\n        onChange: e => setClientCode(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Client Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: clName,\n        onChange: e => setClName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"form-control\",\n        value: date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"DT:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: DT,\n        onChange: e => setDT(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 13\n    }, this), inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Article Reference:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: input.refAr,\n        onChange: e => handleReferenceChange(e, index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Quantity:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: input.quantité,\n        onChange: e => handleQuantityChange(e, index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: input.price,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Remise:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: input.remise,\n        onChange: e => handleRemiseChange(e, index),\n        ref: remiseInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 460,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateFactureVente, \"NerleMNO+MryuD1pDId+sWbE0Rc=\");\n_c = CreateFactureVente;\nexport default CreateFactureVente;\nvar _c;\n$RefreshReg$(_c, \"CreateFactureVente\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","CreateFactureVente","selectedFacture","_s","clName","setClName","client_id","setClientCode","date","setDate","DT","setDT","inputs","setInputs","refAr","quantité","price","remise","references","setReferences","filteredClients","setFilteredClients","modalIsOpen","setModalIsOpen","remiseInputRef","get","then","res","data","map","article","ref","catch","err","console","log","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","event","value","target","handleRemiseChange","handleQuantityChange","availableQuantity","quantity","remainingQuantity","parseInt","alert","remisePrice","parseFloat","toFixed","error","newTotal","reduce","acc","curr","itemTotal","setTotalPrice","handleSubmit","preventDefault","newFactureVente","post","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","input","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureVente.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function CreateFactureVente({ selectedFacture }) {\r\n//     const [clName, setClName] = useState('');\r\n//     const [client_id, setClientCode] = useState('');\r\n//     const [date, setDate] = useState('');\r\n//     const [DT, setDT] = useState('1.000');\r\n//     const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//     const [references, setReferences] = useState([]);\r\n//     const [filteredClients, setFilteredClients] = useState([]);\r\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n//     const remiseInputRef = useRef(null); \r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:7777/article')\r\n//             .then(res => {\r\n//                 setReferences(res.data.map(article => article.ref));\r\n//             })\r\n//             .catch(err => console.log('Error fetching articles:', err));\r\n//     }, []);\r\n\r\n//      useEffect(() => {\r\n//         if (selectedFacture) {\r\n//             setClName(selectedFacture.clName || '');\r\n//             setClientCode(selectedFacture.client_id || '');\r\n//             setDate(selectedFacture.date || '');\r\n//             setDT(selectedFacture.DT || '1.000');\r\n//             setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//         }\r\n//     }, [selectedFacture]);\r\n\r\n//     const fetchPriceByReference = (reference, index) => {\r\n//         axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n//             .then(res => {\r\n//                 const price = res.data.price;\r\n//                 const newInputs = [...inputs];\r\n//                 newInputs[index].price = price;\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.log('Error fetching price:', err));\r\n//     };\r\n\r\n//     const handleReferenceChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].refAr = value;\r\n//         setInputs(newInputs);\r\n//         fetchPriceByReference(value, index);\r\n//     };\r\n\r\n//     const handleRemiseChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].remise = value;\r\n//         setInputs(newInputs);\r\n//     };\r\n\r\n//     const handleQuantityChange = (event, index) => {\r\n//         const { value } = event.target;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].quantité = value;\r\n\r\n//         axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//             .then(res => {\r\n//                 const availableQuantity = res.data.quantity;\r\n//                 const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n//                 if (remainingQuantity < 0) {\r\n//                     alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//                     newInputs[index].quantité = availableQuantity;\r\n//                 }\r\n\r\n//                 const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n//                 newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n//                 setInputs(newInputs);\r\n//             })\r\n//             .catch(err => console.error('Error fetching quantity:', err));\r\n            \r\n//         const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\r\n//         console.log(\"New Total:\", newTotal);\r\n//     };\r\n\r\n//     const handleAddInput = () => {\r\n//         const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n//         if (isEmpty) {\r\n//             alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n//             return;\r\n//         }\r\n//         setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n//     };\r\n\r\n//     const calculateTotal = () => {\r\n//         if (!inputs) return 0; \r\n//         const total = inputs.reduce((acc, curr) => acc + ((curr.price * curr.quantité) / 100) * (100 - curr.remise), 0) + parseFloat(DT); // Add DT to the total\r\n//         return total.toFixed(3); // Round to three decimal places\r\n//     };\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n\r\n//         // Filter out empty inputs before checking for invalid references\r\n//         const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n//         const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n\r\n//         if (invalidReference) {\r\n//             alert(\"Sélectionner une référence valide\");\r\n//             return;\r\n//         }\r\n\r\n//         const refArArray = [];\r\n//         const quantiteArray = [];\r\n//         const remiseArray = [];\r\n//         nonEmptyInputs.forEach(input => {\r\n//             refArArray.push(input.refAr);\r\n//             quantiteArray.push(input.quantité);\r\n//             remiseArray.push(input.remise);\r\n//         });\r\n\r\n//         const totalPrice = calculateTotal();\r\n//         axios.post('http://localhost:7777/factureVente/createFac/', {\r\n//             clName,\r\n//             client_id,\r\n//             date,\r\n//             DT,\r\n//             refAr: refArArray,\r\n//             quantité: quantiteArray,\r\n//             remise: remiseArray,\r\n//             totalPrice\r\n//         })\r\n//             .then(res => {\r\n//                 console.log(res);\r\n//                 window.location.reload();\r\n//             })\r\n//             .catch(err => console.log('Error creating facture:', err))\r\n//     };\r\n\r\n//     const handleKeyPress = (event) => {\r\n//         if (event.key === 'Enter') {\r\n//             handleAddInput();\r\n//         }\r\n//     };\r\n\r\n//     const handleClientSelect = (name, code) => {\r\n//         setClName(name);\r\n//         setClientCode(code);\r\n//         setFilteredClients([]);\r\n//     };\r\n\r\n//     const handleClientChange = (e) => {\r\n//         const { value } = e.target;\r\n//         setClName(value);\r\n\r\n//         // Fetch filtered clients from the server\r\n//         axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//             .then(res => {\r\n//                 setFilteredClients(res.data);\r\n//             })\r\n//             .catch(err => console.log('Error fetching clients:', err));\r\n\r\n//         // Retrieve the client code based on the entered client name\r\n//         axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//             .then(res => {\r\n//                 if (res.data.length > 0) {\r\n//                     // Assuming the client code is stored in res.data[0].clID\r\n//                     setClientCode(res.data[0].clID);\r\n//                 } else {\r\n//                     // Clear the client code if no matching client is found\r\n//                     setClientCode('');\r\n//                 }\r\n//             })\r\n//             .catch(err => console.log('Error fetching client code:', err));\r\n//     };\r\n\r\n// const handleClientBlur = () => {\r\n//     // Clear the filtered clients list when the input field loses focus\r\n//     setFilteredClients([]);\r\n// };\r\n// const handleClientCodeChange = (e) => {\r\n//     const { value } = e.target;\r\n//     setClientCode(value);\r\n\r\n//     // Fetch client name based on the entered code\r\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\r\n//         .then(res => {\r\n//             if (res.data.length > 0) {\r\n//                 // Assuming the client name is stored in res.data[0].clName\r\n//                 setClName(res.data[0].clName);\r\n//             } else {\r\n//                 // Clear the client name if no matching client is found\r\n//                 setClName('');\r\n//             }\r\n//         })\r\n//         .catch(err => console.log('Error fetching client name:', err));\r\n// };\r\n\r\n// return (\r\n//     <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n//         <div style={{ display: 'flex', flex: '1' }}>\r\n//             <div>\r\n//                 <div style={{ marginBottom: '20px' }}>\r\n//                     <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\r\n//                     <input\r\n// style={{ width: '200px' }}\r\n// type=\"text\"\r\n// id=\"code-client\"\r\n// name=\"code-client\"\r\n// value={client_id} // Display the client code\r\n// onChange={handleClientCodeChange} // Fetch and display client name based on code\r\n// />\r\n\r\n//                 </div>\r\n//                 <div style={{ marginBottom: '20px', position: 'relative' }}>\r\n//                     <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n//                     <input\r\n//                         style={{ width: '200px' }}\r\n//                         type=\"text\"\r\n//                         id=\"client\"\r\n//                         value={clName}\r\n//                         onChange={handleClientChange}\r\n//                         onBlur={handleClientBlur} // Add onBlur event to clear filtered clients list\r\n//                     />\r\n//                     {filteredClients.length > 0 && (\r\n//                         <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\r\n//                             {filteredClients.map((client, index) => (\r\n//                                 <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\r\n//                                     {client.clName}\r\n//                                 </div>\r\n//                             ))}\r\n//                         </div>\r\n//                     )}\r\n//                 </div>\r\n//                 <div style={{ marginBottom: '20px' }}>\r\n//                     <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n//                     <input\r\n//                         style={{ width: '200px' }}\r\n//                         type=\"date\"\r\n//                         id=\"date\"\r\n//                         value={date}\r\n//                         onChange={(e) => setDate(e.target.value)}\r\n//                     />\r\n//                 </div>\r\n//                 <div style={{ marginBottom: '20px' }}>\r\n//                     <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\r\n//                     <input\r\n//                         style={{ width: '200px' }}\r\n//                         type=\"text\"\r\n//                         id=\"code\"\r\n//                         value={DT}\r\n//                         onChange={(e) => setDT(e.target.value)}\r\n//                         onBlur={handleQuantityChange} // Add onBlur event to trigger recalculation when \"Droit de timbre\" value changes\r\n//                     />\r\n//                 </div>\r\n//             </div>\r\n//             <div>\r\n//                 <div>\r\n//                     {inputs.map((input, index) => (\r\n//                         <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//                             <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                                 <label>Référence d'article</label>\r\n//                                 <input\r\n//                                     list=\"references\"\r\n//                                     style={{ width: '100%' }}\r\n//                                     value={input.refAr}\r\n//                                     onChange={(e) => handleReferenceChange(e, index)}\r\n//                                 />\r\n//                                 <datalist id=\"references\">\r\n//                                     {references.map((reference, idx) => (\r\n//                                         <option key={idx} value={reference} />\r\n//                                     ))}\r\n//                                 </datalist>\r\n//                             </div>\r\n//                             <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                                 <label>Prix vente TTC</label>\r\n//                                 <input\r\n//                                     type=\"number\"\r\n//                                     style={{ width: '100%' }}\r\n//                                     value={input.price}\r\n//                                     readOnly\r\n//                                 />\r\n//                             </div>\r\n//                             <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                                 <label>Quantité</label>\r\n//                                 <input\r\n//                                     type=\"number\"\r\n//                                     style={{ width: '100%' }}\r\n//                                     value={input.quantité}\r\n//                                     onChange={(e) => handleQuantityChange(e, index)}\r\n//                                 />\r\n//                             </div>\r\n//                             <div style={{ display: 'flex', alignItems: 'center' }}>\r\n//                                 <div style={{ flex: '1' }}>\r\n//                                     <label>Remise</label>\r\n//                                     <input\r\n//                                         type=\"number\"\r\n//                                         style={{ width: '100%' }}\r\n//                                         value={input.remise}\r\n//                                         onChange={(e) => handleRemiseChange(e, index)}\r\n//                                         onKeyDown={handleKeyPress} // Call handleKeyPress on key press\r\n//                                         ref={remiseInputRef} // Set the ref for Remise input field\r\n//                                     />\r\n//                                 </div>\r\n//                                 <div style={{ marginLeft: '10px' }}>\r\n//                                     <button type=\"button\" onClick={handleAddInput}>+</button>\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             </div>\r\n//             <div>\r\n//                 <div>\r\n//                     <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\r\n//                         <button\r\n//                             style={{ width: '200px', marginBottom: '10px' }}\r\n//                             type=\"button\"\r\n//                             onClick={handleAddInput}\r\n//                         >\r\n//                             Ajouter\r\n//                         </button>\r\n//                         <button\r\n//                             style={{ width: '200px', marginBottom: '10px' }}\r\n//                             type=\"submit\"\r\n//                             onClick={handleSubmit}\r\n//                         >\r\n//                             Enregistrer\r\n//                         </button><br />\r\n//                         <button\r\n//                             style={{ width: '200px', marginBottom: '10px' }}\r\n//                             type=\"button\"\r\n//                         >\r\n//                             Supprimer\r\n//                         </button>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//         <div style={{ marginBottom: '20px' }}>\r\n//             <label>Total</label>\r\n//             <input\r\n//                 type=\"text\" \r\n//                 style={{ width: '100%' }}\r\n//                 value={calculateTotal()}\r\n//                 readOnly\r\n//             />\r\n//         </div>\r\n//     </div>\r\n// );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CreateFactureVente({ selectedFacture }) {\r\n    const [clName, setClName] = useState('');\r\n    const [client_id, setClientCode] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [DT, setDT] = useState('1.000');\r\n    const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n    const [references, setReferences] = useState([]);\r\n    const [filteredClients, setFilteredClients] = useState([]);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n    const remiseInputRef = useRef(null); \r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7777/article')\r\n            .then(res => {\r\n                setReferences(res.data.map(article => article.ref));\r\n            })\r\n            .catch(err => console.log('Error fetching articles:', err));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedFacture) {\r\n            setClName(selectedFacture.clName || '');\r\n            setClientCode(selectedFacture.client_id || '');\r\n            setDate(selectedFacture.date || '');\r\n            setDT(selectedFacture.DT || '1.000');\r\n            setInputs(selectedFacture.inputs || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n            setModalIsOpen(true);\r\n        }\r\n    }, [selectedFacture]);\r\n\r\n    const fetchPriceByReference = (reference, index) => {\r\n        axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n            .then(res => {\r\n                const price = res.data.price;\r\n                const newInputs = [...inputs];\r\n                newInputs[index].price = price;\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.log('Error fetching price:', err));\r\n    };\r\n\r\n    const handleReferenceChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].refAr = value;\r\n        setInputs(newInputs);\r\n        fetchPriceByReference(value, index);\r\n    };\r\n\r\n    const handleRemiseChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].remise = value;\r\n        setInputs(newInputs);\r\n    };\r\n\r\n    const handleQuantityChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].quantité = value;\r\n\r\n        axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n            .then(res => {\r\n                const availableQuantity = res.data.quantity;\r\n                const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n                if (remainingQuantity < 0) {\r\n                    alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n                    newInputs[index].quantité = availableQuantity;\r\n                }\r\n\r\n                const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n                newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n                setInputs(newInputs);\r\n            })\r\n            .catch(err => console.error('Error fetching quantity:', err));\r\n            \r\n        const newTotal = newInputs.reduce((acc, curr) => {\r\n            const itemTotal = curr.price * curr.quantité;\r\n            return acc + itemTotal;\r\n        }, 0);\r\n\r\n        setTotalPrice(parseFloat(newTotal.toFixed(3)));\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newFactureVente = {\r\n            client_id,\r\n            clName,\r\n            date,\r\n            DT,\r\n            inputs\r\n        };\r\n\r\n        axios.post('http://localhost:7777/factureVente', newFactureVente)\r\n            .then(res => {\r\n                alert('Facture vente created successfully');\r\n            })\r\n            .catch(err => console.error('Error creating facture vente:', err));\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label>Client Code:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={client_id}\r\n                    onChange={(e) => setClientCode(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Client Name:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={clName}\r\n                    onChange={(e) => setClName(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Date:</label>\r\n                <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    value={date}\r\n                    onChange={(e) => setDate(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>DT:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={DT}\r\n                    onChange={(e) => setDT(e.target.value)}\r\n                />\r\n            </div>\r\n            {inputs.map((input, index) => (\r\n                <div key={index} className=\"form-group\">\r\n                    <label>Article Reference:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={input.refAr}\r\n                        onChange={(e) => handleReferenceChange(e, index)}\r\n                    />\r\n                    <label>Quantity:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={input.quantité}\r\n                        onChange={(e) => handleQuantityChange(e, index)}\r\n                    />\r\n                    <label>Price:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={input.price}\r\n                        readOnly\r\n                    />\r\n                    <label>Remise:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={input.remise}\r\n                        onChange={(e) => handleRemiseChange(e, index)}\r\n                        ref={remiseInputRef}\r\n                    />\r\n                </div>\r\n            ))}\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default CreateFactureVente;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,kBAAkBA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,SAAS,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,EAAE,EAAEC,KAAK,CAAC,GAAGhB,QAAQ,CAAC,OAAO,CAAC;EACrC,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,CAAC;IAAEmB,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,CAAC,CAAC;EACxF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACyB,eAAe,EAAEC,kBAAkB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAM6B,cAAc,GAAG3B,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACZE,KAAK,CAAC2B,GAAG,CAAC,+BAA+B,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAI;MACTR,aAAa,CAACQ,GAAG,CAACC,IAAI,CAACC,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,GAAG,CAAC,CAAC;IACvD,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,GAAG,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAENrC,SAAS,CAAC,MAAM;IACZ,IAAIM,eAAe,EAAE;MACjBG,SAAS,CAACH,eAAe,CAACE,MAAM,IAAI,EAAE,CAAC;MACvCG,aAAa,CAACL,eAAe,CAACI,SAAS,IAAI,EAAE,CAAC;MAC9CG,OAAO,CAACP,eAAe,CAACM,IAAI,IAAI,EAAE,CAAC;MACnCG,KAAK,CAACT,eAAe,CAACQ,EAAE,IAAI,OAAO,CAAC;MACpCG,SAAS,CAACX,eAAe,CAACU,MAAM,IAAI,CAAC;QAAEE,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC,CAAC,CAAC;MACvFM,cAAc,CAAC,IAAI,CAAC;IACxB;EACJ,CAAC,EAAE,CAACrB,eAAe,CAAC,CAAC;EAErB,MAAMkC,qBAAqB,GAAGA,CAACC,SAAS,EAAEC,KAAK,KAAK;IAChDxC,KAAK,CAAC2B,GAAG,CAAE,sCAAqCY,SAAU,EAAC,CAAC,CACvDX,IAAI,CAACC,GAAG,IAAI;MACT,MAAMX,KAAK,GAAGW,GAAG,CAACC,IAAI,CAACZ,KAAK;MAC5B,MAAMuB,SAAS,GAAG,CAAC,GAAG3B,MAAM,CAAC;MAC7B2B,SAAS,CAACD,KAAK,CAAC,CAACtB,KAAK,GAAGA,KAAK;MAC9BH,SAAS,CAAC0B,SAAS,CAAC;IACxB,CAAC,CAAC,CACDP,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,GAAG,CAAC,CAAC;EAChE,CAAC;EAED,MAAMO,qBAAqB,GAAGA,CAACC,KAAK,EAAEH,KAAK,KAAK;IAC5C,MAAM;MAAEI;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9B,MAAMJ,SAAS,GAAG,CAAC,GAAG3B,MAAM,CAAC;IAC7B2B,SAAS,CAACD,KAAK,CAAC,CAACxB,KAAK,GAAG4B,KAAK;IAC9B7B,SAAS,CAAC0B,SAAS,CAAC;IACpBH,qBAAqB,CAACM,KAAK,EAAEJ,KAAK,CAAC;EACvC,CAAC;EAED,MAAMM,kBAAkB,GAAGA,CAACH,KAAK,EAAEH,KAAK,KAAK;IACzC,MAAM;MAAEI;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9B,MAAMJ,SAAS,GAAG,CAAC,GAAG3B,MAAM,CAAC;IAC7B2B,SAAS,CAACD,KAAK,CAAC,CAACrB,MAAM,GAAGyB,KAAK;IAC/B7B,SAAS,CAAC0B,SAAS,CAAC;EACxB,CAAC;EAED,MAAMM,oBAAoB,GAAGA,CAACJ,KAAK,EAAEH,KAAK,KAAK;IAC3C,MAAM;MAAEI;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9B,MAAMJ,SAAS,GAAG,CAAC,GAAG3B,MAAM,CAAC;IAC7B2B,SAAS,CAACD,KAAK,CAAC,CAACvB,QAAQ,GAAG2B,KAAK;IAEjC5C,KAAK,CAAC2B,GAAG,CAAE,iCAAgCc,SAAS,CAACD,KAAK,CAAC,CAACxB,KAAM,WAAU,CAAC,CACxEY,IAAI,CAACC,GAAG,IAAI;MACT,MAAMmB,iBAAiB,GAAGnB,GAAG,CAACC,IAAI,CAACmB,QAAQ;MAC3C,MAAMC,iBAAiB,GAAGF,iBAAiB,GAAGG,QAAQ,CAACP,KAAK,CAAC;MAE7D,IAAIM,iBAAiB,GAAG,CAAC,EAAE;QACvBE,KAAK,CAAE,+DAA8DJ,iBAAkB,wBAAuB,CAAC;QAC/GP,SAAS,CAACD,KAAK,CAAC,CAACvB,QAAQ,GAAG+B,iBAAiB;MACjD;MAEA,MAAMK,WAAW,GAAGZ,SAAS,CAACD,KAAK,CAAC,CAACtB,KAAK,IAAI,CAAC,GAAIuB,SAAS,CAACD,KAAK,CAAC,CAACrB,MAAM,GAAG,GAAI,CAAC;MAClFsB,SAAS,CAACD,KAAK,CAAC,CAACtB,KAAK,GAAGoC,UAAU,CAACD,WAAW,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;MAC3DxC,SAAS,CAAC0B,SAAS,CAAC;IACxB,CAAC,CAAC,CACDP,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACoB,KAAK,CAAC,0BAA0B,EAAErB,GAAG,CAAC,CAAC;IAEjE,MAAMsB,QAAQ,GAAGhB,SAAS,CAACiB,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;MAC7C,MAAMC,SAAS,GAAGD,IAAI,CAAC1C,KAAK,GAAG0C,IAAI,CAAC3C,QAAQ;MAC5C,OAAO0C,GAAG,GAAGE,SAAS;IAC1B,CAAC,EAAE,CAAC,CAAC;IAELC,aAAa,CAACR,UAAU,CAACG,QAAQ,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EAClD,CAAC;EAED,MAAMQ,YAAY,GAAIpB,KAAK,IAAK;IAC5BA,KAAK,CAACqB,cAAc,CAAC,CAAC;IACtB,MAAMC,eAAe,GAAG;MACpBzD,SAAS;MACTF,MAAM;MACNI,IAAI;MACJE,EAAE;MACFE;IACJ,CAAC;IAEDd,KAAK,CAACkE,IAAI,CAAC,oCAAoC,EAAED,eAAe,CAAC,CAC5DrC,IAAI,CAACC,GAAG,IAAI;MACTuB,KAAK,CAAC,oCAAoC,CAAC;IAC/C,CAAC,CAAC,CACDlB,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACoB,KAAK,CAAC,+BAA+B,EAAErB,GAAG,CAAC,CAAC;EAC1E,CAAC;EAED,oBACIjC,OAAA;IAAMiE,QAAQ,EAAEJ,YAAa;IAAAK,QAAA,gBACzBlE,OAAA;MAAKmE,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACvBlE,OAAA;QAAAkE,QAAA,EAAO;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3BvE,OAAA;QACIwE,IAAI,EAAC,MAAM;QACXL,SAAS,EAAC,cAAc;QACxBzB,KAAK,EAAEpC,SAAU;QACjBmE,QAAQ,EAAGC,CAAC,IAAKnE,aAAa,CAACmE,CAAC,CAAC/B,MAAM,CAACD,KAAK;MAAE;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNvE,OAAA;MAAKmE,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACvBlE,OAAA;QAAAkE,QAAA,EAAO;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3BvE,OAAA;QACIwE,IAAI,EAAC,MAAM;QACXL,SAAS,EAAC,cAAc;QACxBzB,KAAK,EAAEtC,MAAO;QACdqE,QAAQ,EAAGC,CAAC,IAAKrE,SAAS,CAACqE,CAAC,CAAC/B,MAAM,CAACD,KAAK;MAAE;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNvE,OAAA;MAAKmE,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACvBlE,OAAA;QAAAkE,QAAA,EAAO;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpBvE,OAAA;QACIwE,IAAI,EAAC,MAAM;QACXL,SAAS,EAAC,cAAc;QACxBzB,KAAK,EAAElC,IAAK;QACZiE,QAAQ,EAAGC,CAAC,IAAKjE,OAAO,CAACiE,CAAC,CAAC/B,MAAM,CAACD,KAAK;MAAE;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNvE,OAAA;MAAKmE,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACvBlE,OAAA;QAAAkE,QAAA,EAAO;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClBvE,OAAA;QACIwE,IAAI,EAAC,MAAM;QACXL,SAAS,EAAC,cAAc;QACxBzB,KAAK,EAAEhC,EAAG;QACV+D,QAAQ,EAAGC,CAAC,IAAK/D,KAAK,CAAC+D,CAAC,CAAC/B,MAAM,CAACD,KAAK;MAAE;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EACL3D,MAAM,CAACiB,GAAG,CAAC,CAAC8C,KAAK,EAAErC,KAAK,kBACrBtC,OAAA;MAAiBmE,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACnClE,OAAA;QAAAkE,QAAA,EAAO;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjCvE,OAAA;QACIwE,IAAI,EAAC,MAAM;QACXL,SAAS,EAAC,cAAc;QACxBzB,KAAK,EAAEiC,KAAK,CAAC7D,KAAM;QACnB2D,QAAQ,EAAGC,CAAC,IAAKlC,qBAAqB,CAACkC,CAAC,EAAEpC,KAAK;MAAE;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC,eACFvE,OAAA;QAAAkE,QAAA,EAAO;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBvE,OAAA;QACIwE,IAAI,EAAC,QAAQ;QACbL,SAAS,EAAC,cAAc;QACxBzB,KAAK,EAAEiC,KAAK,CAAC5D,QAAS;QACtB0D,QAAQ,EAAGC,CAAC,IAAK7B,oBAAoB,CAAC6B,CAAC,EAAEpC,KAAK;MAAE;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACFvE,OAAA;QAAAkE,QAAA,EAAO;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrBvE,OAAA;QACIwE,IAAI,EAAC,QAAQ;QACbL,SAAS,EAAC,cAAc;QACxBzB,KAAK,EAAEiC,KAAK,CAAC3D,KAAM;QACnB4D,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFvE,OAAA;QAAAkE,QAAA,EAAO;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtBvE,OAAA;QACIwE,IAAI,EAAC,QAAQ;QACbL,SAAS,EAAC,cAAc;QACxBzB,KAAK,EAAEiC,KAAK,CAAC1D,MAAO;QACpBwD,QAAQ,EAAGC,CAAC,IAAK9B,kBAAkB,CAAC8B,CAAC,EAAEpC,KAAK,CAAE;QAC9CP,GAAG,EAAEP;MAAe;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA,GA7BIjC,KAAK;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA8BV,CACR,CAAC,eACFvE,OAAA;MAAQwE,IAAI,EAAC,QAAQ;MAACL,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEf;AAACpE,EAAA,CAjLQF,kBAAkB;AAAA4E,EAAA,GAAlB5E,kBAAkB;AAmL3B,eAAeA,kBAAkB;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}