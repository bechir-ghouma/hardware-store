{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\quincaillerie\\\\frontend\\\\src\\\\CreateFactureVente.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import axios from 'axios';\n\n// function CreateFactureVente({ selectedFacture }) {\n//   const [clName, setClName] = useState('');\n//   const [client_id, setClientCode] = useState('');\n//   const [date, setDate] = useState('');\n//   const [DT, setDT] = useState('1.000');\n//   const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//   const [references, setReferences] = useState([]);\n//   const [filteredClients, setFilteredClients] = useState([]);\n\n//   const remiseInputRef = useRef(null);\n\n//   useEffect(() => {\n//     axios.get('http://localhost:7777/article')\n//       .then(res => {\n//         setReferences(res.data.map(article => article.ref));\n//       })\n//       .catch(err => console.log('Error fetching articles:', err));\n//   }, []);\n\n//   useEffect(() => {\n//     if (selectedFacture) {\n//       console.log('Selected Facture in CreateFactureVente:', selectedFacture);\n//       setClName(selectedFacture.clName || '');\n//       setClientCode(selectedFacture.client_id || '');\n//       setDate(selectedFacture.date || '');\n//       setDT(selectedFacture.DT || '1.000');\n//       setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\n//     }\n//   }, [selectedFacture]);\n\n//   const fetchPriceByReference = (reference, index) => {\n//     axios.get(`http://localhost:7777/factureVente/${reference}`)\n//       .then(res => {\n//         const price = res.data.price;\n//         const newInputs = [...inputs];\n//         newInputs[index].price = price;\n//         setInputs(newInputs);\n//       })\n//       .catch(err => console.log('Error fetching price:', err));\n//   };\n\n//   const handleReferenceChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].refAr = value;\n//     setInputs(newInputs);\n//     fetchPriceByReference(value, index);\n//   };\n\n//   const handleRemiseChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].remise = value;\n//     setInputs(newInputs);\n//   };\n\n//   const handleQuantityChange = (event, index) => {\n//     const { value } = event.target;\n//     const newInputs = [...inputs];\n//     newInputs[index].quantité = value;\n\n//     axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\n//       .then(res => {\n//         const availableQuantity = res.data.quantity;\n//         const remainingQuantity = availableQuantity - parseInt(value);\n\n//         if (remainingQuantity < 0) {\n//           alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n//           newInputs[index].quantité = availableQuantity;\n//         }\n\n//         const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\n//         newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n//         setInputs(newInputs);\n//       })\n//       .catch(err => console.error('Error fetching quantity:', err));\n\n//     const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\n//     console.log(\"New Total:\", newTotal);\n//   };\n\n//   const handleAddInput = () => {\n//     const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n//     if (isEmpty) {\n//       alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n//       return;\n//     }\n//     setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\n//   };\n\n//   const calculateTotal = () => {\n//     if (!inputs) return 0; \n//     const total = inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité) * (1 - (curr.remise / 100)), 0) + parseFloat(DT); \n//     return total.toFixed(3); \n//   };\n\nconst handleSubmit = event => {\n  event.preventDefault();\n  const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n  const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n  if (invalidReference) {\n    alert(\"Sélectionner une référence valide\");\n    return;\n  }\n  const refArArray = nonEmptyInputs.map(input => ({\n    refAr: input.refAr,\n    price: input.price,\n    quantité: input.quantité,\n    remise: input.remise\n  }));\n  const totalPrice = calculateTotal();\n  axios.post('http://localhost:7777/factureVente/createFac/', {\n    clName,\n    client_id,\n    date,\n    DT,\n    refAr: refArArray,\n    totalPrice\n  }).then(res => {\n    console.log(res);\n    window.location.reload();\n  }).catch(err => console.log('Error creating facture:', err));\n};\n\n//   const handleKeyPress = (event) => {\n//     if (event.key === 'Enter') {\n//       handleAddInput();\n//     }\n//   };\n\n//   const handleClientSelect = (name, code) => {\n//     setClName(name);\n//     setClientCode(code);\n//     setFilteredClients([]);\n//   };\n\n//   const handleClientChange = (e) => {\n//     const { value } = e.target;\n//     setClName(value);\n\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//       .then(res => {\n//         setFilteredClients(res.data);\n//       })\n//       .catch(err => console.log('Error fetching clients:', err));\n\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\n//       .then(res => {\n//         if (res.data.length > 0) {\n//           setClientCode(res.data[0].clID);\n//         } else {\n//           setClientCode('');\n//         }\n//       })\n//       .catch(err => console.log('Error fetching client code:', err));\n//   };\n\n//   const handleClientBlur = () => {\n//     setFilteredClients([]);\n//   };\n\n//   const handleClientCodeChange = (e) => {\n//     const { value } = e.target;\n//     setClientCode(value);\n\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\n//       .then(res => {\n//         if (res.data.length > 0) {\n//           setClName(res.data[0].clName);\n//         } else {\n//           setClName('');\n//         }\n//       })\n//       .catch(err => console.log('Error fetching client name:', err));\n//   };\n\n//   return (\n//     <div style={{ margin: '20px', justifyContent: 'center' }}>\n//       <div style={{ display: 'flex', flex: '1' }}>\n//         <div>\n//           <div style={{ marginBottom: '20px' }}>\n//             <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\n//             <input\n//               style={{ width: '200px' }}\n//               type=\"text\"\n//               id=\"code-client\"\n//               name=\"code-client\"\n//               value={client_id}\n//               onChange={handleClientCodeChange}\n//             />\n//           </div>\n//           <div style={{ marginBottom: '20px', position: 'relative' }}>\n//             <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\n//             <input\n//               style={{ width: '200px' }}\n//               type=\"text\"\n//               id=\"client\"\n//               value={clName}\n//               onChange={handleClientChange}\n//               onBlur={handleClientBlur}\n//             />\n//             {filteredClients.length > 0 && (\n//               <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\n//                 {filteredClients.map((client, index) => (\n//                   <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\n//                     {client.clName}\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//           <div style={{ marginBottom: '20px' }}>\n//             <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\n//             <input\n//               style={{ width: '200px' }}\n//               type=\"date\"\n//               id=\"date\"\n//               value={date}\n//               onChange={(e) => setDate(e.target.value)}\n//             />\n//           </div>\n//           <div style={{ marginBottom: '20px' }}>\n//             <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\n//             <input\n//               style={{ width: '200px' }}\n//               type=\"text\"\n//               id=\"DT\"\n//               value={DT}\n//               onChange={(e) => setDT(e.target.value)}\n//             />\n//           </div>\n//         </div>\n//         <div>\n//           {inputs.map((input, index) => (\n//             <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//               <div style={{ flex: '1', marginRight: '10px' }}>\n//                 <label>Référence d'article</label>\n//                 <input\n//                   list=\"references\"\n//                   style={{ width: '100%' }}\n//                   value={input.refAr}\n//                   onChange={(e) => handleReferenceChange(e, index)}\n//                 />\n//                 <datalist id=\"references\">\n//                   {references.map((reference, idx) => (\n//                     <option key={idx} value={reference} />\n//                   ))}\n//                 </datalist>\n//               </div>\n//               <div style={{ flex: '1', marginRight: '10px' }}>\n//                 <label>Prix vente TTC</label>\n//                 <input\n//                   type=\"number\"\n//                   style={{ width: '100%' }}\n//                   value={input.price}\n//                   readOnly\n//                 />\n//               </div>\n//               <div style={{ flex: '1', marginRight: '10px' }}>\n//                 <label>Quantité</label>\n//                 <input\n//                   type=\"number\"\n//                   style={{ width: '100%' }}\n//                   value={input.quantité}\n//                   onChange={(e) => handleQuantityChange(e, index)}\n//                 />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center' }}>\n//                 <div style={{ flex: '1' }}>\n//                   <label>Remise</label>\n//                   <input\n//                     type=\"number\"\n//                     style={{ width: '100%' }}\n//                     value={input.remise}\n//                     onChange={(e) => handleRemiseChange(e, index)}\n//                     onKeyDown={handleKeyPress}\n//                     ref={remiseInputRef}\n//                   />\n//                 </div>\n//                 <div style={{ marginLeft: '10px' }}>\n//                   <button type=\"button\" onClick={handleAddInput}>+</button>\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//         <div>\n//           <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\n//             <button\n//               style={{ width: '200px', marginBottom: '10px' }}\n//               type=\"button\"\n//               onClick={handleSubmit}\n//             >\n//               Ajouter\n//             </button>\n//             <button\n//               style={{ width: '200px', marginBottom: '10px' }}\n//               type=\"submit\"\n//               onClick={handleSubmit}\n//             >\n//               Enregistrer\n//             </button><br />\n//             {/* <button\n//               style={{ width: '200px', marginBottom: '10px' }}\n//               type=\"button\"\n//             >\n//               Supprimer\n//             </button> */}\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ marginBottom: '20px' }}>\n//         <label>Total</label>\n//         <input\n//         // type='text'\n//         style={{ width: '100%' }}\n//         value={calculateTotal()}\n//         readOnly\n//       />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default CreateFactureVente;\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateFactureVente({\n  selectedFacture\n}) {\n  _s();\n  const [clName, setClName] = useState('');\n  const [client_id, setClientCode] = useState('');\n  const [date, setDate] = useState('');\n  const [DT, setDT] = useState('1.000');\n  const [inputs, setInputs] = useState([{\n    refAr: '',\n    quantité: '',\n    price: 0,\n    remise: 0\n  }]);\n  const [references, setReferences] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const remiseInputRef = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:7777/article').then(res => {\n      setReferences(res.data.map(article => article.ref));\n    }).catch(err => console.log('Error fetching articles:', err));\n  }, []);\n  useEffect(() => {\n    if (selectedFacture) {\n      console.log('Selected Facture in CreateFactureVente:', selectedFacture);\n      setClName(selectedFacture.clName || '');\n      setClientCode(selectedFacture.client_id || '');\n      setDate(selectedFacture.date || '');\n      setDT(selectedFacture.DT || '1.000');\n      setInputs(selectedFacture.articles || [{\n        refAr: '',\n        quantité: '',\n        price: 0,\n        remise: 0\n      }]);\n    }\n  }, [selectedFacture]);\n  const fetchPriceByReference = (reference, index) => {\n    axios.get(`http://localhost:7777/factureVente/${reference}`).then(res => {\n      const price = res.data.price;\n      const newInputs = [...inputs];\n      newInputs[index].price = price;\n      setInputs(newInputs);\n    }).catch(err => console.log('Error fetching price:', err));\n  };\n  const handleReferenceChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].refAr = value;\n    setInputs(newInputs);\n    fetchPriceByReference(value, index);\n  };\n  const handleRemiseChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].remise = value;\n    setInputs(newInputs);\n  };\n  const handleQuantityChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    const newInputs = [...inputs];\n    newInputs[index].quantité = value;\n    axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`).then(res => {\n      const availableQuantity = res.data.quantity;\n      const remainingQuantity = availableQuantity - parseInt(value);\n      if (remainingQuantity < 0) {\n        alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\n        newInputs[index].quantité = availableQuantity;\n      }\n      const remisePrice = newInputs[index].price * (1 - newInputs[index].remise / 100);\n      newInputs[index].price = parseFloat(remisePrice.toFixed(2));\n      setInputs(newInputs);\n    }).catch(err => console.error('Error fetching quantity:', err));\n    const newTotal = newInputs.reduce((acc, curr) => acc + curr.price * curr.quantité, 0) + parseFloat(DT);\n    console.log(\"New Total:\", newTotal);\n  };\n  const handleAddInput = () => {\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\n    if (isEmpty) {\n      alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\n      return;\n    }\n    setInputs([...inputs, {\n      refAr: '',\n      price: 0,\n      quantité: '',\n      remise: 0\n    }]);\n  };\n  const calculateTotal = () => {\n    if (!inputs) return 0;\n    const total = inputs.reduce((acc, curr) => acc + curr.price * curr.quantité * (1 - curr.remise / 100), 0) + parseFloat(DT);\n    return total.toFixed(3);\n  };\n  const handleUpdate = event => {\n    event.preventDefault();\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\n    if (invalidReference) {\n      alert(\"Sélectionner une référence valide\");\n      return;\n    }\n    const refArArray = nonEmptyInputs.map(input => ({\n      refAr: input.refAr,\n      price: input.price,\n      quantité: input.quantité,\n      remise: input.remise\n    }));\n    const totalPrice = calculateTotal();\n    axios.put(`http://localhost:7777/factureVente/update/${selectedFacture.id}`, {\n      clName,\n      client_id,\n      date,\n      DT,\n      refAr: refArArray,\n      totalPrice\n    }).then(res => {\n      console.log(res);\n      window.location.reload();\n    }).catch(err => console.log('Error updating facture:', err));\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleAddInput();\n    }\n  };\n  const handleClientSelect = (name, code) => {\n    setClName(name);\n    setClientCode(code);\n    setFilteredClients([]);\n  };\n  const handleClientChange = e => {\n    const {\n      value\n    } = e.target;\n    setClName(value);\n    axios.get(`http://localhost:7777/clients/search?name=${value}`).then(res => {\n      setFilteredClients(res.data);\n    }).catch(err => console.log('Error fetching clients:', err));\n    axios.get(`http://localhost:7777/clients/search?name=${value}`).then(res => {\n      if (res.data.length > 0) {\n        setClientCode(res.data[0].clID);\n      } else {\n        setClientCode('');\n      }\n    }).catch(err => console.log('Error fetching client code:', err));\n  };\n  const handleClientBlur = () => {\n    setFilteredClients([]);\n  };\n  const handleClientCodeChange = e => {\n    const {\n      value\n    } = e.target;\n    setClientCode(value);\n    axios.get(`http://localhost:7777/clients/search?id=${value}`).then(res => {\n      if (res.data.length > 0) {\n        setClName(res.data[0].clName);\n      } else {\n        setClName('');\n      }\n    }).catch(err => console.log('Error fetching client name:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flex: '1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"code-client\",\n            children: \"Code client:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"text\",\n            id: \"code-client\",\n            name: \"code-client\",\n            value: client_id,\n            onChange: handleClientCodeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"client\",\n            children: \"Nom du client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"text\",\n            id: \"client\",\n            value: clName,\n            onChange: handleClientChange,\n            onBlur: handleClientBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this), filteredClients.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: '100%',\n              left: 0,\n              backgroundColor: 'white',\n              border: '1px solid #ccc',\n              width: '100%'\n            },\n            children: filteredClients.map((client, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '5px',\n                cursor: 'pointer'\n              },\n              onClick: () => handleClientSelect(client.clName, client.clID),\n              children: client.clName\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"date\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"date\",\n            id: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              width: '120px'\n            },\n            htmlFor: \"DT\",\n            children: \"Droit de timbre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '200px'\n            },\n            type: \"text\",\n            id: \"DT\",\n            value: DT,\n            onChange: e => setDT(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1',\n              marginRight: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"R\\xE9f\\xE9rence d'article\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              list: \"references\",\n              style: {\n                width: '100%'\n              },\n              value: input.refAr,\n              onChange: e => handleReferenceChange(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n              id: \"references\",\n              children: references.map((reference, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: reference\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1',\n              marginRight: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Prix vente TTC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              style: {\n                width: '100%'\n              },\n              value: input.price,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1',\n              marginRight: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Quantit\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              style: {\n                width: '100%'\n              },\n              value: input.quantité,\n              onChange: e => handleQuantityChange(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: '1'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Remise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                style: {\n                  width: '100%'\n                },\n                value: input.remise,\n                onChange: e => handleRemiseChange(e, index),\n                onKeyDown: handleKeyPress,\n                ref: remiseInputRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleAddInput,\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\",\n            marginBottom: '20px',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: '200px',\n              marginBottom: '10px'\n            },\n            type: \"button\"\n            // onClick={handleSubmit}\n            ,\n            children: \"Ajouter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: '200px',\n              marginBottom: '10px'\n            },\n            type: \"submit\",\n            onClick: handleUpdate,\n            children: \"Enregistrer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Total\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // type='text'\n        style: {\n          width: '100%'\n        },\n        value: calculateTotal(),\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 526,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateFactureVente, \"EpEI49D7RdxO7iDt8WAySoRpXQA=\");\n_c = CreateFactureVente;\nexport default CreateFactureVente;\nvar _c;\n$RefreshReg$(_c, \"CreateFactureVente\");","map":{"version":3,"names":["handleSubmit","event","preventDefault","nonEmptyInputs","inputs","filter","input","refAr","quantité","remise","invalidReference","some","references","includes","alert","refArArray","map","price","totalPrice","calculateTotal","axios","post","clName","client_id","date","DT","then","res","console","log","window","location","reload","catch","err","React","useState","useEffect","useRef","jsxDEV","_jsxDEV","CreateFactureVente","selectedFacture","_s","setClName","setClientCode","setDate","setDT","setInputs","setReferences","filteredClients","setFilteredClients","remiseInputRef","get","data","article","ref","articles","fetchPriceByReference","reference","index","newInputs","handleReferenceChange","value","target","handleRemiseChange","handleQuantityChange","availableQuantity","quantity","remainingQuantity","parseInt","remisePrice","parseFloat","toFixed","error","newTotal","reduce","acc","curr","handleAddInput","isEmpty","total","handleUpdate","put","id","handleKeyPress","key","handleClientSelect","name","code","handleClientChange","e","length","clID","handleClientBlur","handleClientCodeChange","style","margin","justifyContent","children","display","flex","marginBottom","width","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","position","onBlur","top","left","backgroundColor","border","client","padding","cursor","onClick","alignItems","marginRight","list","idx","readOnly","onKeyDown","marginLeft","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/quincaillerie/frontend/src/CreateFactureVente.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function CreateFactureVente({ selectedFacture }) {\r\n//   const [clName, setClName] = useState('');\r\n//   const [client_id, setClientCode] = useState('');\r\n//   const [date, setDate] = useState('');\r\n//   const [DT, setDT] = useState('1.000');\r\n//   const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//   const [references, setReferences] = useState([]);\r\n//   const [filteredClients, setFilteredClients] = useState([]);\r\n  \r\n//   const remiseInputRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     axios.get('http://localhost:7777/article')\r\n//       .then(res => {\r\n//         setReferences(res.data.map(article => article.ref));\r\n//       })\r\n//       .catch(err => console.log('Error fetching articles:', err));\r\n//   }, []);\r\n  \r\n\r\n//   useEffect(() => {\r\n//     if (selectedFacture) {\r\n//       console.log('Selected Facture in CreateFactureVente:', selectedFacture);\r\n//       setClName(selectedFacture.clName || '');\r\n//       setClientCode(selectedFacture.client_id || '');\r\n//       setDate(selectedFacture.date || '');\r\n//       setDT(selectedFacture.DT || '1.000');\r\n//       setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n//     }\r\n//   }, [selectedFacture]);\r\n  \r\n\r\n\r\n//   const fetchPriceByReference = (reference, index) => {\r\n//     axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n//       .then(res => {\r\n//         const price = res.data.price;\r\n//         const newInputs = [...inputs];\r\n//         newInputs[index].price = price;\r\n//         setInputs(newInputs);\r\n//       })\r\n//       .catch(err => console.log('Error fetching price:', err));\r\n//   };\r\n\r\n//   const handleReferenceChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].refAr = value;\r\n//     setInputs(newInputs);\r\n//     fetchPriceByReference(value, index);\r\n//   };\r\n\r\n//   const handleRemiseChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].remise = value;\r\n//     setInputs(newInputs);\r\n//   };\r\n\r\n//   const handleQuantityChange = (event, index) => {\r\n//     const { value } = event.target;\r\n//     const newInputs = [...inputs];\r\n//     newInputs[index].quantité = value;\r\n\r\n//     axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n//       .then(res => {\r\n//         const availableQuantity = res.data.quantity;\r\n//         const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n//         if (remainingQuantity < 0) {\r\n//           alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n//           newInputs[index].quantité = availableQuantity;\r\n//         }\r\n\r\n//         const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n//         newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n//         setInputs(newInputs);\r\n//       })\r\n//       .catch(err => console.error('Error fetching quantity:', err));\r\n      \r\n//     const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\r\n//     console.log(\"New Total:\", newTotal);\r\n//   };\r\n\r\n//   const handleAddInput = () => {\r\n//     const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n//     if (isEmpty) {\r\n//       alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n//       return;\r\n//     }\r\n//     setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n//   };\r\n\r\n//   const calculateTotal = () => {\r\n//     if (!inputs) return 0; \r\n//     const total = inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité) * (1 - (curr.remise / 100)), 0) + parseFloat(DT); \r\n//     return total.toFixed(3); \r\n//   };\r\n  \r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  \r\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n  \r\n    if (invalidReference) {\r\n      alert(\"Sélectionner une référence valide\");\r\n      return;\r\n    }\r\n  \r\n    const refArArray = nonEmptyInputs.map(input => ({\r\n      refAr: input.refAr,\r\n      price: input.price,\r\n      quantité: input.quantité,\r\n      remise: input.remise\r\n    }));\r\n  \r\n    const totalPrice = calculateTotal();\r\n    axios.post('http://localhost:7777/factureVente/createFac/', {\r\n      clName,\r\n      client_id,\r\n      date,\r\n      DT,\r\n      refAr: refArArray,\r\n      totalPrice\r\n    })\r\n    .then(res => {\r\n      console.log(res);\r\n      window.location.reload();\r\n    })\r\n    .catch(err => console.log('Error creating facture:', err));\r\n  };\r\n  \r\n\r\n//   const handleKeyPress = (event) => {\r\n//     if (event.key === 'Enter') {\r\n//       handleAddInput();\r\n//     }\r\n//   };\r\n\r\n//   const handleClientSelect = (name, code) => {\r\n//     setClName(name);\r\n//     setClientCode(code);\r\n//     setFilteredClients([]);\r\n//   };\r\n\r\n//   const handleClientChange = (e) => {\r\n//     const { value } = e.target;\r\n//     setClName(value);\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//       .then(res => {\r\n//         setFilteredClients(res.data);\r\n//       })\r\n//       .catch(err => console.log('Error fetching clients:', err));\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n//       .then(res => {\r\n//         if (res.data.length > 0) {\r\n//           setClientCode(res.data[0].clID);\r\n//         } else {\r\n//           setClientCode('');\r\n//         }\r\n//       })\r\n//       .catch(err => console.log('Error fetching client code:', err));\r\n//   };\r\n\r\n//   const handleClientBlur = () => {\r\n//     setFilteredClients([]);\r\n//   };\r\n\r\n//   const handleClientCodeChange = (e) => {\r\n//     const { value } = e.target;\r\n//     setClientCode(value);\r\n\r\n//     axios.get(`http://localhost:7777/clients/search?id=${value}`)\r\n//       .then(res => {\r\n//         if (res.data.length > 0) {\r\n//           setClName(res.data[0].clName);\r\n//         } else {\r\n//           setClName('');\r\n//         }\r\n//       })\r\n//       .catch(err => console.log('Error fetching client name:', err));\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n//       <div style={{ display: 'flex', flex: '1' }}>\r\n//         <div>\r\n//           <div style={{ marginBottom: '20px' }}>\r\n//             <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\r\n//             <input\r\n//               style={{ width: '200px' }}\r\n//               type=\"text\"\r\n//               id=\"code-client\"\r\n//               name=\"code-client\"\r\n//               value={client_id}\r\n//               onChange={handleClientCodeChange}\r\n//             />\r\n//           </div>\r\n//           <div style={{ marginBottom: '20px', position: 'relative' }}>\r\n//             <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n//             <input\r\n//               style={{ width: '200px' }}\r\n//               type=\"text\"\r\n//               id=\"client\"\r\n//               value={clName}\r\n//               onChange={handleClientChange}\r\n//               onBlur={handleClientBlur}\r\n//             />\r\n//             {filteredClients.length > 0 && (\r\n//               <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\r\n//                 {filteredClients.map((client, index) => (\r\n//                   <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\r\n//                     {client.clName}\r\n//                   </div>\r\n//                 ))}\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//           <div style={{ marginBottom: '20px' }}>\r\n//             <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n//             <input\r\n//               style={{ width: '200px' }}\r\n//               type=\"date\"\r\n//               id=\"date\"\r\n//               value={date}\r\n//               onChange={(e) => setDate(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div style={{ marginBottom: '20px' }}>\r\n//             <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\r\n//             <input\r\n//               style={{ width: '200px' }}\r\n//               type=\"text\"\r\n//               id=\"DT\"\r\n//               value={DT}\r\n//               onChange={(e) => setDT(e.target.value)}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//         <div>\r\n//           {inputs.map((input, index) => (\r\n//             <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//               <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                 <label>Référence d'article</label>\r\n//                 <input\r\n//                   list=\"references\"\r\n//                   style={{ width: '100%' }}\r\n//                   value={input.refAr}\r\n//                   onChange={(e) => handleReferenceChange(e, index)}\r\n//                 />\r\n//                 <datalist id=\"references\">\r\n//                   {references.map((reference, idx) => (\r\n//                     <option key={idx} value={reference} />\r\n//                   ))}\r\n//                 </datalist>\r\n//               </div>\r\n//               <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                 <label>Prix vente TTC</label>\r\n//                 <input\r\n//                   type=\"number\"\r\n//                   style={{ width: '100%' }}\r\n//                   value={input.price}\r\n//                   readOnly\r\n//                 />\r\n//               </div>\r\n//               <div style={{ flex: '1', marginRight: '10px' }}>\r\n//                 <label>Quantité</label>\r\n//                 <input\r\n//                   type=\"number\"\r\n//                   style={{ width: '100%' }}\r\n//                   value={input.quantité}\r\n//                   onChange={(e) => handleQuantityChange(e, index)}\r\n//                 />\r\n//               </div>\r\n//               <div style={{ display: 'flex', alignItems: 'center' }}>\r\n//                 <div style={{ flex: '1' }}>\r\n//                   <label>Remise</label>\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     style={{ width: '100%' }}\r\n//                     value={input.remise}\r\n//                     onChange={(e) => handleRemiseChange(e, index)}\r\n//                     onKeyDown={handleKeyPress}\r\n//                     ref={remiseInputRef}\r\n//                   />\r\n//                 </div>\r\n//                 <div style={{ marginLeft: '10px' }}>\r\n//                   <button type=\"button\" onClick={handleAddInput}>+</button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//         <div>\r\n//           <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\r\n//             <button\r\n//               style={{ width: '200px', marginBottom: '10px' }}\r\n//               type=\"button\"\r\n//               onClick={handleSubmit}\r\n//             >\r\n//               Ajouter\r\n//             </button>\r\n//             <button\r\n//               style={{ width: '200px', marginBottom: '10px' }}\r\n//               type=\"submit\"\r\n//               onClick={handleSubmit}\r\n//             >\r\n//               Enregistrer\r\n//             </button><br />\r\n//             {/* <button\r\n//               style={{ width: '200px', marginBottom: '10px' }}\r\n//               type=\"button\"\r\n//             >\r\n//               Supprimer\r\n//             </button> */}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <div style={{ marginBottom: '20px' }}>\r\n//         <label>Total</label>\r\n//         <input\r\n//         // type='text'\r\n//         style={{ width: '100%' }}\r\n//         value={calculateTotal()}\r\n//         readOnly\r\n//       />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default CreateFactureVente;\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CreateFactureVente({ selectedFacture }) {\r\n  const [clName, setClName] = useState('');\r\n  const [client_id, setClientCode] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [DT, setDT] = useState('1.000');\r\n  const [inputs, setInputs] = useState([{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n  const [references, setReferences] = useState([]);\r\n  const [filteredClients, setFilteredClients] = useState([]);\r\n\r\n  const remiseInputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:7777/article')\r\n      .then(res => {\r\n        setReferences(res.data.map(article => article.ref));\r\n      })\r\n      .catch(err => console.log('Error fetching articles:', err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedFacture) {\r\n      console.log('Selected Facture in CreateFactureVente:', selectedFacture);\r\n      setClName(selectedFacture.clName || '');\r\n      setClientCode(selectedFacture.client_id || '');\r\n      setDate(selectedFacture.date || '');\r\n      setDT(selectedFacture.DT || '1.000');\r\n      setInputs(selectedFacture.articles || [{ refAr: '', quantité: '', price: 0, remise: 0 }]);\r\n    }\r\n  }, [selectedFacture]);\r\n\r\n  const fetchPriceByReference = (reference, index) => {\r\n    axios.get(`http://localhost:7777/factureVente/${reference}`)\r\n      .then(res => {\r\n        const price = res.data.price;\r\n        const newInputs = [...inputs];\r\n        newInputs[index].price = price;\r\n        setInputs(newInputs);\r\n      })\r\n      .catch(err => console.log('Error fetching price:', err));\r\n  };\r\n\r\n  const handleReferenceChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].refAr = value;\r\n    setInputs(newInputs);\r\n    fetchPriceByReference(value, index);\r\n  };\r\n\r\n  const handleRemiseChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].remise = value;\r\n    setInputs(newInputs);\r\n  };\r\n\r\n  const handleQuantityChange = (event, index) => {\r\n    const { value } = event.target;\r\n    const newInputs = [...inputs];\r\n    newInputs[index].quantité = value;\r\n\r\n    axios.get(`http://localhost:7777/article/${newInputs[index].refAr}/quantity`)\r\n      .then(res => {\r\n        const availableQuantity = res.data.quantity;\r\n        const remainingQuantity = availableQuantity - parseInt(value);\r\n\r\n        if (remainingQuantity < 0) {\r\n          alert(`La quantité souhaitée n'est pas suffisante, vous n'avez que ${availableQuantity} pièces de cet article`);\r\n          newInputs[index].quantité = availableQuantity;\r\n        }\r\n\r\n        const remisePrice = newInputs[index].price * (1 - (newInputs[index].remise / 100));\r\n        newInputs[index].price = parseFloat(remisePrice.toFixed(2));\r\n        setInputs(newInputs);\r\n      })\r\n      .catch(err => console.error('Error fetching quantity:', err));\r\n      \r\n    const newTotal = newInputs.reduce((acc, curr) => acc + (curr.price * curr.quantité), 0) + parseFloat(DT);\r\n    console.log(\"New Total:\", newTotal);\r\n  };\r\n\r\n  const handleAddInput = () => {\r\n    const isEmpty = inputs.some(input => input.refAr === '' || input.quantité === '' || input.remise === '');\r\n    if (isEmpty) {\r\n      alert(\"Veuillez remplir tous les champs de la ligne précédente avant d'ajouter une nouvelle ligne.\");\r\n      return;\r\n    }\r\n    setInputs([...inputs, { refAr: '', price: 0, quantité: '', remise: 0 }]);\r\n  };\r\n\r\n  const calculateTotal = () => {\r\n    if (!inputs) return 0; \r\n    const total = inputs.reduce((acc, curr) => acc + (curr.price * curr.quantité) * (1 - (curr.remise / 100)), 0) + parseFloat(DT); \r\n    return total.toFixed(3); \r\n  };\r\n\r\n  const handleUpdate = (event) => {\r\n    event.preventDefault();\r\n  \r\n    const nonEmptyInputs = inputs.filter(input => input.refAr !== '' && input.quantité !== '' && input.remise !== '');\r\n    const invalidReference = nonEmptyInputs.some(input => !references.includes(input.refAr));\r\n  \r\n    if (invalidReference) {\r\n      alert(\"Sélectionner une référence valide\");\r\n      return;\r\n    }\r\n  \r\n    const refArArray = nonEmptyInputs.map(input => ({\r\n      refAr: input.refAr,\r\n      price: input.price,\r\n      quantité: input.quantité,\r\n      remise: input.remise\r\n    }));\r\n  \r\n    const totalPrice = calculateTotal();\r\n    axios.put(`http://localhost:7777/factureVente/update/${selectedFacture.id}`, {\r\n      clName,\r\n      client_id,\r\n      date,\r\n      DT,\r\n      refAr: refArArray,\r\n      totalPrice\r\n    })\r\n    .then(res => {\r\n      console.log(res);\r\n      window.location.reload();\r\n    })\r\n    .catch(err => console.log('Error updating facture:', err));\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleAddInput();\r\n    }\r\n  };\r\n\r\n  const handleClientSelect = (name, code) => {\r\n    setClName(name);\r\n    setClientCode(code);\r\n    setFilteredClients([]);\r\n  };\r\n\r\n  const handleClientChange = (e) => {\r\n    const { value } = e.target;\r\n    setClName(value);\r\n\r\n    axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n      .then(res => {\r\n        setFilteredClients(res.data);\r\n      })\r\n      .catch(err => console.log('Error fetching clients:', err));\r\n\r\n    axios.get(`http://localhost:7777/clients/search?name=${value}`)\r\n      .then(res => {\r\n        if (res.data.length > 0) {\r\n          setClientCode(res.data[0].clID);\r\n        } else {\r\n          setClientCode('');\r\n        }\r\n      })\r\n      .catch(err => console.log('Error fetching client code:', err));\r\n  };\r\n\r\n  const handleClientBlur = () => {\r\n    setFilteredClients([]);\r\n  };\r\n\r\n  const handleClientCodeChange = (e) => {\r\n    const { value } = e.target;\r\n    setClientCode(value);\r\n\r\n    axios.get(`http://localhost:7777/clients/search?id=${value}`)\r\n      .then(res => {\r\n        if (res.data.length > 0) {\r\n          setClName(res.data[0].clName);\r\n        } else {\r\n          setClName('');\r\n        }\r\n      })\r\n      .catch(err => console.log('Error fetching client name:', err));\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: '20px', justifyContent: 'center' }}>\r\n      <div style={{ display: 'flex', flex: '1' }}>\r\n        <div>\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <label style={{ width: '120px' }} htmlFor=\"code-client\">Code client:</label>\r\n            <input\r\n              style={{ width: '200px' }}\r\n              type=\"text\"\r\n              id=\"code-client\"\r\n              name=\"code-client\"\r\n              value={client_id}\r\n              onChange={handleClientCodeChange}\r\n            />\r\n          </div>\r\n          <div style={{ marginBottom: '20px', position: 'relative' }}>\r\n            <label style={{ width: '120px' }} htmlFor=\"client\">Nom du client</label>\r\n            <input\r\n              style={{ width: '200px' }}\r\n              type=\"text\"\r\n              id=\"client\"\r\n              value={clName}\r\n              onChange={handleClientChange}\r\n              onBlur={handleClientBlur}\r\n            />\r\n            {filteredClients.length > 0 && (\r\n              <div style={{ position: 'absolute', top: '100%', left: 0, backgroundColor: 'white', border: '1px solid #ccc', width: '100%' }}>\r\n                {filteredClients.map((client, index) => (\r\n                  <div key={index} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleClientSelect(client.clName, client.clID)}>\r\n                    {client.clName}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <label style={{ width: '120px' }} htmlFor=\"date\">Date</label>\r\n            <input\r\n              style={{ width: '200px' }}\r\n              type=\"date\"\r\n              id=\"date\"\r\n              value={date}\r\n              onChange={(e) => setDate(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <label style={{ width: '120px' }} htmlFor=\"DT\">Droit de timbre</label>\r\n            <input\r\n              style={{ width: '200px' }}\r\n              type=\"text\"\r\n              id=\"DT\"\r\n              value={DT}\r\n              onChange={(e) => setDT(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {inputs.map((input, index) => (\r\n            <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n              <div style={{ flex: '1', marginRight: '10px' }}>\r\n                <label>Référence d'article</label>\r\n                <input\r\n                  list=\"references\"\r\n                  style={{ width: '100%' }}\r\n                  value={input.refAr}\r\n                  onChange={(e) => handleReferenceChange(e, index)}\r\n                />\r\n                <datalist id=\"references\">\r\n                  {references.map((reference, idx) => (\r\n                    <option key={idx} value={reference} />\r\n                  ))}\r\n                </datalist>\r\n              </div>\r\n              <div style={{ flex: '1', marginRight: '10px' }}>\r\n                <label>Prix vente TTC</label>\r\n                <input\r\n                  type=\"number\"\r\n                  style={{ width: '100%' }}\r\n                  value={input.price}\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div style={{ flex: '1', marginRight: '10px' }}>\r\n                <label>Quantité</label>\r\n                <input\r\n                  type=\"number\"\r\n                  style={{ width: '100%' }}\r\n                  value={input.quantité}\r\n                  onChange={(e) => handleQuantityChange(e, index)}\r\n                />\r\n              </div>\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <div style={{ flex: '1' }}>\r\n                  <label>Remise</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    style={{ width: '100%' }}\r\n                    value={input.remise}\r\n                    onChange={(e) => handleRemiseChange(e, index)}\r\n                    onKeyDown={handleKeyPress}\r\n                    ref={remiseInputRef}\r\n                  />\r\n                </div>\r\n                <div style={{ marginLeft: '10px' }}>\r\n                  <button type=\"button\" onClick={handleAddInput}>+</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          <div style={{ display: \"inline-block\", marginBottom: '20px', textAlign: 'center' }}>\r\n            <button\r\n              style={{ width: '200px', marginBottom: '10px' }}\r\n              type=\"button\"\r\n              // onClick={handleSubmit}\r\n            >\r\n              Ajouter\r\n            </button>\r\n            <button\r\n              style={{ width: '200px', marginBottom: '10px' }}\r\n              type=\"submit\"\r\n              onClick={handleUpdate}\r\n\r\n            >\r\n              Enregistrer\r\n            </button><br />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <label>Total</label>\r\n        <input\r\n        // type='text'\r\n        style={{ width: '100%' }}\r\n        value={calculateTotal()}\r\n        readOnly\r\n      />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateFactureVente;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGE,MAAMA,YAAY,GAAIC,KAAK,IAAK;EAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;EAEtB,MAAMC,cAAc,GAAGC,MAAM,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAK,KAAK,EAAE,IAAID,KAAK,CAACE,QAAQ,KAAK,EAAE,IAAIF,KAAK,CAACG,MAAM,KAAK,EAAE,CAAC;EACjH,MAAMC,gBAAgB,GAAGP,cAAc,CAACQ,IAAI,CAACL,KAAK,IAAI,CAACM,UAAU,CAACC,QAAQ,CAACP,KAAK,CAACC,KAAK,CAAC,CAAC;EAExF,IAAIG,gBAAgB,EAAE;IACpBI,KAAK,CAAC,mCAAmC,CAAC;IAC1C;EACF;EAEA,MAAMC,UAAU,GAAGZ,cAAc,CAACa,GAAG,CAACV,KAAK,KAAK;IAC9CC,KAAK,EAAED,KAAK,CAACC,KAAK;IAClBU,KAAK,EAAEX,KAAK,CAACW,KAAK;IAClBT,QAAQ,EAAEF,KAAK,CAACE,QAAQ;IACxBC,MAAM,EAAEH,KAAK,CAACG;EAChB,CAAC,CAAC,CAAC;EAEH,MAAMS,UAAU,GAAGC,cAAc,CAAC,CAAC;EACnCC,KAAK,CAACC,IAAI,CAAC,+CAA+C,EAAE;IAC1DC,MAAM;IACNC,SAAS;IACTC,IAAI;IACJC,EAAE;IACFlB,KAAK,EAAEQ,UAAU;IACjBG;EACF,CAAC,CAAC,CACDQ,IAAI,CAACC,GAAG,IAAI;IACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChBG,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC1B,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIN,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEK,GAAG,CAAC,CAAC;AAC5D,CAAC;;AAGH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOlB,KAAK,MAAM,OAAO;AAAC,SAAAmB,MAAA,IAAAC,OAAA;AAE1B,SAASC,kBAAkBA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM,CAACrB,MAAM,EAAEsB,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACb,SAAS,EAAEsB,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACZ,IAAI,EAAEsB,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACX,EAAE,EAAEsB,KAAK,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EACrC,MAAM,CAAChC,MAAM,EAAE4C,SAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC;IAAE7B,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAES,KAAK,EAAE,CAAC;IAAER,MAAM,EAAE;EAAE,CAAC,CAAC,CAAC;EACxF,MAAM,CAACG,UAAU,EAAEqC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMgB,cAAc,GAAGd,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACdjB,KAAK,CAACiC,GAAG,CAAC,+BAA+B,CAAC,CACvC3B,IAAI,CAACC,GAAG,IAAI;MACXsB,aAAa,CAACtB,GAAG,CAAC2B,IAAI,CAACtC,GAAG,CAACuC,OAAO,IAAIA,OAAO,CAACC,GAAG,CAAC,CAAC;IACrD,CAAC,CAAC,CACDvB,KAAK,CAACC,GAAG,IAAIN,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEK,GAAG,CAAC,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAENG,SAAS,CAAC,MAAM;IACd,IAAIK,eAAe,EAAE;MACnBd,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEa,eAAe,CAAC;MACvEE,SAAS,CAACF,eAAe,CAACpB,MAAM,IAAI,EAAE,CAAC;MACvCuB,aAAa,CAACH,eAAe,CAACnB,SAAS,IAAI,EAAE,CAAC;MAC9CuB,OAAO,CAACJ,eAAe,CAAClB,IAAI,IAAI,EAAE,CAAC;MACnCuB,KAAK,CAACL,eAAe,CAACjB,EAAE,IAAI,OAAO,CAAC;MACpCuB,SAAS,CAACN,eAAe,CAACe,QAAQ,IAAI,CAAC;QAAElD,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAES,KAAK,EAAE,CAAC;QAAER,MAAM,EAAE;MAAE,CAAC,CAAC,CAAC;IAC3F;EACF,CAAC,EAAE,CAACiC,eAAe,CAAC,CAAC;EAErB,MAAMgB,qBAAqB,GAAGA,CAACC,SAAS,EAAEC,KAAK,KAAK;IAClDxC,KAAK,CAACiC,GAAG,CAAE,sCAAqCM,SAAU,EAAC,CAAC,CACzDjC,IAAI,CAACC,GAAG,IAAI;MACX,MAAMV,KAAK,GAAGU,GAAG,CAAC2B,IAAI,CAACrC,KAAK;MAC5B,MAAM4C,SAAS,GAAG,CAAC,GAAGzD,MAAM,CAAC;MAC7ByD,SAAS,CAACD,KAAK,CAAC,CAAC3C,KAAK,GAAGA,KAAK;MAC9B+B,SAAS,CAACa,SAAS,CAAC;IACtB,CAAC,CAAC,CACD5B,KAAK,CAACC,GAAG,IAAIN,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEK,GAAG,CAAC,CAAC;EAC5D,CAAC;EAED,MAAM4B,qBAAqB,GAAGA,CAAC7D,KAAK,EAAE2D,KAAK,KAAK;IAC9C,MAAM;MAAEG;IAAM,CAAC,GAAG9D,KAAK,CAAC+D,MAAM;IAC9B,MAAMH,SAAS,GAAG,CAAC,GAAGzD,MAAM,CAAC;IAC7ByD,SAAS,CAACD,KAAK,CAAC,CAACrD,KAAK,GAAGwD,KAAK;IAC9Bf,SAAS,CAACa,SAAS,CAAC;IACpBH,qBAAqB,CAACK,KAAK,EAAEH,KAAK,CAAC;EACrC,CAAC;EAED,MAAMK,kBAAkB,GAAGA,CAAChE,KAAK,EAAE2D,KAAK,KAAK;IAC3C,MAAM;MAAEG;IAAM,CAAC,GAAG9D,KAAK,CAAC+D,MAAM;IAC9B,MAAMH,SAAS,GAAG,CAAC,GAAGzD,MAAM,CAAC;IAC7ByD,SAAS,CAACD,KAAK,CAAC,CAACnD,MAAM,GAAGsD,KAAK;IAC/Bf,SAAS,CAACa,SAAS,CAAC;EACtB,CAAC;EAED,MAAMK,oBAAoB,GAAGA,CAACjE,KAAK,EAAE2D,KAAK,KAAK;IAC7C,MAAM;MAAEG;IAAM,CAAC,GAAG9D,KAAK,CAAC+D,MAAM;IAC9B,MAAMH,SAAS,GAAG,CAAC,GAAGzD,MAAM,CAAC;IAC7ByD,SAAS,CAACD,KAAK,CAAC,CAACpD,QAAQ,GAAGuD,KAAK;IAEjC3C,KAAK,CAACiC,GAAG,CAAE,iCAAgCQ,SAAS,CAACD,KAAK,CAAC,CAACrD,KAAM,WAAU,CAAC,CAC1EmB,IAAI,CAACC,GAAG,IAAI;MACX,MAAMwC,iBAAiB,GAAGxC,GAAG,CAAC2B,IAAI,CAACc,QAAQ;MAC3C,MAAMC,iBAAiB,GAAGF,iBAAiB,GAAGG,QAAQ,CAACP,KAAK,CAAC;MAE7D,IAAIM,iBAAiB,GAAG,CAAC,EAAE;QACzBvD,KAAK,CAAE,+DAA8DqD,iBAAkB,wBAAuB,CAAC;QAC/GN,SAAS,CAACD,KAAK,CAAC,CAACpD,QAAQ,GAAG2D,iBAAiB;MAC/C;MAEA,MAAMI,WAAW,GAAGV,SAAS,CAACD,KAAK,CAAC,CAAC3C,KAAK,IAAI,CAAC,GAAI4C,SAAS,CAACD,KAAK,CAAC,CAACnD,MAAM,GAAG,GAAI,CAAC;MAClFoD,SAAS,CAACD,KAAK,CAAC,CAAC3C,KAAK,GAAGuD,UAAU,CAACD,WAAW,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;MAC3DzB,SAAS,CAACa,SAAS,CAAC;IACtB,CAAC,CAAC,CACD5B,KAAK,CAACC,GAAG,IAAIN,OAAO,CAAC8C,KAAK,CAAC,0BAA0B,EAAExC,GAAG,CAAC,CAAC;IAE/D,MAAMyC,QAAQ,GAAGd,SAAS,CAACe,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAIC,IAAI,CAAC7D,KAAK,GAAG6D,IAAI,CAACtE,QAAS,EAAE,CAAC,CAAC,GAAGgE,UAAU,CAAC/C,EAAE,CAAC;IACxGG,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE8C,QAAQ,CAAC;EACrC,CAAC;EAED,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,OAAO,GAAG5E,MAAM,CAACO,IAAI,CAACL,KAAK,IAAIA,KAAK,CAACC,KAAK,KAAK,EAAE,IAAID,KAAK,CAACE,QAAQ,KAAK,EAAE,IAAIF,KAAK,CAACG,MAAM,KAAK,EAAE,CAAC;IACxG,IAAIuE,OAAO,EAAE;MACXlE,KAAK,CAAC,6FAA6F,CAAC;MACpG;IACF;IACAkC,SAAS,CAAC,CAAC,GAAG5C,MAAM,EAAE;MAAEG,KAAK,EAAE,EAAE;MAAEU,KAAK,EAAE,CAAC;MAAET,QAAQ,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAE,CAAC,CAAC,CAAC;EAC1E,CAAC;EAED,MAAMU,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACf,MAAM,EAAE,OAAO,CAAC;IACrB,MAAM6E,KAAK,GAAG7E,MAAM,CAACwE,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAIC,IAAI,CAAC7D,KAAK,GAAG6D,IAAI,CAACtE,QAAQ,IAAK,CAAC,GAAIsE,IAAI,CAACrE,MAAM,GAAG,GAAI,CAAC,EAAE,CAAC,CAAC,GAAG+D,UAAU,CAAC/C,EAAE,CAAC;IAC9H,OAAOwD,KAAK,CAACR,OAAO,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,MAAMS,YAAY,GAAIjF,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,MAAMC,cAAc,GAAGC,MAAM,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAK,KAAK,EAAE,IAAID,KAAK,CAACE,QAAQ,KAAK,EAAE,IAAIF,KAAK,CAACG,MAAM,KAAK,EAAE,CAAC;IACjH,MAAMC,gBAAgB,GAAGP,cAAc,CAACQ,IAAI,CAACL,KAAK,IAAI,CAACM,UAAU,CAACC,QAAQ,CAACP,KAAK,CAACC,KAAK,CAAC,CAAC;IAExF,IAAIG,gBAAgB,EAAE;MACpBI,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACF;IAEA,MAAMC,UAAU,GAAGZ,cAAc,CAACa,GAAG,CAACV,KAAK,KAAK;MAC9CC,KAAK,EAAED,KAAK,CAACC,KAAK;MAClBU,KAAK,EAAEX,KAAK,CAACW,KAAK;MAClBT,QAAQ,EAAEF,KAAK,CAACE,QAAQ;MACxBC,MAAM,EAAEH,KAAK,CAACG;IAChB,CAAC,CAAC,CAAC;IAEH,MAAMS,UAAU,GAAGC,cAAc,CAAC,CAAC;IACnCC,KAAK,CAAC+D,GAAG,CAAE,6CAA4CzC,eAAe,CAAC0C,EAAG,EAAC,EAAE;MAC3E9D,MAAM;MACNC,SAAS;MACTC,IAAI;MACJC,EAAE;MACFlB,KAAK,EAAEQ,UAAU;MACjBG;IACF,CAAC,CAAC,CACDQ,IAAI,CAACC,GAAG,IAAI;MACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBG,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIN,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEK,GAAG,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMmD,cAAc,GAAIpF,KAAK,IAAK;IAChC,IAAIA,KAAK,CAACqF,GAAG,KAAK,OAAO,EAAE;MACzBP,cAAc,CAAC,CAAC;IAClB;EACF,CAAC;EAED,MAAMQ,kBAAkB,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;IACzC7C,SAAS,CAAC4C,IAAI,CAAC;IACf3C,aAAa,CAAC4C,IAAI,CAAC;IACnBtC,kBAAkB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,MAAMuC,kBAAkB,GAAIC,CAAC,IAAK;IAChC,MAAM;MAAE5B;IAAM,CAAC,GAAG4B,CAAC,CAAC3B,MAAM;IAC1BpB,SAAS,CAACmB,KAAK,CAAC;IAEhB3C,KAAK,CAACiC,GAAG,CAAE,6CAA4CU,KAAM,EAAC,CAAC,CAC5DrC,IAAI,CAACC,GAAG,IAAI;MACXwB,kBAAkB,CAACxB,GAAG,CAAC2B,IAAI,CAAC;IAC9B,CAAC,CAAC,CACDrB,KAAK,CAACC,GAAG,IAAIN,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEK,GAAG,CAAC,CAAC;IAE5Dd,KAAK,CAACiC,GAAG,CAAE,6CAA4CU,KAAM,EAAC,CAAC,CAC5DrC,IAAI,CAACC,GAAG,IAAI;MACX,IAAIA,GAAG,CAAC2B,IAAI,CAACsC,MAAM,GAAG,CAAC,EAAE;QACvB/C,aAAa,CAAClB,GAAG,CAAC2B,IAAI,CAAC,CAAC,CAAC,CAACuC,IAAI,CAAC;MACjC,CAAC,MAAM;QACLhD,aAAa,CAAC,EAAE,CAAC;MACnB;IACF,CAAC,CAAC,CACDZ,KAAK,CAACC,GAAG,IAAIN,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEK,GAAG,CAAC,CAAC;EAClE,CAAC;EAED,MAAM4D,gBAAgB,GAAGA,CAAA,KAAM;IAC7B3C,kBAAkB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,MAAM4C,sBAAsB,GAAIJ,CAAC,IAAK;IACpC,MAAM;MAAE5B;IAAM,CAAC,GAAG4B,CAAC,CAAC3B,MAAM;IAC1BnB,aAAa,CAACkB,KAAK,CAAC;IAEpB3C,KAAK,CAACiC,GAAG,CAAE,2CAA0CU,KAAM,EAAC,CAAC,CAC1DrC,IAAI,CAACC,GAAG,IAAI;MACX,IAAIA,GAAG,CAAC2B,IAAI,CAACsC,MAAM,GAAG,CAAC,EAAE;QACvBhD,SAAS,CAACjB,GAAG,CAAC2B,IAAI,CAAC,CAAC,CAAC,CAAChC,MAAM,CAAC;MAC/B,CAAC,MAAM;QACLsB,SAAS,CAAC,EAAE,CAAC;MACf;IACF,CAAC,CAAC,CACDX,KAAK,CAACC,GAAG,IAAIN,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEK,GAAG,CAAC,CAAC;EAClE,CAAC;EAED,oBACEM,OAAA;IAAKwD,KAAK,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACvD3D,OAAA;MAAKwD,KAAK,EAAE;QAAEI,OAAO,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAI,CAAE;MAAAF,QAAA,gBACzC3D,OAAA;QAAA2D,QAAA,gBACE3D,OAAA;UAAKwD,KAAK,EAAE;YAAEM,YAAY,EAAE;UAAO,CAAE;UAAAH,QAAA,gBACnC3D,OAAA;YAAOwD,KAAK,EAAE;cAAEO,KAAK,EAAE;YAAQ,CAAE;YAACC,OAAO,EAAC,aAAa;YAAAL,QAAA,EAAC;UAAY;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5EpE,OAAA;YACEwD,KAAK,EAAE;cAAEO,KAAK,EAAE;YAAQ,CAAE;YAC1BM,IAAI,EAAC,MAAM;YACXzB,EAAE,EAAC,aAAa;YAChBI,IAAI,EAAC,aAAa;YAClBzB,KAAK,EAAExC,SAAU;YACjBuF,QAAQ,EAAEf;UAAuB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNpE,OAAA;UAAKwD,KAAK,EAAE;YAAEM,YAAY,EAAE,MAAM;YAAES,QAAQ,EAAE;UAAW,CAAE;UAAAZ,QAAA,gBACzD3D,OAAA;YAAOwD,KAAK,EAAE;cAAEO,KAAK,EAAE;YAAQ,CAAE;YAACC,OAAO,EAAC,QAAQ;YAAAL,QAAA,EAAC;UAAa;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxEpE,OAAA;YACEwD,KAAK,EAAE;cAAEO,KAAK,EAAE;YAAQ,CAAE;YAC1BM,IAAI,EAAC,MAAM;YACXzB,EAAE,EAAC,QAAQ;YACXrB,KAAK,EAAEzC,MAAO;YACdwF,QAAQ,EAAEpB,kBAAmB;YAC7BsB,MAAM,EAAElB;UAAiB;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,EACD1D,eAAe,CAAC0C,MAAM,GAAG,CAAC,iBACzBpD,OAAA;YAAKwD,KAAK,EAAE;cAAEe,QAAQ,EAAE,UAAU;cAAEE,GAAG,EAAE,MAAM;cAAEC,IAAI,EAAE,CAAC;cAAEC,eAAe,EAAE,OAAO;cAAEC,MAAM,EAAE,gBAAgB;cAAEb,KAAK,EAAE;YAAO,CAAE;YAAAJ,QAAA,EAC3HjD,eAAe,CAAClC,GAAG,CAAC,CAACqG,MAAM,EAAEzD,KAAK,kBACjCpB,OAAA;cAAiBwD,KAAK,EAAE;gBAAEsB,OAAO,EAAE,KAAK;gBAAEC,MAAM,EAAE;cAAU,CAAE;cAACC,OAAO,EAAEA,CAAA,KAAMjC,kBAAkB,CAAC8B,MAAM,CAAC/F,MAAM,EAAE+F,MAAM,CAACxB,IAAI,CAAE;cAAAM,QAAA,EAC1HkB,MAAM,CAAC/F;YAAM,GADNsC,KAAK;cAAA6C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACNpE,OAAA;UAAKwD,KAAK,EAAE;YAAEM,YAAY,EAAE;UAAO,CAAE;UAAAH,QAAA,gBACnC3D,OAAA;YAAOwD,KAAK,EAAE;cAAEO,KAAK,EAAE;YAAQ,CAAE;YAACC,OAAO,EAAC,MAAM;YAAAL,QAAA,EAAC;UAAI;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7DpE,OAAA;YACEwD,KAAK,EAAE;cAAEO,KAAK,EAAE;YAAQ,CAAE;YAC1BM,IAAI,EAAC,MAAM;YACXzB,EAAE,EAAC,MAAM;YACTrB,KAAK,EAAEvC,IAAK;YACZsF,QAAQ,EAAGnB,CAAC,IAAK7C,OAAO,CAAC6C,CAAC,CAAC3B,MAAM,CAACD,KAAK;UAAE;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNpE,OAAA;UAAKwD,KAAK,EAAE;YAAEM,YAAY,EAAE;UAAO,CAAE;UAAAH,QAAA,gBACnC3D,OAAA;YAAOwD,KAAK,EAAE;cAAEO,KAAK,EAAE;YAAQ,CAAE;YAACC,OAAO,EAAC,IAAI;YAAAL,QAAA,EAAC;UAAe;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtEpE,OAAA;YACEwD,KAAK,EAAE;cAAEO,KAAK,EAAE;YAAQ,CAAE;YAC1BM,IAAI,EAAC,MAAM;YACXzB,EAAE,EAAC,IAAI;YACPrB,KAAK,EAAEtC,EAAG;YACVqF,QAAQ,EAAGnB,CAAC,IAAK5C,KAAK,CAAC4C,CAAC,CAAC3B,MAAM,CAACD,KAAK;UAAE;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNpE,OAAA;QAAA2D,QAAA,EACG/F,MAAM,CAACY,GAAG,CAAC,CAACV,KAAK,EAAEsD,KAAK,kBACvBpB,OAAA;UAAiBwD,KAAK,EAAE;YAAEI,OAAO,EAAE,MAAM;YAAEqB,UAAU,EAAE,QAAQ;YAAEnB,YAAY,EAAE;UAAO,CAAE;UAAAH,QAAA,gBACtF3D,OAAA;YAAKwD,KAAK,EAAE;cAAEK,IAAI,EAAE,GAAG;cAAEqB,WAAW,EAAE;YAAO,CAAE;YAAAvB,QAAA,gBAC7C3D,OAAA;cAAA2D,QAAA,EAAO;YAAmB;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAClCpE,OAAA;cACEmF,IAAI,EAAC,YAAY;cACjB3B,KAAK,EAAE;gBAAEO,KAAK,EAAE;cAAO,CAAE;cACzBxC,KAAK,EAAEzD,KAAK,CAACC,KAAM;cACnBuG,QAAQ,EAAGnB,CAAC,IAAK7B,qBAAqB,CAAC6B,CAAC,EAAE/B,KAAK;YAAE;cAAA6C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC,eACFpE,OAAA;cAAU4C,EAAE,EAAC,YAAY;cAAAe,QAAA,EACtBvF,UAAU,CAACI,GAAG,CAAC,CAAC2C,SAAS,EAAEiE,GAAG,kBAC7BpF,OAAA;gBAAkBuB,KAAK,EAAEJ;cAAU,GAAtBiE,GAAG;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAqB,CACtC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC,eACNpE,OAAA;YAAKwD,KAAK,EAAE;cAAEK,IAAI,EAAE,GAAG;cAAEqB,WAAW,EAAE;YAAO,CAAE;YAAAvB,QAAA,gBAC7C3D,OAAA;cAAA2D,QAAA,EAAO;YAAc;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7BpE,OAAA;cACEqE,IAAI,EAAC,QAAQ;cACbb,KAAK,EAAE;gBAAEO,KAAK,EAAE;cAAO,CAAE;cACzBxC,KAAK,EAAEzD,KAAK,CAACW,KAAM;cACnB4G,QAAQ;YAAA;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNpE,OAAA;YAAKwD,KAAK,EAAE;cAAEK,IAAI,EAAE,GAAG;cAAEqB,WAAW,EAAE;YAAO,CAAE;YAAAvB,QAAA,gBAC7C3D,OAAA;cAAA2D,QAAA,EAAO;YAAQ;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACvBpE,OAAA;cACEqE,IAAI,EAAC,QAAQ;cACbb,KAAK,EAAE;gBAAEO,KAAK,EAAE;cAAO,CAAE;cACzBxC,KAAK,EAAEzD,KAAK,CAACE,QAAS;cACtBsG,QAAQ,EAAGnB,CAAC,IAAKzB,oBAAoB,CAACyB,CAAC,EAAE/B,KAAK;YAAE;cAAA6C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNpE,OAAA;YAAKwD,KAAK,EAAE;cAAEI,OAAO,EAAE,MAAM;cAAEqB,UAAU,EAAE;YAAS,CAAE;YAAAtB,QAAA,gBACpD3D,OAAA;cAAKwD,KAAK,EAAE;gBAAEK,IAAI,EAAE;cAAI,CAAE;cAAAF,QAAA,gBACxB3D,OAAA;gBAAA2D,QAAA,EAAO;cAAM;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACrBpE,OAAA;gBACEqE,IAAI,EAAC,QAAQ;gBACbb,KAAK,EAAE;kBAAEO,KAAK,EAAE;gBAAO,CAAE;gBACzBxC,KAAK,EAAEzD,KAAK,CAACG,MAAO;gBACpBqG,QAAQ,EAAGnB,CAAC,IAAK1B,kBAAkB,CAAC0B,CAAC,EAAE/B,KAAK,CAAE;gBAC9CkE,SAAS,EAAEzC,cAAe;gBAC1B7B,GAAG,EAAEJ;cAAe;gBAAAqD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACNpE,OAAA;cAAKwD,KAAK,EAAE;gBAAE+B,UAAU,EAAE;cAAO,CAAE;cAAA5B,QAAA,eACjC3D,OAAA;gBAAQqE,IAAI,EAAC,QAAQ;gBAACW,OAAO,EAAEzC,cAAe;gBAAAoB,QAAA,EAAC;cAAC;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA,GAhDEhD,KAAK;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAiDV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNpE,OAAA;QAAA2D,QAAA,eACE3D,OAAA;UAAKwD,KAAK,EAAE;YAAEI,OAAO,EAAE,cAAc;YAAEE,YAAY,EAAE,MAAM;YAAE0B,SAAS,EAAE;UAAS,CAAE;UAAA7B,QAAA,gBACjF3D,OAAA;YACEwD,KAAK,EAAE;cAAEO,KAAK,EAAE,OAAO;cAAED,YAAY,EAAE;YAAO,CAAE;YAChDO,IAAI,EAAC;YACL;YAAA;YAAAV,QAAA,EACD;UAED;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTpE,OAAA;YACEwD,KAAK,EAAE;cAAEO,KAAK,EAAE,OAAO;cAAED,YAAY,EAAE;YAAO,CAAE;YAChDO,IAAI,EAAC,QAAQ;YACbW,OAAO,EAAEtC,YAAa;YAAAiB,QAAA,EAEvB;UAED;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAAApE,OAAA;YAAAiE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNpE,OAAA;MAAKwD,KAAK,EAAE;QAAEM,YAAY,EAAE;MAAO,CAAE;MAAAH,QAAA,gBACnC3D,OAAA;QAAA2D,QAAA,EAAO;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpBpE,OAAA;QACA;QACAwD,KAAK,EAAE;UAAEO,KAAK,EAAE;QAAO,CAAE;QACzBxC,KAAK,EAAE5C,cAAc,CAAC,CAAE;QACxB0G,QAAQ;MAAA;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjE,EAAA,CAnUQF,kBAAkB;AAAAwF,EAAA,GAAlBxF,kBAAkB;AAqU3B,eAAeA,kBAAkB;AAAC,IAAAwF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}